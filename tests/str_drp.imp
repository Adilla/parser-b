IMPLEMENTATION
  str_drp( str_gho, str_xbl, str_joy, str_ith, str_waj, str_nrr )

REFINES
  str_niy

OPERATIONS
  str_lus, str_wyq, str_zry, str_dvi, str_wzp, str_pjx, str_pjn, str_dnf,
  str_njc, str_akk
  <--
  str_grq (str_ows, str_foe)
  =
  ASSERT
    !(str_iie).
    (#(str_zsz, str_aau, str_xtq, str_fhs, str_jbv, str_ebc).
     ({ str_idg, str_tsv, str_hmr, str_sxq, str_iin, str_tzj, str_zyt
        |
        not(!(str_ygd, str_nzt).(NAT /: INT <=> str_wkr$0 <= str_qgr$0)) } <:
      str_lor$0))
  THEN
    SELECT
      !
        (str_kxt, str_iis, str_fyz, str_vjs, str_nuk, str_yhl, str_cca,
         str_shq, str_dzv).
      (bool
         (#(str_mzg, str_xgb, str_dnt, str_yri, str_bqr).
          (#(str_ftg, str_eoh, str_sht, str_uda).(not(str_zds <: str_ffk$0)))) <:
       rec
         (str_oan: str_tfm$0,
          str_vdu: [],
          str_eke: str_zno,
          str_evl: str_yji,
          str_udx: STRING,
          str_ohk: str_dkj))
    THEN
      str_qli, str_blq, str_nps, str_xxs, str_sgt, str_jlz, str_bga, str_phx,
      str_deo, str_ydy :(
        !(str_vfs, str_hjr, str_yhr, str_meb, str_rvo).
        (!(str_aae, str_emp, str_fjv).
         (!(str_phs, str_eta, str_eyv, str_ckt, str_ggq, str_phr).
          (str_osn /= str_aue &
           not
             (#
                (str_nee, str_ouw, str_aol, str_hcy, str_wju, str_cvr,
                 str_ein, str_tck, str_rbq, str_piq, str_uji).
              (not(str_sjl <<: []))))))
      ) ||
      skip
    WHEN
      #
        (str_jfl, str_luy, str_tjc, str_tqs, str_igd, str_fcy, str_spg,
         str_esz, str_knw).
      (left
         (PI(str_jiu, str_fhk, str_xks, str_fsn).
          (INTEGER /: str_ewl$0|
           [rec
              (str_mpf: str_rab$0,
               str_kqh: NATURAL,
               str_sqy: str_mgg$0,
               str_mkb: str_sti,
               str_xcq: str_kuu$0,
               str_zeg: {},
               str_kkh: str_dth$0),
            str_qff,
            str_oqn$0,
            INTEGER,
            str_scq,
            TRUE,
            str_ofu$0])) :
       struct
         (str_sut: BOOL,
          str_djt: str_hai$0,
          str_cmy: str_jou,
          str_tny: MININT,
          str_qvj: str_jtt,
          str_ghi: str_ygc))
    THEN
      skip
    WHEN
      NAT <:
      (NATURAL <- (NAT1(str_xtg)))
      ,
      rec
        (str_qud: str_ahq,
         str_jss: str_riq,
         str_mag: str_rcb$0,
         str_fza: MAXINT,
         str_txl:
         { str_lwe, str_mhy, str_qea, str_xoq, str_opm, str_znc
           |
           str_yin = str_ena$0 },
         str_evd: BOOL,
         str_mlf: str_oct$0)
    THEN
      str_msb'str_pyf
      :=
      rec
        (str_liz:
         {{ str_rhh | str_ubz$0 > STRING },
          MININT,
          STRING,
          ({str_fmp, NATURAL1, str_ukk$0, [], str_xkv, str_baz}
             ({str_ome, FALSE, NATURAL1, str_vhd$0, str_xed$0, str_rke$0})),
          str_yza$0,
          str_gez$0'str_lyw})
    ELSE
      ASSERT
        ([str_sra, TRUE] <+ (perm(NAT +-> INTEGER)))
          (bool(str_jjc$0 <= str_zbj$0)) <=
        str_pji
      THEN
        CHOICE
          skip
        OR
          str_ckj, str_dmp, str_vid, str_nom, str_seo, str_iue, str_tqj,
          str_bvj, str_dpk :(
            not
              (!
                 (str_hec, str_orr, str_ppp, str_pqh, str_fvg, str_hcq,
                  str_wfl).
               (not
                  (#(str_hvq, str_ebt, str_rxt, str_ard).
                   ({} <<:
                    [str_rnt$0'str_mbf, MININT, str_qro$0, str_igz$0, NATURAL]))))
          )
        OR
          str_gam'str_qaj
          :=
          bool
            (not
               (!(str_suw, str_sok).
                (not(str_xzd <-> str_ltm < NAT) <=> str_mzi = STRING)))
        OR
          str_dif'str_jwf
          :=
          (seq1
             (struct
                (str_iye: "str_doa",
                 str_qrb: str_gqk,
                 str_xbg: str_crn$0,
                 str_lzm: NATURAL1,
                 str_ess:
                 PI(str_kll, str_miz, str_bml). ([] >= STRING| str_uxq$0),
                 str_nvk: str_mib$0,
                 str_vuw:
                 {str_xkk, NAT, str_gsk, str_bvi, str_pyc, NATURAL1, str_sdr,
                  str_tpp$0}))) +->
          (str_ymm
           |->
           PI(str_thq, str_gdk, str_hof). (FALSE <: str_pkc| str_rur))
        OR
          ANY
            str_cmf, str_zzz, str_waa, str_ife
          WHERE
            #
              (str_eto, str_owz, str_ugf, str_gtc, str_jhy, str_nuc, str_rdh,
               str_vdh, str_gqc).
            (not
               (str_qar :
                struct
                  (str_wou: str_xoq,
                   str_ajd: str_fmy,
                   str_jrb: str_vmq$0,
                   str_qvb: str_khm$0)
                ,
                {{str_kvl$0, {}, str_hdm, str_gik, str_feh$0}, str_vfa$0}))
          THEN
            LET
              str_gps, str_qwc, str_hpe, str_uch, str_djr, str_pcf, str_sst,
              str_sdk, str_chs, str_hqk, str_tti
            BE
              str_fav
              =
              bool
                (!(str_fct, str_xhe, str_qex, str_uwq, str_zgz, str_xnz).
                 (not
                    (!(str_efs, str_qap, str_pki, str_dwn, str_xvk, str_cpk).
                     (str_mgo$0 : str_szf))))
                (STRING'str_dcx)&
              str_luc
              =
              ((str_tbh$0 , NAT)
                 ({ str_zod, str_sld, str_ipj, str_stb, str_vrd, str_ddn,
                    str_rmj, str_ijk, str_ibs, str_dnp, str_tst
                    |
                    #
                      (str_inq, str_xhr, str_gpn, str_rez, str_aky, str_xbd,
                       str_uub).
                    (NATURAL1 <: str_nfy$0) or
                    str_fss <<: TRUE })) \/
              struct(str_bbg: TRUE)
            IN
              str_sqp'str_bzu
              :=
              struct
                (str_nsj:
                 (perm
                    (INTER(str_lbr, str_pnk, str_ukj, str_juu).
                     (str_kui$0 : str_fke| str_qhv$0))),
                 str_wxf: (MININT ** NATURAL),
                 str_mbl: str_lma,
                 str_sxm: [str_kok$0, TRUE, NAT1],
                 str_kiw: (str_ncw(STRING(str_tct$0))))
            END
          END
        END
      END
    END
  END;

  str_ayu, str_gro, str_ksq, str_mlb, str_jnz, str_nuw, str_fxw, str_emy
  <--
  str_vxk (str_wga, str_jwr, str_hjl, str_pzz, str_goe, str_orn)
  =
  WHILE
    %(str_mwy, str_yky, str_mgx, str_oul, str_idv, str_bpq, str_bqs).
    (str_fpj$0 < str_kpq| bool(not(str_dll > NAT1))) <:
    UNION
      (str_tzp, str_znu, str_epx, str_qsy, str_bha, str_uog, str_isl,
       str_oih, str_frn, str_ynh).
    (NATURAL /: []| str_ami$0'str_pds)
  DO
    SELECT
      (not
         (!(str_kyk, str_kln, str_zyk, str_qum, str_xme, str_tmr, str_idq).
          (str_dhq <= str_cgn)) &
       str_zrx <<: str_ofe) <=>
      not
        (#
           (str_hqf, str_pjm, str_kkr, str_ang, str_ucl, str_gnx, str_nbk,
            str_vgu).
         (not(str_usa > INTEGER)))
    THEN
      WHILE
        !
          (str_yyy, str_nyn, str_vet, str_ogx, str_ohq, str_mxq, str_gkf,
           str_bub, str_ikn, str_aem, str_gug).
        (!(str_bxz, str_pam, str_kmn).
         (!(str_nrz, str_jot, str_kqw, str_pkg, str_xlv).
          (!
             (str_mfn, str_auo, str_stk, str_pnn, str_qql, str_cnq, str_qtr,
              str_rdb).
           (#
              (str_qyy, str_qih, str_hpy, str_udh, str_voi, str_cee, str_yru,
               str_efe, str_csc).
            (INT /= str_guh or str_oqy <= str_hhf$0)) =>
           str_tpy <= str_kxd)))
      DO
        str_oav, str_tnn, str_jlq, str_bez, str_vhm :(
          #
            (str_ejd, str_qjt, str_rhu, str_hhi, str_aqr, str_upp, str_eak,
             str_ztg, str_kmh, str_vyv, str_ili).
          (not
             (#
                (str_kuw, str_axc, str_ftl, str_cbs, str_yhz, str_trp, str_kbp).
              (str_sci$0 /: str_zes$0)) &
           !
             (str_wsr, str_xrs, str_gga, str_xmk, str_psl, str_agy, str_led,
              str_vso, str_qoz).
           (#(str_vmb, str_roz, str_snq, str_ktc, str_sjb).
            (str_lvv <<: str_ibd$0 or str_mpe$0 >= MAXINT)))
        )
      INVARIANT
        #(str_cpp).
        (!
           (str_klh, str_gif, str_ywq, str_vzp, str_jbg, str_osr, str_gkm,
            str_pnr).
         (NATURAL /= INTEGER) &
         !(str_mqe).
         (NAT1 <<: str_ewx$0 &
          #(str_mdf, str_mfu, str_tpz, str_dkc, str_gqi, str_mif, str_was).
          (str_tzj /: str_abo$0)))
      VARIANT
        { str_kvl, str_tdq, str_ykq, str_fsh, str_geo, str_slg, str_jsq
          |
          str_dxz /<<: str_owr }
        |->
        bool
          (#(str_zfv, str_lxa).
           (struct
              (str_dzm: STRING,
               str_mkn: str_nxq$0,
               str_uia: str_cbi,
               str_szr: str_cjt$0,
               str_gsp: MININT,
               str_qlv: NATURAL,
               str_ojd: str_mhk$0,
               str_abh: str_hfd$0) >=
            str_crt))
      END
    WHEN
      !(str_joo, str_aaz, str_blx, str_urg).
      (!
         (str_tih, str_hrz, str_ssa, str_lvq, str_iuz, str_egy, str_wnm,
          str_owd).
       (not
          ((str_hhm$0 mod str_inu$0)(str_cvy) =
           { str_jak, str_lrs, str_unq, str_sul, str_pfq, str_pll, str_wfp,
             str_cyo, str_mfb, str_yfi, str_bxp
             |
             str_jde$0 <= str_eyp$0 })))
    THEN
      ASSERT
        (str_ciq || NAT) :
        bool
          (#(str_mjj, str_xeu, str_luo, str_wcn, str_zkc).
           (INTEGER <: str_rsn$0 or TRUE /<<: str_oai$0)) <=>
        str_kqi <: NATURAL
      THEN
        VAR
          str_bib, str_mss
        IN
          CASE
            str_pya$0
            ,
            {str_ykb'str_upi,
             struct
               (str_wrf:
                rec
                  (str_ymu: NATURAL,
                   str_btv: str_fgh$0,
                   str_oku: str_aaq,
                   str_umq: INTEGER,
                   str_kwc: MAXINT),
                str_ois: str_nax),
             str_cbs$0,
             [INTEGER, str_uyb$0, NAT, str_aip$0, str_kjh$0, str_ycq$0,
              str_cnx]}
              'str_udx
            OF
            EITHER
              FIN1
                ({ str_kug, str_ixm, str_afj, str_rdp, str_ifq, str_ded
                   |
                   arity(str_gjh) <=
                   str_enh +
                   rec
                     (str_oak: str_igx$0'str_qbh,
                      str_mew: str_jsu$0,
                      str_bag: {},
                      str_dym: str_tas,
                      str_jws: FALSE,
                      str_lvz: str_sfo$0) })
            THEN
              skip
            OR
              postfix
                (struct
                   (str_tsm: ((INT , str_bvi)(str_zsn$0)),
                    str_ocj: str_ncj,
                    str_xyf:
                    struct
                      (str_vwn: str_fwb$0,
                       str_lhz:
                       (struct
                          (str_kgi: str_zie$0,
                           str_noy: str_yvo$0,
                           str_mem: str_aav,
                           str_ldo: str_vec$0)
                        ,
                        str_etl),
                       str_xcg: str_nfz$0,
                       str_rsc: str_bxp,
                       str_fex: FALSE,
                       str_msx: str_cax),
                    str_grl: str_aax$0,
                    str_xjg: [],
                    str_ifs: {},
                    str_lwe: TRUE,
                    str_thi: str_lsi))
            THEN
              str_eiq, str_rcp, str_wwl, str_zla, str_cwh, str_dfk, str_iou,
              str_mzw, str_wks, str_lew :(
                #
                  (str_xcu, str_lyb, str_ulw, str_qdf, str_ugq, str_eut,
                   str_bbs, str_ibg, str_hoa).
                (!
                   (str_oww, str_fht, str_euk, str_fso, str_zom, str_jsf,
                    str_thn, str_siy).
                 (rec
                    (str_tcm: STRING,
                     str_ueu: str_kuy$0,
                     str_zcy: str_akt,
                     str_hth: str_hau,
                     str_zmx: str_imw$0,
                     str_haf:
                     { str_tur, str_aix, str_msj
                       |
                       str_byj /<: str_ofb$0 or MAXINT >= str_mar },
                     str_gbd: str_duv$0,
                     str_ybh: str_olv) /=
                  { str_ntt | str_cpf$0 <<: NATURAL1 }))
              )
            OR
              {str_qpc,
               SIGMA(str_skm, str_gjs, str_lxh, str_lpk, str_tjr, str_trf).
               (TRUE : TRUE| str_puu$0),
               (iseq1(str_gdk$0)),
               str_msl$0,
               str_jrb}
                (STRING(seq1([NATURAL1, MININT])))
            THEN
              str_sxi, str_hpo, str_baz, str_sip, str_dmy, str_dzc, str_ihb,
              str_syr, str_dyc
              <--
              str_dxf
            ELSE
              str_bdl, str_vwp, str_urc, str_mhj, str_ary
              ::
              bool
                (str_kul$0 /:
                 bool
                   (str_zmt$0 /=
                    (FALSE(str_mwj))
                    ,
                    UNION
                      (str_vph, str_prc, str_oqb, str_awv, str_akg, str_pkk,
                       str_nut, str_ttc, str_dhs, str_jen, str_ljl).
                    (str_xek$0 <: str_qte$0| str_yto$0)))
            END
          END
        END ;
        str_zkn'str_lit
        :=
        [{ str_zzs, str_sjg, str_ybi, str_xli, str_xee, str_fso, str_nkr
           |
           str_owp = str_oql },
         ([NAT1, str_aqz$0] <| []),
         (STRING +->> INTEGER),
         {str_qtb$0, str_gha$0},
         struct
           (str_bda: str_xrc,
            str_ksn: str_yrb,
            str_vmc: {},
            str_phg: str_kyi$0,
            str_qsz: str_nhn,
            str_wrm: str_nuh$0,
            str_vxe: str_oga$0,
            str_gyk: str_mgc)]
      END
    END
  INVARIANT
    !(str_ecv, str_bfr, str_bno).
    (not
       (!
          (str_ugx, str_hfd, str_huw, str_bhe, str_zbt, str_hrt, str_hxf,
           str_tft, str_vim, str_tju, str_lxa).
        (bool(not(str_adc$0 < str_yta$0))(str_hkl) < str_jsy$0)))
  VARIANT
    {str_cwp,
     NAT,
     str_fps,
     rec
       (str_ipn:
        rec
          (str_weq: str_bwg$0,
           str_evo: str_mkm,
           str_qsl: str_ajk$0,
           str_rys: INTEGER),
        str_ipp: str_dvu$0,
        str_ueq: BOOL,
        str_kmn: str_poi$0,
        str_ctp: [],
        str_knm: BOOL),
     bool(str_nox$0 <<: str_mtd$0 & str_qrq$0'str_oze /= str_qjb$0)}
  END;

  str_qis, str_mcc, str_rvn, str_crd, str_cvj, str_dby
  <--
  str_vfc
    (str_dcn, str_fto, str_ont, str_sxl, str_lek, str_ffn, str_vzv, str_eds,
     str_tuv, str_yzc)
  =
  CHOICE
    CHOICE
      str_nkv, str_sjf, str_mby, str_bqj, str_xzp, str_dsh, str_zfy, str_uiv,
      str_dax :(
        #(str_acq, str_wqc, str_vgt, str_jof, str_jks, str_pyo).
        (str_wqi({ str_yto, str_ulg | NATURAL : BOOL }) /:
         str_kdl(str_qlh , STRING))
      )
    OR
      str_ows'str_dby
      :=
      -
        (str_fio
           (top
              ([(perm
                   (%
                      (str_itt, str_qxf, str_hcz, str_xyh, str_zfr, str_xmk,
                       str_vei).
                    (str_ohb$0 /<<: str_rfy$0|
                     {NATURAL, str_eof$0, str_ktk$0, NAT1}))),
                str_nik$0,
                str_fgx$0,
                str_cbq])))
    OR
      str_jpn'str_gbu
      :=
      (str_tuv$0'str_ago ||
       [str_ufa'str_tnr,
        str_una'str_rdp,
        {str_qfc,
         str_foa,
         NATURAL1,
         MININT,
         (str_oyc$0(str_fxb$0)),
         str_ucj,
         str_zhi,
         str_vyu$0},
        NAT1])
    OR
      str_tru, str_bac, str_vfs, str_fag, str_srf, str_yds :(
        not
          (struct
             (str_uew: str_puo$0,
              str_igr: str_buf,
              str_jnf: str_hls$0,
              str_egu: str_djy'str_syj) <=
           rec
             (str_ywu: str_hrl$0,
              str_lbi: str_mpy,
              str_wsf: (str_jhh(str_rhf$0)),
              str_yjw: str_idv,
              str_yol: bool(str_wju <= str_xxw$0)))
      )
    OR
      str_icl, str_dmh, str_htw, str_koe, str_foy, str_jjb, str_gtn, str_iee,
      str_yiu, str_als, str_fba
      ::
      rec
        (str_vcm: str_dqr,
         str_ezb:
         struct
           (str_eba: str_inb$0,
            str_cuo: str_kii,
            str_tbe: str_fqw$0,
            str_mrm: FALSE,
            str_amp: str_pwk$0,
            str_vma: str_aco$0),
         str_cqu: [str_jhm, str_vmu$0, str_qbr$0, TRUE],
         str_whx:
         { str_zic, str_trj, str_skl, str_sot, str_tfd, str_ujn
           |
           !
             (str_njp, str_jda, str_jfe, str_sup, str_eqk, str_bgu, str_fix,
              str_uen, str_cdb).
           (!(str_cjh, str_qii, str_nlu, str_wqs, str_yku, str_qhz, str_oti).
            (#
               (str_ggk, str_nri, str_ozh, str_cqg, str_pbw, str_ahy,
                str_qvt, str_bsx).
             (NATURAL1 > NAT1))) },
         str_oxa: TRUE)
    OR
      str_nwi, str_qew, str_sld, str_zxk, str_byh, str_bhj, str_qcv, str_ohu,
      str_qxm :(
        !
          (str_uef, str_hbz, str_ifs, str_pub, str_ald, str_rke, str_yxh,
           str_qlv).
        (str_wsh mod
         ((NAT |-> NATURAL) |-> [str_ppn$0, BOOL, str_yhz$0, str_rsy$0]) :
         str_byq$0 , str_exs$0)
      )
    OR
      str_lfe, str_nlk, str_noh, str_plw, str_waq, str_guk, str_yyw, str_gef,
      str_vxs, str_knq, str_src
      ::
      { str_zdx, str_kkj, str_gth, str_mip, str_ubf, str_vbs
        |
        not
          (#
             (str_eht, str_one, str_iiw, str_yph, str_ypu, str_pff, str_hsd,
              str_okx).
           (not
              (!
                 (str_pfr, str_qai, str_frb, str_hoo, str_qzb, str_wuz,
                  str_zqp, str_wwp, str_ebq, str_mld, str_tqx).
               (!(str_ypb, str_sfk, str_kpg, str_nim, str_kiq).
                (str_ezh$0 = str_grh$0))) =>
            str_ojx = str_fdt)) }
    END
  OR
    skip
  OR
    ASSERT
      not
        (!
           (str_gnp, str_lia, str_xhu, str_tmx, str_zmx, str_bhy, str_pqq,
            str_ijn, str_qxr).
         (rec
            (str_qsn: str_eiy$0,
             str_irx: str_puz$0,
             str_gks: str_yhk,
             str_eqt: str_tyn,
             str_hwe: str_bte$0,
             str_urx: str_uvm,
             str_mpw: {}) >=
          {} &
          str_ztf , str_cfs /: MININT))
    THEN
      ASSERT
        not
          (#(str_pbo, str_mju).
           ({ str_hai, str_emh, str_qsv, str_nvv, str_ajf, str_jnq, str_ieh,
              str_eml
              |
              STRING = str_pmd <<| str_wix } /=
            struct
              (str_eat: str_dfm$0,
               str_far: BOOL,
               str_fww: str_qpi,
               str_bvu: str_gdo$0,
               str_bjg: INTEGER)))
      THEN
        CASE
          struct
            (str_hho: (MAXINT[str_dfc$0])'str_fha,
             str_fzk: str_hbs,
             str_pqs:
             { str_vmu, str_six
               |
               not(str_fpq$0 /: str_wkb$0 <=> str_zzt < INTEGER) },
             str_frx: MAXINT'str_fat,
             str_oia: str_tfc$0,
             str_crw: str_oyw,
             str_aen: str_amz$0)
          OF
          EITHER
            bool
              (not
                 ({str_trv$0,
                   STRING,
                   (str_ryq$0 >+>
                    rec
                      (str_rei: str_kkh$0,
                       str_spw: str_xai,
                       str_gog: str_xhe$0,
                       str_sjj: str_rvd,
                       str_qyn: str_tav,
                       str_lbk: INTEGER,
                       str_sqp: INTEGER)),
                   INT} <<:
                  str_xkn$0))
              (str_gip)
          THEN
            str_guz, str_nyu, str_nfz, str_hfo, str_qey, str_ewm, str_nqz,
            str_wgo, str_bbu, str_oug
            :=
            arity
              ((str_tnv(str_xgs$0))
               ,
               { str_ibz, str_faz, str_zic, str_ima, str_tyn, str_cco
                 |
                 #
                   (str_aor, str_lli, str_hje, str_zot, str_azy, str_fim,
                    str_gje, str_iey, str_wub, str_hhy).
                 (#(str_dva, str_ilr, str_hno, str_exu).
                  (not(str_enl$0 > str_klt))) })
          OR
            struct
              (str_spi:
               UNION
                 (str_ggl, str_bjg, str_qjf, str_kog, str_jld, str_fnc,
                  str_thd, str_yui, str_xww, str_clm).
               (str_ndd < str_fbo| str_oje),
               str_pcq:
               { str_uee, str_zsc, str_srx, str_swu, str_mrw, str_tex,
                 str_lzf
                 |
                 not
                   (#(str_cpq, str_ieu, str_ywf, str_ceh).
                    (!(str_orc).([] /: str_cho))) },
               str_sus: str_oxl,
               str_iix: str_qkz$0,
               str_upz: (str_kxr$0 |-> TRUE),
               str_bgp: str_kgs$0,
               str_uub: NATURAL1)
          THEN
            str_are'str_gpt
            :=
            rec
              (str_ojl:
               PI
                 (str_ilv, str_luf, str_mhl, str_hhd, str_ryi, str_xcd,
                  str_afi, str_omo, str_dgf, str_lfd, str_inm).
               (str_jej$0 : BOOL|
                { str_isc, str_vvz, str_ktc, str_huc, str_jnf, str_lyi,
                  str_buf, str_cfr, str_jcd, str_bvj, str_jfx
                  |
                  str_ije'str_hgj /:
                  { str_ddr, str_cag, str_kfh, str_zft
                    |
                    #
                      (str_xzv, str_lmd, str_unc, str_mmh, str_qiz, str_wnu,
                       str_mpx, str_ubd, str_gjc).
                    (NATURAL1 /<<: NAT) } }))
          OR
            %
              (str_rff, str_inq, str_kzg, str_nuo, str_xlj, str_ndg, str_unn,
               str_iml, str_sfl, str_vlj, str_dia).
            (#
               (str_kva, str_exz, str_jca, str_okq, str_vtw, str_rkm,
                str_sam, str_avg, str_ytg, str_ahm).
             (str_xmk$0 = NAT1) =>
             str_uwc$0 >
             {str_wkd, MAXINT, str_dwa$0, NATURAL1, str_rkd, str_daf}
               ([BOOL, str_lgj, str_nty$0, str_myq, str_kou])|
             INT)
          THEN
            str_dmx, str_gto, str_dup, str_zqb, str_zxv, str_gfl, str_jfh,
            str_vyo, str_irp, str_scx
            ::
            rec
              (str_fyn: (son(FALSE)),
               str_bmc: "str_dqx",
               str_gsl: str_iti,
               str_isi:
               (struct
                  (str_xqq: str_yfh$0,
                   str_amv: str_qvd$0,
                   str_kzn: (sizet({})),
                   str_tjp: str_inz,
                   str_rmk: {})
                  (struct
                     (str_kzk:
                      struct
                        (str_wgi: str_ikl$0,
                         str_jyx: str_dzw$0,
                         str_hho: str_qkc,
                         str_wyc: str_pse),
                      str_lgu: {},
                      str_yei: str_rlk$0,
                      str_pcc: str_aoa$0))),
               str_cpc: str_fbd,
               str_qbi: str_uzg)
          OR
            struct
              (str_yeh: (FALSE , str_fao$0),
               str_mcc: str_pcp$0,
               str_kav: ((str_uhq || FALSE)),
               str_vul:
               PI
                 (str_niq, str_evu, str_eyg, str_esq, str_fiq, str_oop,
                  str_ywh, str_aym, str_wnr).
               (not(str_pcc <<: str_lzy)| str_uil'str_vhp),
               str_rdh: str_jva,
               str_ujc: NATURAL1,
               str_uzq: {TRUE, str_qag$0})
          THEN
            str_iwy 
              (
                struct
                  (str_agt: (bool({} /= TRUE)(str_xqn)),
                   str_mpz: str_fpn,
                   str_yri: (bool([] <: str_vrb$0) |-> str_xya$0),
                   str_irr: str_swk) >->
                INT
              )
              (
                rec
                  (str_hfs: str_rvs$0,
                   str_nty: (str_gcf , (str_vct$0 -->> str_qjc$0)),
                   str_jvy: str_rmk,
                   str_yln:
                   (rec
                      (str_aaq: str_wtp$0,
                       str_rrh: str_opq,
                       str_ijl:
                       struct(str_wuj: str_anp$0, str_rmv: str_iwa$0),
                       str_pjy: str_xfw$0,
                       str_fhi: FALSE)
                    ,
                    str_gxq$0'str_fyn),
                   str_nea: str_ibg$0)
              )
              (
                prj1
                  (bool
                     (not
                        (STRING <
                         [str_agh$0,
                          {str_dap$0, INT, str_rol$0, str_lsh, str_jfg$0,
                           str_wol$0}]
                           'str_cli)))
              )
              (
                [%(str_yzq, str_ceg). (not(str_qqg /: str_sgj)| str_ndm),
                 str_dvm,
                 {NAT1,
                  NATURAL,
                  bool(str_rtq <: str_dqp),
                  str_fil$0'str_cio,
                  UNION(str_xvs, str_hcx, str_ldb).
                  (NATURAL1 /<<: str_tgm$0| MAXINT),
                  "str_cxi",
                  []},
                 str_ulw]
              )
              (
                ({ str_fbw, str_cey, str_gae, str_eut, str_geu, str_fni,
                   str_dti, str_bqu
                   |
                   str_qyx$0 /: str_fgt } >->
                 [str_qzv, str_djy$0, str_pls, FALSE, str_xbp$0])
                  (struct
                     (str_emd: TRUE,
                      str_yqx:
                      { str_yzc, str_otq, str_eih, str_nxx, str_vvi, str_rcp
                        |
                        str_nkh$0 <= FALSE },
                      str_hzv: str_wxj,
                      str_tcr: str_kqk,
                      str_zkt: NATURAL1,
                      str_nbi: str_mlu,
                      str_rym:
                      %(str_fpa, str_olx, str_psm, str_jkf).
                      (str_lrn = str_hwh$0| str_gpt$0)))
              )
              (
                %(str_kbq, str_jqf, str_zbv, str_xip).
                (MAXINT <: str_xhx|
                 {str_ekc,
                  ((str_ncd$0 >< str_gdw$0)
                     (struct
                        (str_api: str_zll$0,
                         str_gqx: str_tvm,
                         str_qdp: str_rak$0,
                         str_nmz: str_xul,
                         str_exc: TRUE,
                         str_bco: str_kpc,
                         str_dpc: str_rhm,
                         str_cqf: INT))),
                  str_dle$0,
                  str_hon$0}
                   (FALSE ** NAT1))
              )
              (
                rec
                  (str_mik: {},
                   str_nct: ((FALSE || str_dim)),
                   str_gaj: str_lek$0,
                   str_njz: str_vbh$0,
                   str_kxc: (top(rec(str_mta: str_ncg$0, str_nsb: {}))),
                   str_qmk:
                   (SIGMA(str_cvh, str_imr). (str_cws$0 /<: INT| str_ogf$0)
                    ,
                    str_dum),
                   str_vqx: str_mlh$0)
                  'str_ftv
              )
              (
                rec
                  (str_wme: MININT,
                   str_gar: INT,
                   str_kdq: str_hfj,
                   str_rcc:
                   struct
                     (str_jeg: str_qsf,
                      str_cek: BOOL,
                      str_dgn: str_idy,
                      str_nqy: [],
                      str_kjp: str_omo$0,
                      str_zpb: (str_ibb$0 /\ str_wvu$0),
                      str_bum: str_ish$0,
                      str_wjt: str_iwv$0)
                     'str_sni,
                   str_pcl: str_xxd$0,
                   str_uih: str_iqi$0)
                ,
                bool(not(str_knw$0 > BOOL))
              )
              (
                str_ffe ..
                rec
                  (str_zrh: str_mxk$0,
                   str_gce: str_hxa$0,
                   str_owq: bool(NAT1 /= {})'str_ojr,
                   str_ibh: {},
                   str_ywy:
                   rec
                     (str_wdw:
                      INTER(str_nrj, str_csq, str_uoi, str_lqs, str_ixm).
                      (str_pyg$0 <<: str_eep$0| INT),
                      str_tcm: str_lur$0,
                      str_amq: str_gub,
                      str_mjb: NATURAL1,
                      str_afq: TRUE,
                      str_ijn: NATURAL1,
                      str_emc:
                      { str_wgp, str_iau, str_xto, str_wvu, str_gql, str_lwk
                        |
                        str_jun$0 /: str_ywg$0 }),
                   str_vbf: str_opj$0)
              )
              (
                SIGMA
                  (str_zvd, str_msr, str_tws, str_mry, str_eiv, str_ggl,
                   str_pfh, str_bki).
                (!(str_uoo).
                 (!
                    (str_lnk, str_sch, str_hkx, str_ndn, str_atx, str_llx,
                     str_gdj, str_hjh, str_vze, str_wyl).
                  (!(str_kix, str_gvg, str_fzd, str_mez, str_yln, str_kpi).
                   (str_kzk = str_yss$0'str_edz)))|
                 str_xtv$0)
                  'str_oje
              )
            
            :=
            rec
              (str_whs: str_zat$0,
               str_csi: str_zqa$0,
               str_woy: str_utl,
               str_ecy:
               (str_str[{ str_bss, str_ukm, str_veb | str_hht <: str_wnd$0 }]),
               str_bij: str_lcq$0,
               str_vzi: str_jsh$0,
               str_wnn:
               rec
                 (str_mno: str_ipj,
                  str_hsu: str_gfn,
                  str_vea: str_knp$0,
                  str_tiy: str_flz$0,
                  str_loz: str_gqp$0,
                  str_hvi: str_wrx$0,
                  str_drm: [str_laz, str_fpz, str_hgn, str_qne$0, MININT]),
               str_aot: {str_pgq$0, str_kxp})
              'str_gbl
          OR
            str_dax$0
              ([NAT1,
                str_qtc$0,
                rec
                  (str_roc: str_fos,
                   str_mbr: INTEGER,
                   str_tbj: NATURAL,
                   str_pma: str_jiz$0,
                   str_xsm: (str_mtk$0 , str_svq$0)),
                str_byu$0,
                INTER
                  (str_xaz, str_bga, str_pxb, str_yqo, str_hpl, str_emy,
                   str_jfl).
                (str_fjg$0 = str_ifl$0|
                 struct
                   (str_jmh: INT,
                    str_evx: str_yjg$0,
                    str_gdy: str_fgc,
                    str_bla: str_tvl,
                    str_ajp: "str_qwd",
                    str_kfo:
                    SIGMA(str_edl, str_hjt). (str_ixl /= str_lne| 18))),
                str_her$0])
          THEN
            str_uuv
              (((str_ker$0(str_wpe$0))'str_uge **
                bool(INT : bool(str_bba$0 /= str_fcy))'str_cpt))
          ELSE
            skip
          END
        END
      END ;
      VAR
        str_ckg
      IN
        skip
      END
    END
  END;

  str_mvt, str_xqj, str_olc, str_cns, str_yuu
  <--
  str_jtv (str_oeb, str_uqs, str_mtl, str_vpy, str_fff, str_cgn)
  =
  BEGIN
    ASSERT
      fnc
        (PI(str_app, str_uqm, str_hrn, str_uxx, str_pmc, str_lcq).
         (str_jjq$0 <= str_ggw| str_wap$0)) <
      mirror(str_tsv$0(bool(NAT1 /: str_vwa$0)))
    THEN
      SELECT
        !(str_awz, str_dsy, str_xpg, str_ttp, str_cyh).
        (not
           (#(str_yof, str_ufa, str_wmy, str_naq).
            (#(str_fak, str_exx, str_rep, str_vmj, str_rxg, str_kid, str_jqb).
             (!
                (str_ihs, str_osc, str_dqg, str_fdu, str_lqk, str_ywy,
                 str_sas, str_voe).
              (!
                 (str_nro, str_oqd, str_hsx, str_srz, str_ron, str_lmd,
                  str_qut, str_pzp).
               (str_kkt <= str_ejc$0 or str_lqj = TRUE))))))
      THEN
        str_sbv'str_cqz
        :=
        FIN
          ({(%
               (str_fxc, str_qae, str_rvc, str_tqw, str_hcd, str_yen,
                str_mbz, str_lmd, str_xks, str_ukv, str_ccj).
             (INTEGER <= NAT| str_uui)
             ,
             str_ozo$0),
            str_uxl,
            str_jvp$0,
            str_jqf,
            str_fvs,
            {}}
           |->
           rec
             (str_kfz:
              { str_dpl, str_nyu, str_eyl, str_rss, str_juz, str_dcz,
                str_bpq, str_ijr
                |
                str_dsr /= str_usc$0 },
              str_gff: str_myl,
              str_gin: str_dqh$0,
              str_hwq: str_wjl,
              str_jjs: str_dck,
              str_lzh: TRUE,
              str_pcw: str_ugo))
      WHEN
        #
          (str_pnw, str_aai, str_dpi, str_ukk, str_gms, str_ycz, str_ncx,
           str_sxn).
        (not
           (str_kud$0 = NATURAL1 or
            (not(str_nkh$0 >-> str_rbj$0 /= []) => str_ljj$0 /<<: str_mds)))
      THEN
        str_cdl, str_opr :(
          (#(str_svy, str_opv, str_ame, str_vvt, str_hed, str_yhh, str_orb).
           (#
              (str_tyq, str_qhe, str_tce, str_spx, str_lcj, str_clr, str_gma,
               str_kdb, str_com, str_yup, str_bzu).
            (str_iuo$0 < str_bbl$0)) <=>
           !
             (str_mwc, str_uif, str_yje, str_zun, str_oxj, str_loc, str_rmb,
              str_etz, str_uoh, str_wbi, str_ktd).
           (str_xzl$0 >= str_noi)) <=>
          !(str_dpx, str_wbz, str_uro, str_xkn, str_anu).({} /: BOOL)
        )
      WHEN
        !(str_ytt, str_drz, str_xpw, str_lct, str_nlj, str_xrt, str_kub).
        (not
           (not
              (not
                 (#(str_vxh, str_phj, str_usn, str_dfx, str_rrf, str_lwg).
                  (str_lmb$0 /<<: bool(str_uyi >= BOOL))))))
      THEN
        str_wst 
          (
            bool
              (struct
                 (str_rlh: NAT1,
                  str_pgs: MAXINT,
                  str_gqq: str_grn$0,
                  str_zfp: str_ldd,
                  str_xcw: str_tww$0,
                  str_vdz: str_bqc,
                  str_xbf: STRING) <
               str_isk) >->>
            struct
              (str_bfd: NAT,
               str_evu: str_gvb$0,
               str_hje:
               rec
                 (str_szk:
                  {str_cbc, str_sze, str_iyt$0, str_vik$0, str_ori, str_oqn,
                   str_yww},
                  str_ojc: str_mam$0,
                  str_cud: str_mjm$0,
                  str_ftj: str_jmd$0,
                  str_qys: NATURAL))
          )
          (
            {} ->
            [NAT,
             str_iyn$0,
             str_fco$0,
             str_jzr$0,
             {},
             rec
               (str_ymx: 8,
                str_ngv:
                ((str_ziz$0
                    ({ str_mij, str_oyw, str_btt, str_pwf, str_tof, str_qsr
                       |
                       str_uid$0 > NAT1 }))
                   (str_wqx)))]
              'str_sja
          )
          (
            {NAT,
             str_ugm$0,
             { str_ish, str_dem, str_ekv, str_yqd
               |
               str_sgj$0 >= FALSE or str_ukm >= str_fzm },
             rec
               (str_hpf:
                INTER(str_yys, str_dam, str_bur, str_oth, str_vxw, str_syg).
                (INTEGER : str_mdx$0| str_nia$0),
                str_avp:
                rec
                  (str_vbr: str_vuj,
                   str_ppl: str_pea$0,
                   str_ftm: MAXINT,
                   str_eaa: str_sxo$0,
                   str_iea: [],
                   str_azn: str_zmi$0,
                   str_rec: str_xbs),
                str_tqb: (size(str_lpm)),
                str_hkm: INT,
                str_sof: str_zlg)}
          )
          (
            { str_jat, str_nfq, str_zug, str_jmi
              |
              #
                (str_fak, str_txt, str_koe, str_smi, str_vvn, str_eys,
                 str_qxe, str_lkv, str_ihz, str_qsr, str_flc).
              (#
                 (str_lzu, str_ccd, str_duv, str_lvz, str_ttv, str_lwk,
                  str_oqt, str_ale, str_len, str_aye).
               (#
                  (str_vkf, str_sze, str_nbn, str_vyb, str_utd, str_uuf,
                   str_abk).
                (#
                   (str_awv, str_iau, str_euq, str_psw, str_nxo, str_rxa,
                    str_jbd, str_opi, str_nbn).
                 (str_lok$0 >= str_xji$0) or
                 str_hjr$0 /: str_bog$0))) }
              'str_pmp
          )
          (
            bool
              (#
                 (str_wqd, str_ljo, str_vgs, str_jrs, str_qfc, str_sme,
                  str_nsc, str_gyd).
               (!
                  (str_chb, str_pzs, str_nct, str_eyn, str_jjz, str_xnm,
                   str_mcu, str_vix).
                (!(str_wjq, str_yjs, str_lnt, str_znq, str_rsv).
                 (not
                    (!
                       (str_ary, str_eqr, str_kzr, str_stn, str_nof, str_hwa,
                        str_pym, str_cqb, str_dmq, str_wch).
                     (NAT1 <= []))))))
          )
          (
            { str_wtr, str_car
              |
              #(str_wap, str_qpj, str_uoy, str_ewm, str_yhp).
              (str_ucf /<: str_flc$0) &
              str_ixj < str_kfx$0 &
              not
                (#
                   (str_tva, str_ovp, str_ill, str_nkh, str_qtu, str_vlk,
                    str_brj, str_mks, str_vco, str_mze).
                 (str_cuq$0 /<<: str_bgv$0)) } |>>
            str_prr$0
          )
          (
            perm
              (rec
                 (str_syz: str_psy,
                  str_cyx: str_jns,
                  str_hdk: str_hzm,
                  str_kjq: str_njx,
                  str_awf: str_ray,
                  str_njo: str_nkb$0,
                  str_qyp: str_bqu,
                  str_qky: NATURAL)
                 (bool(INT /: str_sib)
                  |->
                  (NATURAL1 *
                   { str_wzk, str_jmk, str_aon, str_sre, str_ezw, str_wwn
                     |
                     NAT = 7 })))
          )
          (
            (sons
               (({ str_gif, str_wwj, str_owe, str_xhd, str_ney, str_qpu,
                   str_wyr, str_vge
                   |
                   MININT /<: str_exk }
                 |->
                 {str_ppb, INTEGER, str_ruf$0, str_zgq, str_nfa})
                  'str_jzm))
              'str_zdy
          )
          (
            seq
              (rec
                 (str_bit: 5,
                  str_kqy:
                  struct
                    (str_fjc: "str_gul",
                     str_gqf: STRING,
                     str_yww: str_kxg,
                     str_hhh: str_etx,
                     str_uao: MAXINT,
                     str_cld: str_net$0),
                  str_ywl: str_gzl,
                  str_ocp: NAT1,
                  str_jah: (front(INTEGER)),
                  str_hyk:
                  { str_glu, str_ilv
                    |
                    not
                      (#
                         (str_hxy, str_ndk, str_dpw, str_grq, str_gwj,
                          str_aut, str_prg, str_qad, str_wvw, str_puo).
                       (str_jhr < str_ogz)) },
                  str_kdo: INT))
          )
          (
            rec
              (str_ejx:
               rec
                 (str_ivw: str_uiz,
                  str_xwn: {{}, str_qdh, str_tyi$0, str_tgw$0},
                  str_qyo: str_pkw,
                  str_ztz: str_xcg),
               str_nny: str_ajv,
               str_afl: [str_oum$0, str_sch$0])
              ([[str_kcz, str_fft, str_peb],
                NAT1,
                INTEGER,
                str_aio,
                str_wnt,
                str_xwa])
          )
          (
            [bool(str_ekw : INT),
             str_vut$0,
             str_bhc,
             {{[], BOOL, MAXINT, str_rox},
              (BOOL |-> str_kbw$0),
              str_koa,
              (seq1(fnc(str_rcx)))},
             str_idw$0]
          )
        
        :=
        {(str_lrq(str_mrg))'str_tpk,
         ((str_cxk$0
             ((rec
                 (str_hju: NAT,
                  str_wog: str_jhq$0,
                  str_rfp: INT,
                  str_vyg: str_pwj,
                  str_uma: str_cbq$0,
                  str_ffa: TRUE,
                  str_qbq: str_avf$0) ;
               str_izk$0))) <->
          [])}
      WHEN
        (str_uma$0 > str_fcg => NAT /: NATURAL) or
        (!(str_nxt, str_xhx, str_vti, str_gaa).(str_eup$0 < str_pjd$0) or
         str_djt <<: str_qug$0) or
        not(str_fnj$0 > str_nwg)
      THEN
        str_nfy, str_snv, str_adl, str_ebq, str_dsq, str_jau, str_hpf,
        str_jvc, str_lzq
        :=
        struct
          (str_lcm: str_nml$0,
           str_wad:
           SIGMA
             (str_qvu, str_otl, str_dqc, str_sec, str_hph, str_whk, str_lvo,
              str_imc, str_vwu, str_qnl).
           ({} /<: str_zog$0|
            { str_jbm, str_sqp, str_hsp, str_lxw, str_ppf, str_zsp
              |
              str_jdp$0 < {} })
             'str_bzp)
        ,
        (left(str_jxy$0))
      WHEN
        [bool(str_qjf <<: str_bjs$0), str_bxd, INT, (str_yct$0(NAT1))] /=
        [(prj1(rec(str_ldm: str_ler, str_umh: INTEGER, str_opg: NATURAL))),
         str_yje$0,
         str_bha$0,
         str_dtt$0,
         str_vna]
      THEN
        str_hjk 
          (
            struct
              (str_rkq:
               bool
                 ((STRING > str_kwa =>
                   (str_mij < str_blq$0 <=> str_xlu <= str_vlk)) or
                  not
                    (#
                       (str_kri, str_nfi, str_ahr, str_rjn, str_zrx, str_vax,
                        str_lsm, str_szi, str_pft).
                     (str_gao$0 <<: str_jzs))),
               str_wfm: NATURAL,
               str_fgo: NATURAL1)
          )
          (
            struct
              (str_xnb: str_vau,
               str_alo:
               (({ str_jyt, str_whv, str_fdu, str_qdh, str_jkw, str_zwx,
                   str_uaw, str_bic, str_tbn, str_woq
                   |
                   str_kie /<: str_wlr$0 }
                   (NAT -> str_yyg))
                  (PI(str_pwp). (str_yiq <<: str_sqb$0| str_xxc))),
               str_txd: INT,
               str_onh: str_efd,
               str_rpa: ((FALSE ; str_woy$0)),
               str_omo: str_uhp$0,
               str_ius: BOOL,
               str_enq: str_kyj$0)
          )
          (
            struct
              (str_bnx:
               [str_hfl$0, str_ogj$0, MININT, str_jqb$0, MAXINT, str_lpv$0,
                str_bjs$0],
               str_cmf: str_cin$0,
               str_gmn: str_jna,
               str_etj:
               rec
                 (str_ynf:
                  struct
                    (str_pkh: str_zuf$0,
                     str_cta: FALSE,
                     str_ifi: str_pla,
                     str_ita: NATURAL1,
                     str_jyf: str_hmd$0,
                     str_lha: {},
                     str_omr: str_wiw$0),
                  str_wxb: str_cad$0,
                  str_nbx: str_emm$0),
               str_ztx:
               {str_ewj,
                str_vps,
                NATURAL1,
                str_qdb,
                rec
                  (str_nbb: str_gms,
                   str_hpq: str_ehj,
                   str_tjg: INTEGER,
                   str_grx: []),
                str_hnw$0,
                MAXINT})
              'str_dcr
          )
          (
            struct
              (str_dgx:
               [TRUE,
                (BOOL(NATURAL)),
                ({}
                   (rec
                      (str_gje: bool(not(str_dvd : str_oro$0)), str_wff: INT)))])
          )
          (
            prj1
              ({ str_qjz, str_zuq, str_zac, str_iuj, str_umj, str_kcc,
                 str_cku
                 |
                 not(str_lwu < NAT) }
                 (rec
                    (str_gta: str_jce$0,
                     str_hux:
                     {str_viu$0, str_dzy, str_icy$0, NATURAL1, str_qzb,
                      NATURAL},
                     str_ald: str_keu$0,
                     str_sjf: str_wdb$0,
                     str_hbm: [],
                     str_fdo: NAT,
                     str_ulu: str_rcd)))
          )
          (
            %
              (str_qpw, str_tbe, str_oqg, str_sgb, str_ips, str_ofr, str_tpu,
               str_uof, str_dbg, str_luq, str_zrq).
            (str_mbh /<<: {} &
             #
               (str_zlk, str_req, str_idv, str_peh, str_ksi, str_oyw,
                str_weg, str_wjo, str_nhi, str_dwk).
             (#(str_muw, str_nab, str_xhy, str_rbh, str_ivy).
              (TRUE /: NATURAL))|
             size
               (struct(str_acu: str_fzn, str_lgu: (str_jfk$0 |-> NATURAL1))))
          )
          (
            rec
              (str_elp:
               %(str_kuc, str_urx).
               (!
                  (str_tqz, str_pls, str_wyf, str_zbt, str_nzr, str_sms,
                   str_tgr, str_xcu).
                (!
                   (str_fub, str_aem, str_vao, str_mmp, str_gbl, str_tmv,
                    str_qsh, str_anb, str_npp).
                 (str_gyf /: str_etp))|
                dom(BOOL)),
               str_jcu: (str_cva$0(FALSE)),
               str_uaa: (union(str_isa)))
          )
          (
            {(rev
                (struct
                   (str_iba:
                    (prefix((NAT , bool(str_rnz$0 > str_nyz)) , str_zmr$0)))))}
          )
          (
            {bool(str_jmp /<: str_nbk$0),
             (bool(not(not(str_rfp <<: NAT1))) >->> str_bog),
             struct(str_xuk: NATURAL)}
          )
        
        :=
        bool
          (not
             (#
                (str_utx, str_rfo, str_mah, str_odd, str_ngl, str_ndi,
                 str_nte, str_wfu).
              (#
                 (str_eke, str_ffn, str_npx, str_dqx, str_twh, str_gfz,
                  str_veq, str_zdt, str_cxe).
               (!
                  (str_orw, str_uzx, str_kgu, str_oci, str_rfh, str_yzo,
                   str_roi, str_wey, str_czo).
                (#
                   (str_dfg, str_fzc, str_jbh, str_zfg, str_ndw, str_mjo,
                    str_vpa, str_jyw, str_nti, str_zap).
                 (!
                    (str_ujl, str_txh, str_jjk, str_qsi, str_waq, str_rdl,
                     str_bug, str_utk, str_nyt, str_odf).
                  (str_xez$0 > str_osh)))))))
      WHEN
        #(str_rmi, str_qjw, str_tuf, str_lsc).
        (not(str_ftq <<: str_bvv) or NAT1 >= str_zkl$0) or
        !(str_lwx, str_ziv, str_frx, str_iov, str_vbb).
        (#(str_rpo, str_bka, str_tui, str_jxe, str_vdv, str_xhb).
         (str_yrg /: NATURAL))
      THEN
        str_ysl, str_iyt, str_qzb, str_itj
        ::
        %(str_dhj, str_uxs, str_zpe, str_sjy, str_gqx).
        (#(str_omf, str_szv).
         (!(str_roq, str_sgn, str_ptd).
          (!(str_htg, str_dzu, str_pjs, str_xow, str_zaw).
           (!(str_iao, str_rtq, str_ubm, str_uit, str_jik, str_cjp).
            (str_glg > str_wqf$0) =>
            str_dkg$0 = FALSE))) =>
         str_vko < str_ofu$0|
         NAT)
      WHEN
        not
          (bool
             (#
                (str_eln, str_tra, str_fsl, str_nas, str_mds, str_ecn,
                 str_oyk, str_npo, str_ejx).
              (not
                 (!(str_hwc, str_nar, str_jxg, str_ghz, str_xdn, str_gsf).
                  (not(str_hbw /<: MAXINT))))) =
           str_dtl)
      THEN
        CASE
          bool
            (#(str_vly, str_wrq).
             (((str_rij : str_bqp => str_uak >= str_ixn$0) <=>
               str_gum$0 /<: BOOL) <=>
              not(NATURAL : str_hzw)))
          OF
          EITHER
            { str_mgb, str_rgz, str_quq, str_hkx, str_mxp, str_mdz, str_klz,
              str_wmc
              |
              struct
                (str_hye:
                 [str_fqo, str_cdk$0, str_zxo$0, MAXINT, str_yjr$0, str_ull],
                 str_cdl: str_yvi,
                 str_syd: str_uip,
                 str_mic: str_jcn) <:
              max
                ({ str_lef, str_rmr, str_ggj, str_ush, str_bit, str_tad,
                   str_xfv, str_fzk, str_nzi, str_lng
                   |
                   str_huc$0 >= str_ach$0 or INT : MININT }) }
          THEN
            str_oel, str_pjn, str_rgk, str_tes, str_rdw <-- str_wpb
          ELSE
            WHILE
              str_sgn$0 <->
              bool
                (!
                   (str_xhe, str_goh, str_yuo, str_dqs, str_ewb, str_hfc,
                    str_wqe, str_zif, str_vcp, str_den).
                 (not("str_nxd" : str_hmk))) /<:
              struct(str_mxr: (btree(str_els)))
            DO
              str_fjg, str_pqe, str_lwt
              <--
              str_bkt
                (bool
                   (!
                      (str_hme, str_pvy, str_ryt, str_uuv, str_oqy, str_otl,
                       str_srw, str_gra, str_gvd, str_qpg, str_zzs).
                    (!(str_wiy, str_wew, str_zse, str_rsq, str_msd).
                     (str_fqm /<<: str_qla & str_lhx < str_iwu$0)) =>
                    not(not(str_yna < str_ust))),
                 [TRUE,
                  str_vzk,
                  { str_nir, str_qdi, str_udr, str_bsd, str_zee
                    |
                    str_hfc < NATURAL },
                  MININT,
                  str_zse,
                  str_ykn$0,
                  struct
                    (str_vmh: str_mwy,
                     str_plr: str_nee,
                     str_ghv:
                     [str_dsf$0,
                      [str_yaz, str_xwq, [], NAT],
                      str_kvj$0,
                      str_bmf,
                      {[str_pah, NATURAL1], str_abw},
                      str_jbd$0])],
                 ((%
                     (str_yxr, str_det, str_xfa, str_fbi, str_sfo, str_hns,
                      str_yfi, str_qwt, str_tex).
                   (NAT <= str_ftb$0|
                    (str_dpq
                     ,
                     { str_ydm, str_wvt, str_nyc, str_wdz, str_rsn
                       |
                       NATURAL >= str_wdh })
                      ~) <->
                   { str_hzd, str_wln, str_snp, str_mit | str_kwt$0 : str_zpw }) >+>
                  MININT),
                 (UNION
                    (str_dbu, str_rym, str_fip, str_frk, str_tki, str_xrb,
                     str_wvt, str_bmn, str_box).
                  ([] = str_hkj$0| str_eyw$0) mod
                  (seq
                     (UNION(str_xfo, str_ojn, str_mze).
                      (str_njv$0 <: str_bdr| bool(not(str_vcj$0 : 20)))))),
                 bool
                   (not
                      (#
                         (str_gwl, str_oxo, str_bni, str_azs, str_zkt,
                          str_qlt, str_jgo, str_yst, str_gwf, str_ark).
                       (struct
                          (str_kew: str_aro$0,
                           str_icc: MININT,
                           str_ddj: str_tko,
                           str_whu: str_zyq,
                           str_mgr: MININT,
                           str_vhf: ((str_ivk$0 || str_azy$0))) >=
                        PI
                          (str_tra, str_jgk, str_yxv, str_jbl, str_wze,
                           str_osn, str_vko, str_ens, str_vdh, str_iht).
                        (str_zyu$0 : str_erl| str_rge)))),
                 struct
                   (str_ozq:
                    (front
                       ({ str_clq, str_chm, str_rnr, str_jrv, str_enf,
                          str_kee, str_lzy, str_pmf, str_lmn, str_jwf
                          |
                          not(NATURAL : str_ajz) or
                          (str_kdg$0 >= str_nnz or not(str_iby$0 /= MAXINT)) }))),
                 struct
                   (str_tbz:
                    (fnc
                       ({str_fbg$0, NATURAL1, str_cxl, str_txe$0, str_odt$0})),
                    str_gyy: { str_kyl | str_pos /<<: MININT },
                    str_xez:
                    (UNION(str_rcm, str_zco, str_lnm, str_gch).
                     (str_pnd <<: STRING| str_hui$0) <+
                     (NAT(INTEGER)))),
                 (inter
                    ([NAT,
                      str_wwf$0,
                      [TRUE, str_uva$0, str_frk, NAT, str_rko$0, str_qmp,
                       TRUE, NAT1],
                      { str_zkd, str_voc, str_lhx, str_aam, str_ouq, str_sso,
                        str_pvi, str_jiw
                        |
                        NATURAL = str_nvf & NATURAL /= str_jwq$0 },
                      { str_dsu, str_pct, str_kjc, str_qir, str_ksl
                        |
                        MININT <= INT <=> FALSE <: str_uqv$0 },
                      NAT1])),
                 (front
                    ([{},
                      str_vfx,
                      str_bnz$0,
                      NATURAL,
                      BOOL,
                      bool
                        (#
                           (str_gpk, str_dlf, str_okp, str_wvv, str_ztw,
                            str_sab).
                         (str_xoo <= str_wom$0 or
                          !
                            (str_zrl, str_cxr, str_anb, str_irn, str_vfs,
                             str_esb, str_cbi, str_tce, str_jry, str_ykl,
                             str_xte).
                          (str_eny = str_sgx)))]
                       'str_prf)))
            INVARIANT
              str_skz$0 <=
              bool
                (not(MAXINT <: INTEGER) =>
                 !(str_zra, str_ojh, str_tie, str_lwi, str_uyy).
                 (!(str_tax, str_luu, str_wpd, str_xgk).
                  (#
                     (str_bty, str_vtt, str_rsn, str_dfj, str_add, str_aqh,
                      str_eex, str_ysb, str_lul).
                   (INT /= str_cci$0))))
            VARIANT
              { str_ogf, str_vcl, str_jbn, str_omt, str_uqi, str_pso, str_sjx
                |
                #(str_bjw, str_ool).
                (not
                   (#
                      (str_yoo, str_wer, str_vas, str_eld, str_epn, str_hrm,
                       str_jss, str_xap, str_ptp).
                    (#
                       (str_tqv, str_ejh, str_xfd, str_dnj, str_zdi, str_wco,
                        str_bmv, str_jym, str_ugp).
                     (!
                        (str_yxo, str_ppo, str_afh, str_qsu, str_plh,
                         str_spm, str_ooq, str_yst).
                      (str_ptf$0 >= INT))))) }
                'str_exq
            END
          END
        END
      WHEN
        !
          (str_ppl, str_vaj, str_rrf, str_xzd, str_uaz, str_gfi, str_yga,
           str_mnf, str_saa, str_rpn, str_thf).
        (str_vzt <
         id
           ((perm
               ({ str_oyp, str_nzw, str_gqc, str_agp, str_wkv, str_hyz
                  |
                  str_hbk /: str_nrn }))
              'str_mfw
            ,
            str_ppu))
      THEN
        str_mez, str_hfg, str_yrg, str_urt, str_esw, str_hau, str_mvk
        ::
        prefix
          ([TRUE,
            {rec(str_jzg: str_ejs, str_cmn: str_evr$0, str_ujj: str_rrx),
             str_mbc,
             INT,
             str_btr},
            str_wwa$0,
            str_wcq$0,
            struct
              (str_zum: [],
               str_yce:
               (str_sqy |-> struct(str_sgc: NATURAL1, str_xwy: str_znw$0)),
               str_uvf: INT,
               str_dlk: str_aln,
               str_bcz: str_ejm,
               str_sxj: str_ogc$0)])
      END ||
      skip
    END ||
    WHILE
      #(str_llb, str_wtm, str_mqs, str_qlm, str_pws, str_fqc, str_xyc).
      ({} /<<: str_mes$0 <=>
       !(str_tcu, str_ffy, str_wiu, str_baj).
       (not(MININT <<: bool(str_zdt /= str_erj)(str_ubv))))
    DO
      str_ffi 
        (
          struct
            (str_rqv:
             struct
               (str_hcm:
                rec
                  (str_owk:
                   (bool(str_edp$0 : NATURAL1 => str_qao$0 /: str_trt) /\
                    TRUE))),
             str_hff: (str_lzc$0 |-> str_sfd$0))
        )
        (
          [rec
             (str_aza: str_dsv$0,
              str_ozi: NAT1,
              str_gdz: str_who,
              str_ljk: str_wsj$0,
              str_pkg: str_dnv,
              str_moi: str_csl,
              str_aum: TRUE),
           struct(str_jvu: (inter(str_wdk$0))),
           str_umh$0,
           INTEGER]
          |->
          INTER
            (str_anv, str_lwl, str_ntv, str_lpk, str_xel, str_hvu, str_ado,
             str_cft, str_tus, str_mal).
          (str_lpz$0 <= str_vjj$0| str_umx)
            'str_gvh
        )
      
      :=
      PI
        (str_vyl, str_icx, str_cdb, str_kip, str_iuu, str_kjd, str_fst,
         str_uib, str_wtb, str_tey).
      (!
         (str_cwx, str_puo, str_mnf, str_trq, str_tbq, str_jqe, str_tax,
          str_nmc, str_rqv, str_cwr, str_psa).
       (str_kln <= NATURAL) <=>
       not
         (!
            (str_epx, str_six, str_zps, str_ttl, str_tsg, str_eio, str_hqy,
             str_its, str_xox, str_tlu).
          (str_ktx$0 : STRING))|
       bool(not(str_oor$0 <: {})))
    INVARIANT
      bool(str_iio$0 /<: INT)'str_mwg
      |->
      { str_aym, str_sxd, str_okl, str_uhm
        |
        #
          (str_xdy, str_vhp, str_lgl, str_iug, str_slj, str_yai, str_umo,
           str_orq, str_krr, str_sao).
        (str_ggz /<<: str_now$0) } /=
      rec(str_uhj: str_fcy$0)
    VARIANT
      {UNION(str_kfs, str_fpo, str_sad, str_hov, str_lpn, str_puh, str_sfe).
       (not(rec(str_say: str_srz) <: str_hmp$0)| str_vmk$0),
       (str_bam , str_cer$0),
       bool(NAT <<: str_zvs$0)}
    END
  END;

  str_zny, str_bcm, str_ksn, str_uhk, str_zni
  <--
  str_eoi (str_mrt, str_eia, str_reo, str_ibq, str_tir, str_buj)
  =
  ASSERT
    #(str_kav, str_wwy, str_oul, str_ddb, str_gqh).
    (not
       (!(str_jez, str_yhm, str_tye, str_kth, str_agk).
        (!(str_aag, str_nvq, str_mrz, str_uhc, str_cpn).
         (!(str_gsu, str_rwz, str_hjp).
          (!(str_hpd, str_num, str_dhm, str_arf).
           (!(str_ezf).(str_tev /<: MAXINT)))))))
  THEN
    PRE
      #(str_nqu, str_ska, str_xdz, str_xim, str_usc, str_uqp).
      (!(str_hjn).
       (str_pok$0 > str_ydt <=>
        !
          (str_qqe, str_ujv, str_tsm, str_ogh, str_kup, str_vxm, str_dfv,
           str_hvk, str_ynz, str_lqa, str_tkq).
        (STRING |-> str_end$0 <= str_ffz$0 - NATURAL1)))
    THEN
      CASE
        [str_mnn,
         MININT,
         {{ str_ivk, str_lno, str_xll, str_nqy | str_oqn = str_koi$0 }},
         str_cit$0,
         STRING,
         bool(not({} /: str_flb)),
         (iseq(str_xrj))]
        OF
        EITHER
          (struct(str_tax: NATURAL1)
             ({ str_xcj | str_pbd /= 0 => str_wra$0 /: INTEGER })) +
          %
            (str_lwk, str_lgu, str_kbw, str_vci, str_nzp, str_ink, str_jrw,
             str_pce).
          (str_mgk$0 : NATURAL1|
           [str_hne$0, str_med, str_lbs, INTEGER, str_rzw$0, str_spb,
            str_vhh$0])
        THEN
          str_yqu, str_xic, str_lhx, str_clg, str_tbm, str_tdr, str_aaa,
          str_nxc
          ::
          [{}, str_yje$0, STRING, str_dir$0, str_rjk$0, str_ymd$0]
          |->
          struct
            (str_zel: str_qao,
             str_nvg:
             { str_iyg, str_ddv, str_whh, str_miy, str_hpt
               |
               str_xnx /<: str_jbo$0 or INT > str_ksu },
             str_jqs:
             rec
               (str_jxi: (MAXINT , str_hed),
                str_kyy: str_zgw,
                str_pfg: MAXINT)) ;
          IF
            !(str_ynu, str_lii).
            (#(str_tnc, str_wal, str_ojg, str_scm).
             (!
                (str_jpq, str_afu, str_ecp, str_uxs, str_yli, str_hma,
                 str_uvq, str_zig, str_fbc, str_qey).
              (#(str_stz, str_yin, str_xar, str_dao, str_few).
               (not(str_gdn$0 > str_nws$0 & str_vsm /<<: str_uhz$0))))) &
            str_cij < str_fsr$0
          THEN
            str_hpo, str_lgm, str_eth :(
              not
                (#(str_xlt, str_ygn, str_pzb).
                 (not
                    (#
                       (str_mqu, str_jtw, str_lgi, str_udd, str_lms, str_czi,
                        str_wqp, str_sda, str_vbc, str_kms, str_zmm).
                     (not
                        (#(str_ejg, str_xya).(str_sry <<: [] & MAXINT < NAT))))))
            )
          ELSIF
            not
              (str_uqh /:
               (FIN1
                  (rec
                     (str_gxn: str_zvm$0,
                      str_cxc: str_oji,
                      str_fqr: str_kfi$0,
                      str_dvs: str_ggx$0,
                      str_yed: TRUE,
                      str_lgi: (postfix(FALSE)),
                      str_dpn: str_xon$0,
                      str_plq: NAT1)))
                 (str_khq$0 , MININT))
          THEN
            str_fvq
            :=
            {(size(BOOL)),
             bool
               (!(str_efu, str_dxx).
                (!
                   (str_jqx, str_ebe, str_aqu, str_kgx, str_kza, str_unl,
                    str_hay, str_xgd, str_qis, str_wdk).
                 (!(str_btj, str_mkv, str_mzj, str_utz).(NAT /: str_yln$0)))),
             (str_ifx$0 |-> str_smm$0),
             str_mnq}
          ELSIF
            not
              (#
                 (str_dxq, str_wpc, str_yut, str_yne, str_dfx, str_fea,
                  str_ask, str_wev, str_auf, str_epw, str_xww).
               (!(str_jix, str_uyn, str_tfw, str_dco, str_eit, str_nsu).
                (!
                   (str_hmm, str_ehn, str_unm, str_gub, str_unc, str_vrb,
                    str_jsz, str_zlb, str_ayq).
                 (str_qqu < str_rdo) or
                 str_wkv /: str_cdi)) &
               (INTEGER >= NATURAL1 & str_mzs <= str_dna))
          THEN
            str_gth'str_zif
            :=
            { str_woq, str_uzo, str_cdh, str_ciz, str_poh
              |
              !(str_geu, str_gts, str_zlj, str_wel).
              (str_ipo$0 <= str_yny$0 =>
               !(str_kno, str_ryx, str_lnr, str_nfz, str_sih).
               (({} /<: str_niw <=> str_fmn > str_kjn$0) or
                str_dxy /: str_zfa)) }
          ELSIF
            !(str_ybv, str_mlz, str_kfp).
            (bool(str_hbm$0 > str_hxz$0)(postfix({NAT1, str_vhh})) <<: []) or
            str_swl : str_vzl$0
          THEN
            str_yfh'str_mpk
            :=
            rec
              (str_nmg:
               rec
                 (str_fcz: NAT1,
                  str_kuh: MAXINT,
                  str_pyf: NATURAL1,
                  str_iuu: "str_ejf",
                  str_fta:
                  rec
                    (str_ekc: str_twb$0,
                     str_rap: {},
                     str_txh: NAT,
                     str_dmo: str_fxs$0,
                     str_txc:
                     struct
                       (str_qkt: str_evn$0,
                        str_pse: FALSE,
                        str_dwx: 1,
                        str_rnk: {},
                        str_hlo: str_hod,
                        str_aja: str_bpy$0,
                        str_xki: [],
                        str_qoz: str_myh$0),
                     str_udr: str_iis'str_ghz),
                  str_lit: str_zqp,
                  str_dhy: str_avq),
               str_utv: bool(BOOL <<: MAXINT <=> FALSE > str_kdq$0))
          ELSIF
            str_ixi < str_ayd$0 or
            #(str_uod).
            (str_jqd >=
             (id
                (rec
                   (str_jcl: NAT1,
                    str_eux: FALSE,
                    str_jci: str_bjk$0,
                    str_bhe: MININT,
                    str_nnf: {},
                    str_llv: TRUE)))
               (str_cdx))
          THEN
            SELECT
              not
                (#(str_vdd, str_qmz, str_pss, str_kos, str_gmp).
                 (not
                    (not
                       (not
                          (rec
                             (str_myp: MAXINT,
                              str_bvm: str_zpw,
                              str_lsu: str_pdl$0,
                              str_eum: str_yto,
                              str_mhg: str_din$0,
                              str_isq: str_qwr) <
                           [])))))
            THEN
              str_hnh, str_dof, str_lzx, str_ykv, str_lok, str_pxi, str_qyi,
              str_cmm, str_wgm :(
                #(str_ham, str_btt).(str_ilr /<<: str_pap) or
                not
                  (str_ayi :
                   {INTEGER,
                    str_nbw$0,
                    str_eqt,
                    str_dnh,
                    rec
                      (str_odi: {},
                       str_tre: {},
                       str_jge: (tree(953)),
                       str_mtc: str_wlr,
                       str_yka: str_lza,
                       str_sgb: FALSE),
                    TRUE,
                    str_uka})
              )
            WHEN
              not
                (str_qwo <=
                 { str_ijt, str_qqu, str_zyr, str_yaj, str_glv
                   |
                   struct(str_sfy: "str_vvg") /<<: str_bba$0 =>
                   not(str_oes > str_aqa$0) })
            THEN
              str_vai 
                (
                  struct
                    (str_ttb: str_xqt,
                     str_kco:
                     rec
                       (str_irv:
                        bool
                          (#(str_ird, str_nze, str_pdb).
                           (!(str_ldi, str_hvx, str_gqv, str_wim, str_toh).
                            (NAT = str_emz$0)) <=>
                           FALSE : str_qnq$0),
                        str_gfa: NAT'str_wzq,
                        str_jji: str_ggk$0))
                )
              
              :=
              [str_gxn$0,
               NATURAL1,
               { str_poy, str_cxi, str_qmf, str_yrw, str_ypg
                 |
                 str_olt >= STRING },
               str_eci$0,
               NAT1,
               { str_nsd, str_jri
                 |
                 #
                   (str_qar, str_gjs, str_rtt, str_eus, str_hij, str_kni,
                    str_hxl).
                 (str_abk /<: str_ubk$0 & STRING > str_qpv) },
               rec(str_mug: [], str_mrx: str_aco$0, str_edc: str_pmg)]
            ELSE
              str_uny'str_zlv
              :=
              struct
                (str_jnl: str_vaa$0,
                 str_tsj: str_qql$0,
                 str_njy: INT,
                 str_lyr: str_wwt$0,
                 str_pws: str_rex,
                 str_pis: str_iyi)
              ,
              (struct
                 (str_pbp: str_dbv$0,
                  str_oty: str_yrp,
                  str_ajf: (str_tyd$0 <| str_iei),
                  str_mhu: str_lpj$0,
                  str_ryi: NATURAL,
                  str_okd: str_dhe,
                  str_kjw: NAT) /
               { str_mxs, str_oog, str_ksa, str_znl, str_wiw, str_gcr,
                 str_rsw, str_bdf, str_xbd, str_zvo, str_wfc
                 |
                 str_qwq$0 /: str_wdh })
            END
          END
        OR
          {SIGMA
             (str_try, str_oqz, str_edm, str_ukn, str_uit, str_kwj, str_oph,
              str_njn, str_sxg, str_vdb, str_wya).
           (#(str_njo, str_uvi, str_ktu, str_jhr, str_zju, str_jqp, str_hqh).
            (str_xkw$0 /<<: TRUE)|
            struct
              (str_mxd: str_pxn$0,
               str_zsk:
               UNION(str_fkp, str_wne, str_xuy).
               (str_bai$0 : NATURAL| [TRUE, str_puw$0, FALSE]),
               str_rrg: bool(FALSE < MININT)))}
        THEN
          CHOICE
            str_ddc, str_vty, str_ifm, str_nfy :(
              #(str_chc).
              (!(str_qfx, str_lzt, str_fbh, str_kbm, str_gzv, str_zca).
               (!(str_cjb, str_gjb, str_djf, str_njo).
                (!
                   (str_sze, str_myv, str_vdm, str_eij, str_oel, str_neo,
                    str_hsp, str_yeg, str_vtx, str_iid, str_dqy).
                 (str_jjz$0 = str_ujf$0 &
                  (str_sku$0 /<<: str_gzw$0 => not(str_bgd /: str_uio$0))))))
            )
          OR
            str_zlj, str_qyn, str_tsl, str_gcl, str_rsm
            <--
            str_cvh
              (({{ str_qeu, str_hjj, str_qze, str_zip, str_isy, str_lsk,
                   str_ljr, str_jbz, str_tnx, str_fiq, str_sjx
                   |
                   inter(TRUE) = NATURAL },
                 str_bcx$0,
                 str_wmx}
                ,
                SIGMA(str_fnh). (FALSE > str_sru| str_gya)'str_kri),
               rec
                 (str_xvk:
                  rec
                    (str_ubx: NAT1,
                     str_czl: str_dro,
                     str_tco: str_uby$0,
                     str_iaj: str_mix$0,
                     str_anm:
                     [rec
                        (str_hah:
                         rec
                           (str_bkf: str_jdu$0,
                            str_fiq: str_exq,
                            str_ffh: str_rpq$0,
                            str_fjf: STRING,
                            str_rdl: NAT1,
                            str_tvu: str_adu$0),
                         str_ufi: str_ruq$0),
                      str_gcl]
                       'str_opw,
                     str_onj: (str_kuy /|\ FALSE),
                     str_deq: str_fzd),
                  str_ozi: MAXINT,
                  str_nkp: str_ozd$0),
               (left
                  ({ str_hhk, str_gqm, str_gmc
                     |
                     str_dkh$0 >= str_lzx$0 & str_qvw <: INT }
                     'str_zzs
                   |->
                   (tree(card(str_aqa$0))))),
               (struct(str_cqy: {INTEGER, str_iuu, str_mrs$0})
                |->
                {[],
                 (iseq({} |-> str_fit$0)),
                 str_vfc$0,
                 str_ynz$0,
                 str_omz,
                 FALSE}
                  'str_mml),
               (POW
                  ((bool(bool(str_zxe$0 : NATURAL) /<<: NAT1) , str_tio)
                   ,
                   str_lfj$0))
                 'str_ahu,
               struct
                 (str_oag: (str_mie$0(str_fxz$0)),
                  str_ofi: str_qiy$0,
                  str_hly: str_ksj$0,
                  str_dmu:
                  (right
                     ([NATURAL,
                       rec(str_egh: NAT),
                       str_zum$0,
                       struct(str_cwl: str_igm, str_jdk: str_qls$0),
                       BOOL,
                       {BOOL, NATURAL, INTEGER, "str_cwm", str_vng, NATURAL1,
                        str_fzr$0, NATURAL},
                       str_kdb]))),
               (dom
                  (rec
                     (str_ibz:
                      (INT , [str_bmh$0, str_jgo$0, str_pdj, [], str_kwc$0]),
                      str_ilr:
                      PI(str_szf, str_hod, str_kfv).
                      (#(str_idl, str_pii, str_ivp).(NAT1 /<: str_mjy)|
                       str_pex$0),
                      str_erc: bool(FALSE < str_gti$0)))),
               (SIGMA
                  (str_hlp, str_kvl, str_gxw, str_wtm, str_fqv, str_bxe,
                   str_gdc).
                (bool(NAT1 >= STRING) <= {NAT, str_glg, str_yts$0}| str_hrl$0)
                ,
                NATURAL'str_ext'str_djy),
               { str_yap, str_sxs, str_izy, str_nja, str_wyg, str_hme,
                 str_otb
                 |
                 not
                   (#
                      (str_mei, str_nus, str_uwz, str_ukq, str_kfc, str_sbo,
                       str_ygk, str_zmk, str_gmt, str_qoi, str_yqp).
                    (not
                       (!
                          (str_skp, str_zuf, str_hzy, str_ksh, str_wkt,
                           str_rkr, str_ggb, str_lub, str_exs).
                        (str_fya : str_bzm) &
                        (str_fci$0 /: BOOL or str_lwq = str_xgw$0)))) },
               {NATURAL1,
                str_zmt,
                str_dzz,
                (bool
                   (!
                      (str_acg, str_fcs, str_sri, str_bfr, str_wee, str_wft,
                       str_vre, str_ytb).
                    (#(str_paq, str_kbk).(str_vqv <<: str_dnm)))
                   ({ str_dko, str_znh, str_jmt | not(TRUE < str_gcx) }))})
          OR
            str_hub, str_jkf, str_jdj, str_zjw, str_syw, str_xla
            :=
            rec
              (str_xsb:
               struct
                 (str_axb: str_pez$0,
                  str_ltv: (closure(str_rnu$0(str_xao$0))),
                  str_jbn: INT,
                  str_xii: STRING,
                  str_gmj: TRUE,
                  str_upw: str_pij$0,
                  str_act: str_jfm,
                  str_pjw: str_arn),
               str_oqs:
               struct
                 (str_koz: str_bhn,
                  str_vzk: str_adx$0,
                  str_awq: str_fuj$0,
                  str_lvf: str_ikv$0,
                  str_kxp: str_ora$0,
                  str_pyp: str_qnp,
                  str_klo: INTEGER),
               str_qvk: ((str_fnd(3))(str_muq$0)),
               str_xyj: NATURAL1,
               str_jrq: str_xwg)
          OR
            str_vna, str_kyc
            ::
            {{NATURAL1, (str_eno$0(str_umf))}, INT}
            |->
            (rec(str_gid: str_cop, str_gtz: NATURAL1)'str_adc(str_mia$0))
          OR
            str_pok
            <--
            str_fkb
              ([[],
                ((str_qwt$0 ||
                  [str_bjz,
                   SIGMA
                     (str_pkd, str_bat, str_ila, str_gus, str_fmw, str_ncd,
                      str_zmr, str_eug, str_lpo).
                   (NAT1 /= str_rwi$0| NATURAL1),
                   struct(str_dlk: str_yqo$0, str_qcx: (seq(str_vdv)))])),
                str_dsk$0,
                { str_nzg, str_xkn | BOOL : str_rcy },
                4],
               rec
                 (str_fdn: (str_apa(str_lus)),
                  str_jnu:
                  bool
                    ({ str_hqa
                       |
                       !
                         (str_xvy, str_ixe, str_kgc, str_div, str_reb,
                          str_myd, str_gbn, str_wca, str_jgp, str_vmk,
                          str_ejj).
                       (str_lip /: str_yao$0) } /<:
                     bool(str_oin$0 < str_cyh$0))),
               (bool
                  (#
                     (str_dme, str_tka, str_viz, str_oem, str_cxz, str_vmi,
                      str_msz).
                   (#(str_ppd, str_ror, str_wgv, str_rpe).
                    (#(str_cxu, str_jpt, str_efv, str_ctu, str_lqq).
                     (#
                        (str_leq, str_aoh, str_byw, str_mpx, str_jzd,
                         str_vxk, str_cmp, str_zqd, str_twt, str_jhi).
                      (str_ude /= str_hmk))))) <->
                struct
                  (str_aic: str_vlg,
                   str_omc: str_zsh$0,
                   str_mok: str_mhw$0,
                   str_zxo: STRING,
                   str_dfr: str_szj,
                   str_fun: str_bhl$0,
                   str_ijk: [],
                   str_bcu: str_xcr$0)),
               %(str_kib, str_fow, str_srd, str_vps, str_xhg, str_kwu).
               (PI(str_qje, str_vpo). (str_uwc$0 : str_nig$0| str_eev$0) /:
                {INT, MININT, str_rah, str_ndf, FALSE, str_ers, str_gmn$0}|
                rec
                  (str_als: str_mzk$0,
                   str_ozl: str_dri$0'str_qmc,
                   str_qtr: str_pwl,
                   str_ofp: str_mcu$0,
                   str_nfk: TRUE,
                   str_fur: (str_ujw$0 \|/ str_tcy$0),
                   str_pbx: str_oqz,
                   str_heq: str_fdw)),
               rec
                 (str_seb:
                  (UNION(str_uqb, str_aqy, str_oqb). (NAT1 >= 9| str_pmb)~),
                  str_rec:
                  {{ str_ryy, str_zca, str_lqg, str_jig
                     |
                     !(str_kin, str_gxq, str_jif, str_sha).(NAT /<<: INT) },
                   str_msj$0,
                   NAT,
                   SIGMA
                     (str_qex, str_ozw, str_gjl, str_bka, str_gmc, str_uez,
                      str_ipm, str_nqj).
                   ([] <= MININT| str_der)}),
               {str_aez$0,
                str_iug,
                {str_sdk$0,
                 str_lfr,
                 str_lxb$0,
                 { str_yry, str_zrk
                   |
                   !(str_vqk, str_tbe).(NATURAL < str_xmc$0) },
                 {},
                 NAT,
                 str_snz$0,
                 str_xwu},
                INTEGER,
                str_cag,
                %(str_gfx).
                ("str_qdo" >= str_sai$0 <=> {} /<: str_pcr| str_pdw),
                []},
               INTER
                 (str_mvh, str_tbp, str_tmr, str_ybm, str_jrf, str_iuy,
                  str_dqe).
               (!
                  (str_pnf, str_pda, str_gzz, str_ynu, str_ihn, str_kyq,
                   str_dad, str_rjq).
                ((NAT1 = BOOL =>
                  !
                    (str_qlj, str_yqq, str_ksp, str_gat, str_yzu, str_fhk,
                     str_obs, str_bqf).
                  ({} >= str_kqy$0)) <=>
                 !(str_fbz, str_zgo, str_usr, str_see).(str_elg = []))|
                str_kzc$0 \|/ str_rfq),
               {[],
                { str_kxx | str_fmb >= str_dpp$0 },
                ((seq1
                    (rec
                       (str_aqu: str_gsw$0,
                        str_xjd: str_siq$0,
                        str_yso: INTEGER,
                        str_oco: FALSE,
                        str_aih: str_ban,
                        str_zsb: str_wwv$0,
                        str_azz: str_ycl$0,
                        str_zei: str_rgs) >->
                     NATURAL1)) ->
                 bool(NATURAL <= INTEGER))})
          OR
            str_gwy'str_fdb
            :=
            subtree
              (iseq
                 (rec
                    (str_hyy:
                     { str_bpx, str_gvg, str_vai, str_tcx, str_mcq, str_zze,
                       str_bct, str_bvn, str_xxm, str_sxe, str_yyy
                       |
                       str_rav$0 /<<: str_gob => str_deo > str_nmi$0 })))
          OR
            str_vlk, str_gfr, str_hzj, str_crk, str_xno, str_abc, str_bxu,
            str_xqb, str_tlk, str_owx
            :=
            const
              ((str_vpo(str_hpi$0))
               ,
               { str_hyx, str_kuz, str_zrw, str_yhi, str_wmu, str_ynx,
                 str_vhj, str_oyy
                 |
                 not
                   (#(str_ptg, str_vgt, str_tjz, str_sjh, str_ecg, str_kbl).
                    (!
                       (str_qel, str_kny, str_tbk, str_pjn, str_pjd, str_clz,
                        str_ckf, str_efx).
                     (NAT <= NAT))) })
          OR
            str_mya, str_msm :(
              #(str_gsx, str_szl, str_nmf, str_igp).
              (!(str_zhe, str_bvo, str_dwx, str_ceo, str_snr).
               (str_chp$0 :
                rec
                  (str_xne:
                   struct
                     (str_txb: TRUE, str_vui: NATURAL1, str_exi: "str_ihm")) or
                not(str_dlj$0 <= str_vhu)))
            )
          END
        END
      END
    END
  END;

  str_scp, str_buj, str_keh, str_nss, str_etz, str_qyk, str_xqt, str_mpr,
  str_bzl, str_tnt
  <--
  str_ghr (str_gwz, str_kiz, str_hku, str_xwn, str_zal)
  =
  ASSERT
    str_cby /= tail(NAT) <=>
    !
      (str_zwk, str_fou, str_pat, str_uuc, str_sqs, str_rqb, str_hyw,
       str_fho, str_kvi, str_ebx, str_jrf).
    (not
       (not
          (#
             (str_bwt, str_npw, str_vse, str_rcf, str_zhb, str_fgf, str_zrn,
              str_dvr, str_fzh, str_npg).
           (BOOL /= str_agb$0))))
  THEN
    CHOICE
      str_gmm, str_vvt, str_ldl, str_ula, str_osi, str_eem
      <--
      str_utf
        ((UNION
            (str_cwi, str_zyw, str_guz, str_vjw, str_ryf, str_aur, str_mgi,
             str_aqm, str_oal, str_xch).
          (str_ozr >= str_bkb|
           struct
             (str_xhm: str_crp$0,
              str_qbd: (str_hcf$0~),
              str_sku: str_dqs,
              str_hqm: MININT,
              str_tto: str_eaf$0))
            'str_qxa
          ,
          bool(#(str_oxo, str_lvg).(str_zbc : str_grg))),
         (subtree
            (SIGMA(str_dep).
             (str_hou /<: str_ccd|
              bool
                (!(str_myj, str_cjq).
                 (#(str_frf, str_vjt, str_mue, str_vgw, str_sdf).
                  ({ str_qqx, str_mxb, str_wka, str_ivi | NAT1 >= str_yak } >
                   [])))))))
    OR
      PRE
        !
          (str_eif, str_lwi, str_djq, str_caf, str_udq, str_teq, str_ynb,
           str_ryz, str_att, str_wwz, str_jke).
        (str_yql$0 <: str_bri) &
        bin(rec(str_jwt: (str_hlx$0 |-> STRING), str_oat: str_igw$0)) =
        str_ztw$0
      THEN
        WHILE
          #(str_ybx, str_yxd, str_hxb, str_ees, str_ijs, str_qqu).
          (#(str_jvv, str_ong, str_llo, str_ecq, str_vpb, str_plk).
           (!
              (str_hwi, str_jkv, str_eho, str_btw, str_vpa, str_uov, str_wcl,
               str_loq, str_wjd).
            (!(str_gdu, str_jbs, str_gay, str_tia, str_eeg, str_yaa, str_pxz).
             (!
                (str_pkl, str_ysg, str_abl, str_tsy, str_pgd, str_lxz, str_fls).
              (!
                 (str_lan, str_fmy, str_duh, str_tbh, str_gvv, str_frb,
                  str_xim, str_wxm, str_kvx).
               (not(str_akx$0 : str_zwx)))))))
        DO
          SELECT
            #(str_rfs).
            (not
               (!(str_zyn, str_nyq, str_lug, str_eqt, str_vlw, str_ggh).
                (not
                   (#(str_udu, str_mlp, str_ktn, str_xcd, str_qom, str_jyu).
                    (#(str_pka, str_ids).
                     (!
                        (str_ira, str_con, str_scj, str_uqt, str_aje,
                         str_ojn, str_dlo, str_hpo).
                      (str_baf$0 > str_qvz$0)))))))
          THEN
            skip
          END
        INVARIANT
          not
            (#(str_vtq, str_lio, str_gop, str_czp).
             (#(str_kle, str_ixw, str_buy, str_wtc).
              (not(bool(not(str_iom$0 /<<: str_tsl$0)) >= str_bkm$0))))
        VARIANT
          bool
            (#(str_jdm, str_yyi, str_vwo, str_doe, str_ofw, str_ynx).
             (#(str_gnm).
              (str_ouw$0 <:
               struct
                 (str_xjv:
                  %
                    (str_xuk, str_sop, str_nxv, str_yuk, str_kyz, str_qck,
                     str_tff, str_lqp).
                  (TRUE < str_jaz| str_kym$0),
                  str_gbk: str_rjn$0))))
        END
      END
    OR
      str_opa 
        (
          {[NAT1, str_jjl$0, str_zrm$0, BOOL, STRING],
           (str_mkp$0 .. BOOL),
           str_efa,
           bool((id(str_hvk$0))'str_azq /: str_qsv),
           NATURAL,
           NAT1,
           TRUE}
        )
        (
          (STRING \|/ rec(str_dnd: str_xkb$0, str_aqw: str_gum)) |>>
          struct
            (str_wwt:
             (struct
                (str_wyu:
                 struct
                   (str_gcy: MAXINT,
                    str_hpb: str_zgs$0,
                    str_oio: str_sqd,
                    str_hxo: str_ict$0)) *
              str_qeo))
        )
        (
          rec
            (str_uhx:
             rec
               (str_bvs: (str_hoh(str_ymr |-> str_htl$0)),
                str_xjm: str_oab$0'str_jby),
             str_vok:
             (id
                (rec
                   (str_rrj: str_tzc$0,
                    str_vkw: str_vto,
                    str_jur: STRING,
                    str_wip: [],
                    str_yvh: str_scz,
                    str_ajx: NATURAL,
                    str_feq: str_cbk,
                    str_ewp: str_kim))),
             str_cas: str_lod$0)
        )
      
      :=
      { str_ron, str_rsw, str_fxb, str_gsu, str_ttp, str_mlz, str_cxw,
        str_mjo, str_veb, str_emi
        |
        not
          (not
             (not
                (#
                   (str_qae, str_bku, str_ink, str_onp, str_vfl, str_cmb,
                    str_dqo, str_gwr, str_bui, str_vdw, str_kty).
                 (NAT1 /: str_alo) <=>
                 BOOL > NATURAL1)) =>
           str_cey /<<: BOOL) }
    OR
      skip
    OR
      str_knx'str_app
      :=
      {([{},
         NATURAL1,
         {},
         str_oxo$0,
         str_oee,
         str_vmj$0,
         (str_rbi(father(str_yrq$0))),
         INT] +->>
        [str_bbl$0,
         NATURAL,
         { str_izh, str_spx, str_vqn | FALSE < str_vzl$0 },
         str_kzr,
         str_ckb,
         str_rtv,
         str_rku])}
    END ||
    ANY
      str_vin, str_egk, str_mfw, str_hrr, str_bhn, str_hbp, str_dzk, str_shy,
      str_svp, str_vfa, str_shq
    WHERE
      not
        (not
           ({ str_smn, str_nsm, str_lsp, str_dki, str_ndb, str_ead, str_nfm,
              str_fol, str_wvk
              |
              not
                (!
                   (str_bjl, str_ytn, str_xfa, str_hno, str_loz, str_juk,
                    str_syj, str_zfx, str_kvn, str_qne, str_ucq).
                 (str_njh /= str_nfl$0)) } <:
            str_vrp$0'str_noc))
    THEN
      str_oxw, str_dxc, str_ofb
      :=
      {bool
         (#
            (str_wqz, str_kzn, str_ukd, str_kwo, str_ykx, str_xnc, str_ico,
             str_aia, str_zcv, str_teu).
          (str_gjs /: str_qgm$0 or
           !
             (str_rrp, str_ulw, str_xqz, str_ins, str_nxj, str_oob, str_swv,
              str_wgh, str_tzd, str_khe).
           (!(str_din).(FALSE /= [])))),
       struct
         (str_cuk: str_kdh$0,
          str_mra: str_znb,
          str_sje: str_wkq$0,
          str_hzb: str_bxx$0,
          str_gzy: str_eau,
          str_jxg: str_zui),
       str_oea,
       str_kfg,
       str_sgj$0,
       MAXINT}
    END
  END;

  str_tiw, str_xmi, str_tkp, str_iwx, str_vzg
  <--
  str_kku (str_eli, str_fin, str_uru, str_pjd, str_tel)
  =
  WHILE
    #(str_jhj, str_nng, str_syq, str_wud, str_mds).
    (#(str_bdz).
     (not
        (not
           (str_trs$0 /=
            { str_zrg, str_sdf, str_dvf, str_fky, str_epg, str_hcx, str_fie
              |
              str_qap /<<: str_rdm }) &
         str_jjc$0 > str_apx$0)))
  DO
    LET
      str_acs, str_jdl
    BE
      str_lin
      =
      INTER(str_fbn, str_ejl, str_wew, str_sbl, str_jkw, str_xoh).
      (PI
         (str_vvb, str_gen, str_tyy, str_hvt, str_joj, str_bom, str_acu,
          str_yfj, str_cng, str_hyu, str_pfp).
       (str_mde$0 >= str_ack| str_cqk$0) :
       str_tfp <=>
       str_shc$0 /<<: str_kdu|
       {struct
          (str_zhs: str_jzt,
           str_wim: str_ioe$0,
           str_ngs: str_lgk$0,
           str_bwi: str_gzp,
           str_oyb: STRING,
           str_eye: str_cbg$0,
           str_zzz: str_dts$0,
           str_atr:
           struct
             (str_lao: str_sat$0,
              str_hlb: str_dgy,
              str_wom: str_azx,
              str_awb: str_eal,
              str_qqj: NAT1,
              str_ghb: [])),
        str_gqx$0,
        str_rtl})
    IN
      CASE
        rec
          (str_nlt: (str_nzt |-> str_ofo$0),
           str_rzj:
           bool
             (str_kvw /= str_unh or
              !(str_tut, str_rpb, str_dsv, str_hph).
              ((str_tst /= str_nrz => FALSE /: TRUE) => MAXINT < BOOL)))
        OF
        EITHER
          {((NATURAL , str_jew$0)
            ,
            bool
              (!(str_tnz, str_klm, str_nxt, str_oub).
               (str_ict$0 /<: str_fpd$0))),
           {MAXINT, str_ucg}'str_svq}
        THEN
          str_bwa'str_gew
          :=
          { str_oqo, str_kjh, str_ocy, str_uef, str_pkk, str_siw, str_rtp,
            str_gme, str_ajk
            |
            !(str_gva, str_qxa, str_cmd).
            (str_zyb$0 <<: str_use$0 =>
             not
               (!(str_dgg, str_nvw, str_izn, str_xge).
                (str_ced$0 /<<: BOOL <=> str_txx < str_pxe$0))) }
        OR
          rec
            (str_cxy: MININT,
             str_lki: str_ucm,
             str_lea: INTEGER,
             str_hwj: str_drq,
             str_xdb: str_fec$0,
             str_bbv:
             { str_qry, str_kdk, str_siy, str_zvr, str_omg, str_llz, str_vif,
               str_tgv, str_sor
               |
               not
                 (#(str_ytm, str_yyh, str_qfo, str_wbv).
                  (str_euo(str_ohe$0'str_qeq) <: str_qsn$0)) })
        THEN
          str_dkg, str_eic, str_gkq, str_euq, str_yvv, str_gyy :(
            [(str_xgz$0 ^ INT)'str_bch, NAT] /=
            struct
              (str_szk: (INTEGER <| STRING),
               str_hmc: INTEGER,
               str_ghi: bool(STRING /<<: str_hxx$0),
               str_umm: str_tpy$0,
               str_lof: NAT1)
          )
        OR
          {str_dpj$0, (STRING |-> str_xqp)} >->
          { str_pza, str_tte, str_bko, str_tyj, str_atn, str_pur, str_fdm,
            str_pnc, str_gba, str_pdu
            |
            str_mba$0 : str_ovy <=>
            #(str_nzo, str_kce, str_qeb, str_phm, str_hvk).
            (not(str_mkk$0 < str_ivj)) }
        THEN
          skip
        OR
          rec
            (str_crm: BOOL,
             str_ndm: MININT,
             str_npe:
             (%(str_rql, str_tbp, str_cjd, str_gsv, str_gis, str_xph).
              (str_hpj = {}| str_jaz)
                (str_ggf$0)),
             str_yln:
             ((struct(str_mgc: INTEGER, str_ngv: NATURAL, str_tkl: str_zwb$0) ||
               rec(str_ton: str_wsc$0, str_cws: str_cke, str_zyr: str_onp))),
             str_aww: NATURAL,
             str_tjn: str_xxs$0)
        THEN
          str_gfq'str_kgn
          :=
          conc
            (struct
               (str_kel: str_dhf,
                str_lux: (perm(INTEGER'str_raw)),
                str_kxp: str_vqe,
                str_elb:
                struct
                  (str_moh: MAXINT,
                   str_ujg: str_set$0,
                   str_kbw: str_cze$0,
                   str_hwj: str_rxv,
                   str_ahk: str_azb,
                   str_ewc: str_fqn$0,
                   str_cok: MAXINT,
                   str_ahx: str_vrg),
                str_iwd: struct(str_qtw: str_ape, str_zjb: str_ott),
                str_jjs: [str_tgu$0, str_lcm, str_iqc, str_tqy]))
        OR
          {[str_hnw,
            str_ukk$0,
            str_muo,
            str_uus,
            str_nca,
            [(tree
                (bool
                   (!
                      (str_jil, str_ptx, str_lrd, str_paz, str_dlg, str_wzj,
                       str_vav, str_afz, str_ixh, str_wca).
                    (1 /<<: str_oox$0)))),
             [str_wkq$0, "str_jgw", str_vux$0]],
            str_qoq,
            FALSE],
           str_jbj,
           str_wxp}
        THEN
          skip
        ELSE
          str_ldq, str_paq, str_aei
          <--
          str_hmz
            ({bool(str_rtv /= str_lpg & str_wth$0 = str_lft$0)'str_rfs,
              (union
                 ({NAT1,
                   STRING,
                   [MAXINT, NAT1, MAXINT, str_buq],
                   BOOL,
                   str_ljo,
                   str_toz,
                   MAXINT,
                   str_yhw}))},
             (SIGMA
                (str_dxv, str_ujm, str_jhv, str_zbb, str_ueu, str_ion,
                 str_jqj, str_whg, str_unw).
              (not(str_trx(INTEGER) <= str_bqq)| str_sqp(str_yia$0))
              ,
              [str_grd$0, str_vjb, str_eqm]),
             (str_itp
              ,
              bool
                (!(str_pxb, str_aom).
                 (#
                    (str_jey, str_ilx, str_xer, str_teo, str_jgn, str_zhd,
                     str_qfy, str_wvq, str_okz, str_zzj, str_klc).
                  (not
                     (str_svo$0 <=
                      struct
                        (str_idu: str_fgh,
                         str_bjs: str_grm$0,
                         str_ihw: str_itt$0,
                         str_efa: str_bsw,
                         str_mos: str_ikn$0,
                         str_dqq: str_qhl$0,
                         str_cxo: str_fop)))))),
             bool
               (#
                  (str_vos, str_uaj, str_hhs, str_htl, str_zej, str_kaw,
                   str_amy, str_yko).
                ([NAT1, str_kko$0, [], NATURAL1]
                   (bool(!(str_kcq).(str_nqy < str_ifz))) <=
                 FALSE)),
             ([{ str_xxu, str_ref
                 |
                 !
                   (str_kzm, str_kyn, str_ukn, str_dfv, str_kjn, str_uiy,
                    str_ppz).
                 (str_bme$0 <: str_urd$0) },
               bool
                 (#
                    (str_bmo, str_omn, str_ekl, str_nmt, str_cwb, str_epg,
                     str_qxr).
                  (str_rvh /<: MAXINT)),
               str_urg,
               NAT1]
                (INTEGER'str_xjr)),
             (INTER(str_wmo, str_xcp, str_hag, str_duh, str_zzh, str_zez).
              (#
                 (str_nvd, str_nyr, str_cfn, str_ovx, str_soj, str_msy,
                  str_kht, str_npa, str_job, str_beq, str_buv).
               (!(str_eun, str_aag).("str_qkm" /= str_pxi))|
               {str_ijp, str_suh$0, str_yqc, str_ibp, str_pfg, FALSE,
                str_qpx$0}
                 'str_rad)
              |->
              (str_psp(str_mwq))),
             struct
               (str_fxd: str_pcj$0,
                str_mrh: str_ysd,
                str_shf: str_nux,
                str_gxw: NATURAL1,
                str_vth:
                struct
                  (str_mey: str_jks$0,
                   str_xvy: str_fcp$0,
                   str_wqw:
                   rec
                     (str_yst: TRUE,
                      str_bus: BOOL,
                      str_gba: UNION(str_nsj). (str_tlg = str_fyr| str_zwk),
                      str_nwf: MININT),
                   str_mjo: TRUE'str_svm,
                   str_cdf: bool(str_wwc$0 <<: str_wja)),
                str_awy: str_zno$0,
                str_cwa: INT,
                str_dhk: str_gua$0),
             (PI(str_lvm, str_trk).
              (str_sgu$0 /<<: str_nxs|
               bool(str_bil$0 /: str_hjb$0) <-> (str_osl(str_rxf)))
                (size(MININT(str_gxq$0)))),
             { str_wis, str_yaz, str_rmf
               |
               str_hpt$0 <<:
               { str_lvk, str_qir, str_rnm, str_ubl, str_hhf, str_ptq,
                 str_ihz, str_mhv
                 |
                 !(str_oad, str_fur, str_exh, str_xci, str_cve, str_wid).
                 (str_rny /<<: str_goc =>
                  #
                    (str_dkk, str_syg, str_mfs, str_dtm, str_rrw, str_ulq,
                     str_tif, str_yid, str_buq, str_pya, str_nwr).
                  (str_wld : {})) } }
               'str_air,
             (bool(STRING > str_obf) ><
              (((str_xav$0 |-> str_nqp)
                ,
                [str_dwf$0, str_cxi$0, str_bav, str_nvv, NATURAL1])
                 'str_uvh
                 (str_rwl$0))))
        END
      END
    END ;
    SELECT
      not
        (!
           (str_gtv, str_vrp, str_xgm, str_wmx, str_kaf, str_tfk, str_pyn,
            str_prc, str_phz, str_kql).
         ((struct
             (str_hoc: str_fdm,
              str_ard: str_zhk$0,
              str_zsw: str_lgs$0,
              str_wej: NATURAL,
              str_pte: str_vbs$0)
           |->
           str_osx$0)
            'str_vpd /<:
          {str_xbj$0, str_aho, str_lul, str_jae, str_wpo, str_ksm, 753}))
    THEN
      IF
        (str_rdp /<: str_tbo$0 => not(not(FALSE > str_ltm))) or
        #
          (str_rra, str_qft, str_wwf, str_ysa, str_ktu, str_ick, str_egv,
           str_bic, str_ghz, str_qcu).
        (not(#(str_bhr, str_tpf, str_gtc, str_baa).(str_pwu$0 > str_qzx)))
      THEN
        skip
      ELSIF
        str_jpc$0 /= str_rlh$0 &
        !
          (str_ufh, str_ghr, str_uyj, str_cjd, str_dgy, str_msj, str_fuy,
           str_xxi).
        ({ str_sst, str_atf, str_cgt, str_hhc, str_svw, str_tfe, str_eod
           |
           str_kqa$0 /: bool(INT <<: "str_fbu") }
           (str_mdw) <:
         str_rzi$0)
      THEN
        str_dbg 
          (
            father
              (rec
                 (str_pgs:
                  struct
                    (str_rwt: str_aqs$0'str_gnz,
                     str_iuo: BOOL,
                     str_slh: str_whr$0,
                     str_ltn:
                     {NAT, str_crx$0, str_xfi$0, (str_cjn$0 , STRING)}))
                 'str_bbm)
          )
          (
            { str_hsh
              |
              #(str_piw).
              (not
                 (#(str_crd, str_xhy, str_jro, str_zdx).
                  (#
                     (str_ufw, str_ogi, str_wcc, str_kpu, str_fqv, str_rme,
                      str_ogt, str_col, str_twy, str_laj).
                   (str_pud <= NATURAL => str_inz /= str_lnp$0)))) }
              'str_fjs
          )
        
        :=
        rec
          (str_wxo: str_ywb,
           str_plm:
           struct
             (str_gji: str_apd,
              str_fjv: MININT,
              str_wnt: str_adi,
              str_xzu:
              {MAXINT, str_scx, NAT, STRING, str_kub$0, str_avv, str_dbf$0},
              str_azm: str_fdg$0,
              str_rmh: str_zsw,
              str_jud: str_uop,
              str_jev: str_rzd$0),
           str_lxz: str_wrv,
           str_fhe:
           UNION(str_ipy, str_xxi).
           (!
              (str_sjj, str_zec, str_jnn, str_bac, str_pqu, str_ghn, str_acu,
               str_fba, str_zfq, str_uik, str_csw).
            (!
               (str_esm, str_rvm, str_paf, str_vog, str_asp, str_vym,
                str_ndn, str_vly, str_vmr, str_cwa).
             (not(str_ylj <= str_lkz)))|
            str_cny$0),
           str_erv: str_uaw,
           str_xet: str_ldd,
           str_ojo: NAT)
      ELSIF
        not
          ({BOOL, str_wjy$0, str_xve} /=
           { str_prm, str_lib, str_kwd, str_fry, str_kls, str_yem
             |
             bool(str_mvy$0 /<<: str_zei$0) : MININT })
      THEN
        str_gpx, str_pea, str_agr, str_doo, str_xev, str_woa, str_rmr,
        str_adv
        <--
        str_rdp
          (SIGMA
             (str_kfz, str_esh, str_sjf, str_ogp, str_gyd, str_yhe, str_nzs).
           (#
              (str_vyg, str_ggq, str_oqe, str_ymh, str_ymq, str_zqh, str_kut,
               str_wmw, str_bfu).
            (not
               (#
                  (str_zhq, str_fef, str_hcu, str_fyg, str_alh, str_oyl,
                   str_zwn, str_lpj, str_why, str_goz, str_plo).
                (str_rjk$0 > str_euz$0 or str_big /<<: INTEGER)))|
            ((str_eof$0 |-> NATURAL1) || str_vfw)),
           (rec
              (str_bio: INTEGER,
               str_god: { str_sca, str_vxo | str_mrw /<: str_ays },
               str_hze: (NATURAL(struct(str_zmu: [])))) /
            (str_zfu$0 , str_blv$0))
             'str_ezo,
           (last
              ((%(str_fys, str_eqm, str_uwt, str_uhc, str_qeu).
                (FALSE >= str_dnt|
                 struct
                   (str_bgm: str_sbl,
                    str_lzt: str_hxc,
                    str_lmi: NATURAL1,
                    str_mga: INTEGER,
                    str_dtz: str_ubz,
                    str_ito: str_myx,
                    str_qer: str_ycn$0))
                ,
                bool
                  (#
                     (str_xgd, str_utb, str_ynt, str_zrj, str_fty, str_pmi,
                      str_zri, str_svt, str_aep).
                   (6 < NATURAL1)))
                 'str_ahq)),
           {(sons(NAT1 <<| bool(not(#(str_qxl).(str_ztv = NATURAL))))),
            (right(str_xoo$0))},
           struct
             (str_wdg: str_qco$0,
              str_okv:
              (arity
                 (bool
                    (!(str_fen, str_inn, str_meq, str_duz).
                     (#(str_myn, str_pqn).
                      (#
                         (str_ach, str_fwv, str_otf, str_gkr, str_fkt,
                          str_zen, str_spc).
                       (NAT1 < str_akh))))))))
      ELSIF
        !(str_cth, str_cec, str_yjq, str_zsy, str_axc, str_cyl, str_nfy).
        (#
           (str_nvh, str_oow, str_eci, str_own, str_edz, str_jxz, str_afi,
            str_qgh, str_anv, str_uih, str_pds).
         (!(str_xrw).(str_qcv$0(str_lgh$0'str_sie) /<: str_clo$0 , MAXINT)))
      THEN
        str_xdn'str_ccs
        :=
        son
          (struct
             (str_cyk: FALSE,
              str_wao:
              bool
                (MAXINT /<<: str_yfb$0 &
                 NATURAL <= str_dvk$0 &
                 FALSE /<<: INT))
           ,
           SIGMA(str_ntj, str_bas, str_kwe, str_qxx).
           (str_epo = str_jjr$0| BOOL))
      ELSIF
        !(str_ajo, str_gxo, str_uxp, str_iym, str_coc).
        (#(str_krm, str_tbo, str_pau, str_wdb, str_qdp, str_bgx).
         (str_cbt$0 /<: INT)) or
        (not(str_euu = str_lnl) =>
         (str_weu <= STRING <=> str_wwa = str_zpf$0))
      THEN
        str_eej 
          (
            rec
              (str_sut: [str_pne, str_uha, MAXINT]'str_tvf,
               str_nlu:
               rec
                 (str_cep:
                  struct
                    (str_gnb: str_lgp$0,
                     str_lwg: MAXINT,
                     str_bvk: str_afg$0,
                     str_zyb: NATURAL1,
                     str_kuk: str_kxl),
                  str_wqy:
                  { str_hpl, str_lre, str_ejw, str_jvb, str_hut
                    |
                    str_jbu$0 >= NAT or NATURAL > NATURAL1 },
                  str_uws: str_moc$0,
                  str_kpq: str_fuz$0,
                  str_ykq: str_esq$0))
          )
          (
            INTER
              (str_uep, str_ngf, str_kgx, str_byw, str_yus, str_dpu, str_osp).
            (NATURAL1 /<: str_oot$0|
             struct
               (str_zid: MININT,
                str_wzs: str_dae$0,
                str_cpr: str_gdw$0,
                str_wud: str_pgn$0,
                str_lcl: str_kfd$0,
                str_mmf: str_yod,
                str_lbp: str_gtc)
               'str_wdt)
              (fnc({str_kwg, str_gpn$0'str_zfu, str_fri}))
          )
          (
            str_jql$0
            ,
            (MININT +
             rec
               (str_zyy: TRUE,
                str_igp: {TRUE},
                str_jjs: str_mgf,
                str_vtm: str_bqr$0,
                str_lma:
                {INT,
                 NATURAL1,
                 TRUE,
                 PI(str_gpi, str_ymd). (str_ldc$0 /<: NATURAL1| MININT),
                 INT,
                 str_nhi$0,
                 str_sqn$0,
                 BOOL},
                str_swk: (INTEGER , str_trg)))
          )
          (
            str_dcn$0
              (rec
                 (str_nag:
                  rec
                    (str_eos:
                     %
                       (str_qlx, str_luw, str_fyb, str_ztc, str_hji, str_sej,
                        str_fcj).
                     (!(str_rmh, str_tzg, str_cgb, str_kjc, str_gmm).
                      (!(str_gst, str_vmy, str_iox).(str_pqe <= str_zfc))|
                      INT'str_qww),
                     str_nnw: MININT,
                     str_gmi: NATURAL,
                     str_zdb: str_cwv,
                     str_ttt: str_izp,
                     str_rot: str_mbx),
                  str_jhv: str_nxo$0,
                  str_cig: str_sst,
                  str_suv: str_dal))
          )
          (
            { str_zef, str_akh, str_bqe, str_jqo, str_uhy, str_kbz, str_ynj,
              str_qcx, str_mhc, str_fgx, str_rtj
              |
              PI
                (str_dij, str_pqs, str_ade, str_vek, str_vnu, str_axx,
                 str_nrz).
              (str_gcw$0 : str_xau| str_hmy) <<:
              (str_hbe |-> ((id(str_csj$0))(INT)))(NAT1) }
          )
          (
            bin
              (rec
                 (str_qwu: { str_bpv, str_fvs | not(not(NAT > [])) },
                  str_gfp:
                  rec
                    (str_hkd: [],
                     str_xki: str_mfk,
                     str_cdm: str_cbv,
                     str_lnb: rec(str_obf: NATURAL),
                     str_haq: [],
                     str_vao: NAT,
                     str_ejs: NATURAL)))
          )
          (
            bool
              (not
                 (INTEGER ** (infix(str_ldz)) <
                  {str_cpl$0,
                   str_fbr$0,
                   str_fsi$0,
                   str_onp,
                   { str_txa, str_qyl, str_wfq | STRING /<: {} }}))
          )
          (
            bool
              (struct(str_pgs: str_btt, str_vdp: NATURAL1)
                 ([str_wrn, str_bli, str_eoa$0, str_yzm$0, str_dkf, str_vjd]
                    'str_bwc
                    (NAT1)) /=
               str_upm$0)
          )
          (
            seq1
              (SIGMA(str_dmh, str_mlr).
               (not(not(str_cff <<: str_osx$0))|
                (struct
                   (str_zsf: NAT,
                    str_xrs: str_mkv$0,
                    str_pbe: str_vkn$0,
                    str_anw: str_ikx,
                    str_koe: NATURAL,
                    str_jmw: str_kts$0,
                    str_qth: NATURAL) ^
                 {})
                  (str_eft$0)))
          )
          (
            {NAT1,
             str_svf,
             rec
               (str_wge: (ran(str_qrb(str_rib$0))),
                str_tgi: str_hve$0,
                str_ujg:
                (mirror
                   (SIGMA
                      (str_dfc, str_hxk, str_rsc, str_deo, str_que, str_pxi,
                       str_adu, str_urz, str_nhc, str_tuh).
                    (str_obo /<: str_aey| []))),
                str_mtv: str_afl,
                str_uuz: str_oam),
             str_kse$0,
             {},
             struct
               (str_xyu: NATURAL1,
                str_lqf: NATURAL,
                str_hwz: INTEGER,
                str_uic: str_jeq$0,
                str_tnn: str_wez,
                str_omx: str_xny,
                str_ocb: TRUE)}
          )
          (
            { str_hhl, str_gxn, str_vqp, str_dmr, str_chq, str_fhu, str_aoj
              |
              !(str_rzt, str_loj, str_dwn, str_uvn, str_qtn).
              (#(str_aqu, str_nsn, str_ufx, str_ktu, str_jns).
               (not([str_wst, str_wdu] <= NAT1 >-> NAT1))) }
          )
        
        :=
        [(last
            (INTER(str_zbt, str_txv, str_noi, str_uwe, str_xuu, str_mvk).
             (#(str_bov, str_qxj, str_dfr).(NAT1 /<: str_lva$0)|
              str_gon$0'str_dej ^ MININT))),
         { str_fbr, str_vxs, str_qgc, str_dwt, str_run, str_nem, str_wny,
           str_jzu
           |
           NAT >= str_qsf$0 },
         str_qjq,
         str_fhb$0,
         str_eif,
         str_bks$0]
      ELSIF
        str_hok$0({}) /<:
        { str_oap, str_bgf, str_djg, str_uvx
          |
          FALSE |-> str_lnk$0 >
          { str_ftu, str_bqp, str_frv, str_mzr, str_jtd, str_zum, str_tep,
            str_enm, str_gbx
            |
            !
              (str_uiv, str_qiq, str_rjs, str_aet, str_jys, str_qhy, str_jev,
               str_dna).
            (str_vtn$0 /<: str_egb) } }
      THEN
        skip
      ELSIF
        BOOL /<:
        {str_zkm$0,
         [str_cwi,
          {},
          "str_utz",
          str_bcd$0,
          str_qkx$0,
          str_awu,
          NAT,
          (str_wtr , str_pai)],
         { str_fyz, str_bph, str_lbu
           |
           not(!(str_unp, str_aca, str_irh).(str_tzq : str_urh$0)) }}
      THEN
        str_cdk'str_xka
        :=
        rec(str_oiw: FALSE)
          ({NAT,
            NATURAL,
            NAT1,
            str_ukh,
            str_rxu,
            str_kkz,
            str_ddl$0,
            struct
              (str_inp: str_wyv,
               str_rwy: NAT,
               str_mes:
               ({ str_wrq, str_dwz, str_fin, str_pfm, str_kfj, str_vle,
                  str_fsp, str_lwh, str_eec
                  |
                  str_cyp$0 : str_jmz }
                |->
                str_jgb),
               str_wfp: str_ysb$0,
               str_gvb: MININT,
               str_meh: STRING)}
             'str_wip)
      ELSIF
        not
          (not
             (#(str_dsd, str_jht, str_klw, str_xxc).
              (not(str_lkc <= str_vjr) <=> str_vns$0 /<<: str_evp$0) &
              str_pav$0 /= TRUE))
      THEN
        str_rec'str_ami
        :=
        struct
          (str_ucj:
           (TRUE
              ({ str_ion, str_rym, str_krc, str_ugf, str_zjo, str_gwx,
                 str_hqh, str_cdl, str_zqc, str_qyz
                 |
                 str_xwz$0 < str_jcc$0 }
                 (TRUE))),
           str_qnm: STRING,
           str_hva:
           struct
             (str_qtu: str_hpo$0,
              str_hhg: str_djy,
              str_hwt:
              { str_cbz, str_qqw, str_vfi, str_brk, str_nmn, str_mlr,
                str_ech, str_glo, str_sek, str_dil, str_rqa
                |
                str_qow$0 <= str_knh$0 }),
           str_njr: str_gnv,
           str_yoi: MAXINT,
           str_wod: str_fdh$0,
           str_qhb: (str_idc$0 , str_rhi$0))
      END ||
      str_olg, str_glu, str_gvg, str_npp, str_bgm, str_rpn, str_ecb, str_nnx,
      str_bck, str_qzc, str_zvc
      :=
      %
        (str_zim, str_wxl, str_cbi, str_hwc, str_vkq, str_rgi, str_zqj,
         str_lvn, str_fpj, str_qho).
      (not
         (#(str_zop, str_ixy, str_rlj, str_cpt, str_lbh, str_sdj).
          (str_mod <: str_mry))|
       bool
         (#
            (str_mln, str_fzy, str_pfl, str_qig, str_ccj, str_ydr, str_kqk,
             str_ftc, str_jnm, str_gcq).
          (#(str_iwx).(not([] /<: str_kuh$0)))))
    WHEN
      str_eic <<:
      [TRUE,
       PI
         (str_oto, str_eju, str_cap, str_rpf, str_gum, str_ejh, str_lyc,
          str_ibx, str_emr, str_nnm).
       ([] <= str_qnv$0 <=> BOOL /: str_quu$0| str_dsx$0),
       SIGMA(str_jnb, str_xwr, str_ndu, str_ooc, str_rem, str_tdz, str_hnn).
       (str_fjn$0 >= str_zbc$0| {STRING, TRUE, str_itw, {}}),
       (INTEGER .. str_pgr)]
    THEN
      str_axp
      <--
      str_ljj
        ({ str_izx, str_vgq, str_jgn
           |
           not
             (not
                ([str_zls$0, str_ewq$0, str_eyc, "str_bdu", str_bwh$0,
                  NATURAL, str_jbh$0] =
                 bool(not(str_uae >= str_mnz$0)))) },
         INTER(str_xyp, str_hvd, str_bqw).
         (str_dfz$0 <<: str_jbv$0|
          PI(str_tfu, str_anb, str_hhy, str_pmu, str_jgz, str_pcg, str_gau).
          (not(str_onw$0 > str_rwn$0)|
           struct
             (str_qza: TRUE,
              str_tvg: str_zxw,
              str_anb:
              UNION(str_wng, str_oal, str_fvs).
              (BOOL /<<: str_rxh$0| str_mrt$0),
              str_knt:
              rec
                (str_wpo: str_kpo,
                 str_djj: MAXINT,
                 str_maq: str_yfz$0,
                 str_eqp: [],
                 str_ijs: MAXINT),
              str_ukn: INT)
             'str_iho)))
    WHEN
      #(str_kvo).(str_tsb$0 /= str_ffv$0) =>
      !
        (str_spo, str_jtg, str_xsc, str_okg, str_mec, str_vec, str_amh,
         str_pnx, str_uin, str_koe).
      (#
         (str_hvx, str_jvp, str_gpw, str_yry, str_pbh, str_cfu, str_hzr,
          str_inf, str_enq, str_ivt, str_djg).
       (INTEGER > str_pre$0) &
       str_izb , str_ktl /: INTEGER)
    THEN
      skip
    WHEN
      !(str_bor, str_iih, str_vhj, str_kpj).
      (#(str_wwo, str_ajm, str_nvg, str_wzl).
       (not
          ([str_uaz,
            str_gzm,
            str_yjs,
            rec
              (str_rzf: str_cvb$0,
               str_wyc: str_ean,
               str_vru: MININT,
               str_rvz: MININT,
               str_dpu: STRING,
               str_lzg: str_hol,
               str_slc: INT,
               str_qfr: str_gdo),
            STRING,
            str_rsv$0,
            str_zdv,
            str_ccj] /<:
           [str_yoh$0, str_vyi$0, str_eea, {}, str_ueq, FALSE, str_xnp])))
    THEN
      str_fnq, str_gef, str_hzm, str_jwo, str_oet :(
        not
          (#
             (str_the, str_lpu, str_rgn, str_okd, str_pzk, str_xup, str_kkd,
              str_kch).
           ((!(str_ikm, str_wzc, str_iqi, str_xns, str_jto).
             (#(str_iet, str_zmi).
              (#
                 (str_cmh, str_xew, str_fgf, str_hno, str_ycn, str_pkb,
                  str_kae, str_wpc, str_xrg).
               (TRUE >= []))) &
             FALSE /= INTEGER) =>
            str_voj /<: str_wug$0))
      )
    WHEN
      not
        (not
           (!(str_ews, str_gmq).
            (#(str_xmb, str_nbq, str_tce, str_zql, str_moy, str_kfy, str_qhx).
             (!(str_hjs, str_ijq, str_nmx, str_uln, str_tjj, str_pkt).
              (str_wyp$0 / INTEGER /= str_iud$0)))))
    THEN
      str_pse, str_nvd, str_aus, str_mzb, str_xrc, str_awn, str_mkx, str_ift,
      str_wmp, str_dfm
      ::
      { str_mjn, str_dhr, str_uvm, str_qhm, str_fyp, str_mvd, str_syv
        |
        not
          (str_ogx =
           rec
             (str_dqm: str_lga$0,
              str_chh: str_oxh$0,
              str_zch: str_rqr,
              str_ntw: str_xgq$0,
              str_myv: SIGMA(str_hie). (str_eak$0 >= NATURAL| str_vtz$0),
              str_jjl: str_kqi$0,
              str_crx: str_wwr$0)) }
      ,
      bool(str_mrk /<<: str_mwl$0)
    END
  INVARIANT
    NATURAL /: str_dqd$0 <=>
    #(str_ati, str_xsk, str_xof, str_ncf).
    (not
       (#(str_fjs, str_cmy).
        (not
           ({str_dtc$0, str_mgz$0, str_mzp$0, str_apa$0, str_spw, [],
             NATURAL1, str_nkz} /<<:
            str_cqu$0))))
  VARIANT
    bool
      (not
         (!(str_krn, str_yzt, str_bgf, str_txu, str_lwg, str_rbt, str_wqy).
          (not(INTEGER > str_jyx) => str_ops : MAXINT)) or
       not(str_psq > str_hsa$0))
  END;

  str_snv (str_dph, str_crn, str_zcm, str_zjn, str_usl, str_jzu, str_lve) =
  ANY
    str_zkp, str_xoe
  WHERE
    rec
      (str_urf: str_ser$0,
       str_ter: str_uzq,
       str_lqk:
       (str_ntn$0
          (PI
             (str_cqb, str_flc, str_pmd, str_xjz, str_nvt, str_nab, str_lab,
              str_iso).
           (str_aij /<: MININT| str_hnb$0))),
       str_vsm: INTEGER,
       str_jaf: str_tfz$0,
       str_blz: NATURAL,
       str_zpq: INTEGER) :
    bool(MININT /<: str_aet$0) |-> { str_hcx, str_ojk | str_uth >= NAT1 }
  THEN
    SELECT
      not
        (#
           (str_egb, str_ijy, str_ckj, str_lqh, str_wxk, str_dll, str_lku,
            str_rmw, str_wxx, str_qnk, str_mlz).
         (!(str_eeh, str_gql, str_dnb, str_dce, str_opa, str_okj, str_aqc).
          (str_tmw'str_awf , {} /= -str_sin)))
    THEN
      CASE
        bool
          (#(str_cgp, str_ina, str_hpl, str_ufr, str_dqo, str_hjq, str_yjx).
           (!(str_lkg, str_psj, str_axc, str_ezo, str_hfc, str_bec, str_eey).
            (str_yvo < NATURAL1 <=> not(not(str_bip /<<: STRING)))))
          'str_fbb
        OF
        EITHER
          [bool(not(MININT = str_owb$0)),
           str_jtz,
           {},
           { str_zaf, str_dhv, str_vit, str_okp, str_gxe, str_kzi, str_lya
             |
             NAT1 >= str_jnu$0 },
           [NAT1,
            NAT1,
            str_gml,
            { str_agy, str_dsw, str_gic, str_zfd, str_byq, str_jra, str_yxl,
              str_cva, str_zuk, str_ktd, str_tqw
              |
              str_rlx$0 < STRING },
            INT,
            str_tdj,
            str_lrq$0,
            str_dhe],
           (BOOL >-> MININT)]
        THEN
          str_ugi'str_lsg
          :=
          { str_hxx, str_bli, str_sgg, str_bpg
            |
            !
              (str_lno, str_bvo, str_gxm, str_sin, str_kdi, str_wmp, str_gxf,
               str_hod, str_qou, str_hcb).
            (#(str_bvt, str_rxx, str_wgp, str_piv, str_usu, str_rha, str_plz).
             (str_qmc$0 |-> TRUE >=
              bool(str_pfr /<: 9 <=> NATURAL1 /<<: str_wmx))) }
        OR
          struct
            (str_wep:
             { str_udn, str_cqd, str_zuy, str_drf, str_djl, str_yxl, str_nts,
               str_ivn, str_snd, str_foj, str_klm
               |
               NATURAL /= str_xra$0 }
               'str_szz
               'str_fac,
             str_rud:
             struct
               (str_drw: str_iuj,
                str_csu: (str_luh +->> INTEGER),
                str_wuy: NATURAL),
             str_fxp: str_dws$0,
             str_gpo: NAT1) <+
          str_jjr$0
        THEN
          str_vwz, str_wle, str_azk, str_bmx, str_yjl, str_cvr
          ::
          %(str_ppg).
          (str_iha >= str_hxh <=> (str_arb : STRING => BOOL > str_rjo)|
           (str_chf +->> str_kko$0) |-> NAT1)
          |->
          UNION
            (str_iqm, str_uht, str_suo, str_lqh, str_xns, str_yuv, str_giz,
             str_yqs, str_pia).
          (str_hyx /= str_khp| {})
        OR
          min
            (UNION(str_dey, str_omp, str_hhh, str_xhe, str_hca, str_yoy).
             (MAXINT /<<: str_gro$0 or str_naw <: NAT|
              bool(not(str_tnd /= str_pqo$0))'str_lqc))
        THEN
          str_vbq
          ::
          rec
            (str_dnr: NATURAL1,
             str_siw: (({} |-> INTEGER) |-> str_nso$0)'str_bgb,
             str_rts:
             ((str_wsj$0 ^
               struct(str_wid: str_zve, str_skt: INT, str_lbo: str_rlj$0)) ..
              str_ekn$0))
        OR
          [bool(str_mdl > MAXINT)'str_gvx,
           str_hyy$0,
           str_edc$0,
           str_luz$0,
           UNION(str_tgm, str_gwd, str_ybl, str_qbe).
           (str_qrk$0 /: str_ieb$0| str_usd),
           str_usp$0,
           INTER
             (str_nqq, str_dtj, str_xox, str_mme, str_gya, str_zlr, str_vjv,
              str_gdf).
           (str_rww : TRUE| seq1(str_ksk))
             'str_djc]
        THEN
          str_zds 
            (
              (bool(str_nxi$0 <= TRUE)
                 ({NATURAL,
                   str_amc,
                   str_ccu,
                   str_ugc$0,
                   str_esc,
                   {str_kac$0,
                    INT,
                    { str_cke, str_vel | INT <= str_neg$0 },
                    str_gmu$0,
                    str_fpd},
                   {},
                   str_zpu}))
              |->
              (tree(str_mkp))
            )
            (
              SIGMA(str_jfo, str_twy).
              ([NAT1, str_aim$0, INTEGER, str_pom$0, "str_tzw"] <
               { str_xre, str_ecf, str_shs, str_bsq
                 |
                 not(not(str_mvm /<: str_uzo$0)) }|
               rec
                 (str_bqu: str_jnk,
                  str_xrr: str_ipn,
                  str_zfn: str_cqb,
                  str_few: str_nhp,
                  str_zca: str_jek$0,
                  str_mdz: BOOL,
                  str_fvx: str_zqy,
                  str_ydo: MININT))
            )
            (
              rec
                (str_mho: STRING,
                 str_dac: ((str_oqm(str_oqv))(str_azg$0))'str_zpd,
                 str_gkc: str_nlp,
                 str_rws:
                 { str_quq
                   |
                   !(str_vmf, str_fii, str_ftg, str_hdh).
                   (not(str_uda >= str_sku)) })
            )
            (
              { str_tcm, str_ylm, str_waq, str_xua, str_fll, str_rtq,
                str_vwv, str_cgd, str_hmg
                |
                SIGMA
                  (str_lvr, str_tpi, str_ade, str_jtj, str_evk, str_pgh,
                   str_xvr, str_fqu, str_auw).
                (TRUE = str_wok & INT >= str_una$0| STRING >+> MININT) =
                {str_hmb, TRUE, str_zew$0, STRING}~ }
            )
            (
              struct
                (str_jtd: str_qkl$0,
                 str_buo: str_gqs$0,
                 str_wuu: str_gnk,
                 str_ali: str_yqa,
                 str_fzx: str_xgf$0,
                 str_zov: bool(str_ani$0 < str_zrm),
                 str_qex: PI(str_kvh, str_syw). (str_mny : str_sxw| MAXINT)) ^
              rec
                (str_wws: str_yvf$0,
                 str_qgz: str_vbs,
                 str_mtv:
                 [str_nut$0, str_tae, MAXINT, str_ppr$0, str_aak, NATURAL],
                 str_nto: str_anb,
                 str_ota:
                 SIGMA
                   (str_hrc, str_bho, str_ddm, str_neq, str_edq, str_zpv,
                    str_oef, str_hsh, str_abf, str_fxz, str_pxl).
                 (MAXINT /<: []| str_chj$0),
                 str_noh: str_ava,
                 str_kdi: NAT1)
            )
            (
              {(str_smn$0(str_smn$0)),
               {(last(str_aky(MAXINT |-> str_tqm$0)))},
               {str_hqk}}
            )
            (
              struct
                (str_fiu: str_mxl,
                 str_qvd: str_zjp,
                 str_fig: [[], str_ugj],
                 str_qva:
                 {{[str_lud$0, str_krh, str_mot, str_sqh],
                   str_mgz,
                   (infix({7})),
                   str_css$0},
                  str_hpw},
                 str_jhe: str_apb$0,
                 str_oaj: MININT)
            )
            (
              top
                (str_qvh$0 \|/
                 {str_uoj$0,
                  { str_upy | NATURAL <: NAT },
                  INT,
                  (MININT , TRUE),
                  (str_wjw$0(str_yon)),
                  rec
                    (str_nlk: str_lgm$0,
                     str_msk: "str_mfa",
                     str_fud: str_xmt,
                     str_nln: INTEGER,
                     str_rms: str_vnd,
                     str_jmf: str_qlf,
                     str_epn: STRING,
                     str_yqg: str_qfb),
                  NAT1})
            )
            (
              [UNION
                 (str_ovr, str_mqw, str_rhg, str_fud, str_avm, str_vwr,
                  str_frn, str_fen, str_bqm).
               (not(str_ofe < str_fas)| MAXINT),
               %(str_ifk, str_yrw, str_jtg, str_sbd).
               (str_hby$0 = []| str_kjp$0),
               [rec
                  (str_hbs: NAT1,
                   str_abo: FALSE,
                   str_miu: str_pmh$0,
                   str_asg: NATURAL,
                   str_tvh: str_yzu$0,
                   str_pwi: str_syd$0,
                   str_prq: str_dcb),
                bool(INT <: str_hjx$0),
                str_qon$0,
                str_soe$0,
                "str_tbz",
                0],
               str_mut,
               str_fex$0,
               str_nyd,
               str_scr]
            )
            (
              [(iseq1
                  (rec
                     (str_lth: str_ezv,
                      str_csc:
                      { str_wxg, str_sci, str_zfw, str_ibj, str_fpg, str_zgw,
                        str_aei
                        |
                        !(str_kfg, str_tcb, str_noz, str_xru, str_ecx).
                        (str_sgc$0 <<: str_reb$0'str_zzo) },
                      str_jmg: NAT1,
                      str_wzs: NATURAL1,
                      str_vyp: str_qxs$0)))]
            )
          
          :=
          bool
            (!(str_fce, str_hgj, str_xhl, str_aaz, str_cml, str_jxi).
             (!
                (str_eaq, str_jme, str_mcl, str_qbu, str_qgw, str_iwj,
                 str_tpi, str_bcl, str_rbc, str_drq, str_nzl).
              (str_gsd$0 /<<: str_dqr)) &
             (NATURAL1 >= str_crr$0 =>
              !(str_veq, str_ved, str_yux, str_cgb).
              (!
                 (str_gzw, str_gkc, str_dbi, str_val, str_fgk, str_zts,
                  str_oby, str_kqw, str_dyc).
               (str_jeo /= TRUE))))
        OR
          str_yuf$0 |>>
          {((str_pbn$0(BOOL)) >< bool(str_hru$0 : str_lkl)'str_jky),
           (first({}))}
        THEN
          skip
        OR
          SIGMA(str_jfe, str_wlz, str_dtl, str_flh).
          (str_enx$0 <<: str_qvf$0| str_xsf |-> str_uyi)
          ,
          [((TRUE --> str_qkj$0) +->> str_dhu$0),
           str_two,
           str_jdo,
           ((str_fmi$0 ; NATURAL1)),
           MININT,
           str_sxx$0,
           str_bvc]
        THEN
          str_ojs 
            (
              bool
                (!(str_tiy, str_zru, str_qpk, str_slo, str_adh).
                 (not
                    (!(str_zmx, str_fmx).
                     (#(str_tak, str_erb, str_wgo, str_uxb, str_zxe).
                      (not(NAT1 /: STRING & str_pto$0 >= str_ysa))))))
            )
            (
              infix
                (str_epi$0'str_qom
                 |->
                 [str_rxp,
                  [],
                  (str_rql$0 |-> "str_ebw"),
                  str_hoc$0,
                  [str_sgt$0,
                   str_ped,
                   {},
                   struct
                     (str_gyq: str_ibp$0,
                      str_haa: TRUE,
                      str_ktc: str_gws,
                      str_aod: NATURAL),
                   str_xit,
                   str_agl$0],
                  NAT1,
                  str_iim])
            )
            (
              (str_nzm$0'str_gaq -->> [str_vap$0])
              ,
              {rec
                 (str_jdh: str_zny,
                  str_fbs: str_ebv$0,
                  str_mhh: str_rsu$0,
                  str_txj: str_dhs),
               rec
                 (str_kcn: BOOL,
                  str_rsl: NAT1,
                  str_qeh: str_wra$0,
                  str_nvr: NATURAL1,
                  str_vzi: MININT,
                  str_vzk: NATURAL)}
            )
            (
              { str_buw
                |
                not(str_pwv >= str_gnq$0) or
                !(str_pzw).
                (!(str_qgi, str_qxm, str_hrc, str_rpo, str_zcq).
                 (#(str_sxa, str_hyz).(not(NATURAL /: str_atm)))) }
            )
            (
              {([INT, MAXINT, str_vnh$0, str_ohb]
                  (bool(MININT /: TRUE)
                   |->
                   (struct
                      (str_ddm: str_dnt,
                       str_hjp: str_bue,
                       str_nel: str_otg,
                       str_rbs: TRUE,
                       str_bqz: str_uzm$0)
                    |->
                    [])))}
            )
            (
              struct
                (str_dwl: str_jaj,
                 str_jkj:
                 struct
                   (str_own:
                    rec
                      (str_dss: (bool(str_oad <: str_agj) <| TRUE),
                       str_xen: str_lfm,
                       str_ahw: 356,
                       str_nxx: str_euj,
                       str_znk: (str_ogt(str_laf$0)),
                       str_clo: str_fpn,
                       str_hma: INTEGER),
                    str_ivs: str_qlm,
                    str_sda: str_yza,
                    str_ffj: str_wxz$0,
                    str_pfp: str_aoz,
                    str_vqj:
                    { str_czz, str_rsj, str_qbr, str_ezb, str_ikd, str_kgv
                      |
                      NAT1 <= str_bit },
                    str_dua: str_nfu))
            )
            (
              str_ivl$0 |>
              {(BOOL , INT),
               (bool
                  (not
                     (!(str_ejn, str_iap, str_ytq, str_eoe, str_dbz, str_kgb).
                      (str_ker < NAT1)))
                |->
                NAT1)}
            )
            (
              [INT,
               str_fim,
               (FALSE(NATURAL1'str_yaw'str_vfd)),
               str_gld$0,
               bool
                 (#(str_lyg, str_wjh, str_sep, str_gpo, str_tvr, str_que).
                  (not(str_dbo$0 = str_qwe$0)))]
            )
            (
              { str_fwj, str_wsi, str_hxv
                |
                !
                  (str_pru, str_lcz, str_kdk, str_kwu, str_mvy, str_bvw,
                   str_adc).
                (!(str_brj, str_cmf, str_xnb, str_npn, str_puo, str_fey).
                 ({FALSE, BOOL}'str_ekb > str_ixx$0)) }
              |->
              str_ikn$0
            )
            (
              bool
                (!(str_ceg, str_jkq, str_zki, str_kfk, str_cok, str_otk).
                 (!
                    (str_pcj, str_czd, str_jkg, str_bvs, str_dgg, str_nny,
                     str_ayj, str_ycg).
                  (bool(NATURAL1 /: str_pqd$0) <:
                   struct
                     (str_vuc: NATURAL,
                      str_toi: str_nxv$0,
                      str_zxd: bool(MININT >= str_glk),
                      str_diq: str_naw))))
            )
            (
              {{{str_rks$0, str_lyd$0}'str_lvd}'str_vsj,
               SIGMA(str_fjc, str_erf, str_ubz).
               (NAT1 /: str_ylk$0 => str_kgu$0 > str_vye$0| TRUE)}
            )
          
          :=
          { str_tze, str_kqp, str_rqj
            |
            not(not(str_fyh$0 < INT) => INTEGER /<<: INT) or
            !(str_emg, str_fpk, str_vnc).
            (!(str_vmh, str_cod, str_tjj).(str_ugc$0 > str_plx$0)) }
        OR
          bool(str_yfb <<: MAXINT or not("str_bpr" <: str_nmd$0))
          |->
          {str_zjg$0, NAT1, str_mqd, NAT}
        THEN
          str_nxh, str_hja, str_zds, str_qbg, str_rgj, str_phx, str_xhe,
          str_dwx, str_zrj
          ::
          { str_yvm, str_hod, str_fqa, str_vps, str_hut, str_nor, str_dsb,
            str_zze, str_guh, str_rmi
            |
            {(rec
                (str_fax: str_myc,
                 str_oaj: str_lwm,
                 str_vmw: INT,
                 str_uww: str_mfk,
                 str_cxu: INT)
              ,
              str_lhg),
             SIGMA(str_vbj, str_frc, str_chi, str_akv, str_wsv).
             (INTEGER <= NAT| str_sot)} /<<:
            bool(str_kjr : str_xei) }
        ELSE
          str_wvh, str_xgs, str_pxz, str_mgk, str_zcu, str_uuy, str_kcj,
          str_qbq :(
            not
              (!(str_lbs, str_esr, str_wkv, str_one, str_mtd, str_bzi).
               (#
                  (str_fnp, str_odf, str_aqx, str_tgp, str_gvx, str_ftn,
                   str_fkl, str_nwf, str_scw, str_iya).
                (str_wzt <= str_cfd) or
                #(str_hxg, str_rwa, str_dgg, str_ukf).
                (!(str_omd, str_xdw, str_zkl).(str_zye$0 <<: str_ake$0))) or
               str_hes > NAT)
          )
        END
      END
    WHEN
      not
        (!(str_zys, str_inn, str_kac, str_nga, str_wgj).
         (#
            (str_hut, str_syq, str_hbg, str_zol, str_ylb, str_vqm, str_otq,
             str_mxh, str_zrd).
          (#
             (str_wzq, str_bgs, str_wsn, str_gyo, str_rii, str_myo, str_yqh,
              str_yps, str_wka, str_fba).
           (str_ioc$0 > str_heo <=>
            !(str_zxe, str_yis, str_mdd, str_bpq, str_cbb, str_ncn, str_fcp).
            (MININT <= str_orq)))))
    THEN
      str_ejz'str_gmt
      :=
      { str_iac, str_knx, str_drq, str_apk, str_qwf
        |
        struct
          (str_ahl: str_ram$0,
           str_lnq: str_vzt$0,
           str_eyh: str_bsw,
           str_wyg: str_cuz$0,
           str_xae: str_ikl$0,
           str_zre:
           rec
             (str_xxx: str_phb,
              str_obk: str_zeo$0,
              str_tpj: str_dmx$0,
              str_lbk:
              { str_lkv, str_rou, str_fsi, str_gph
                |
                !(str_qgw, str_atd, str_bdk).(not([] : str_ezw)) }),
           str_okq: {}) >=
        FALSE }
    WHEN
      #(str_lfe, str_xpy, str_ejd, str_xao).
      (SIGMA
         (str_eae, str_xaa, str_kop, str_oke, str_rir, str_xln, str_ane,
          str_uxp).
       (#
          (str_lfh, str_quj, str_dzo, str_gge, str_tvt, str_qzk, str_xjc,
           str_cuy).
        (str_owm <: str_spc)|
        NATURAL) /<:
       { str_ivp | str_nyf$0 = str_jro$0 } ^
       struct
         (str_lnm: {},
          str_tmk: [],
          str_xoz: NATURAL1,
          str_drs: str_nhh,
          str_evm: MININT,
          str_xbk: str_jdz$0))
    THEN
      str_com 
        (
          [{ str_dgz, str_ile, str_nam, str_qbm, str_jva, str_lgd, str_zba,
             str_sis, str_tdn
             |
             STRING /<: NAT },
           str_wbq$0,
           NAT,
           (rec(str_iuj: NATURAL1, str_fmk: NATURAL)
              (rec
                 (str_hss: str_uoy$0,
                  str_vca: ({ str_txn | str_ixf$0 >= str_zkl } , str_meb$0),
                  str_cty: str_rqh,
                  str_urj: TRUE,
                  str_rxw: str_ayk$0,
                  str_jko: str_ydu$0))),
           {}]
        )
      
      :=
      tail
        ({struct(str_met: (str_bbg'str_sfv , str_ddo)),
          str_jvc,
          {(str_vxq$0 |-> str_oez$0),
           str_qbs,
           NAT1,
           str_mpk$0,
           str_iep$0,
           str_iht$0,
           str_pia$0,
           str_vjs$0},
          str_dra})
    WHEN
      (72 = str_zdc$0 & NAT1 /: BOOL) =>
      (str_enw$0 > str_ecd =>
       (str_drp <= INT or
        !(str_tnn, str_ewk, str_ogk, str_kxh).
        (str_box > [NATURAL1, str_jxk$0, INTEGER, str_dwa, str_nwf$0])))
    THEN
      str_oww, str_ovx, str_gas, str_bri, str_jtq
      <--
      str_geh
        ({ str_pmo, str_xli, str_vnp, str_vqp, str_okf, str_lco, str_zim
           |
           #(str_yhl, str_bth, str_ric).
           (!(str_hem).
            (not
               (!(str_itv).
                (#(str_kfy, str_hox, str_vda, str_vbe, str_jad).
                 ({} >= str_few => MININT <: str_yui))))) },
         bool
           (not
              (!(str_ggd, str_rvh).
               (!
                  (str_kqj, str_nlx, str_esa, str_tgb, str_rdc, str_jlp,
                   str_fgo, str_hvo, str_xjx, str_zzl, str_wtf).
                (str_waz <<: str_ncd$0 => INTEGER <= str_lmo$0) &
                str_fgt <<: str_dph$0) <=>
               MAXINT /= str_qmg)),
         struct
           (str_fif: rec(str_uns: {}, str_ccd: (str_srk$0 , BOOL)),
            str_awm:
            PI(str_dkz, str_sng, str_tfb, str_wgs).
            (!
               (str_sga, str_use, str_hwq, str_ggc, str_zmc, str_mdk,
                str_jjr, str_zfv, str_trc, str_jbl, str_waq).
             (str_nmv$0 < str_rrl$0)|
             rec
               (str_oqi: str_cjs$0,
                str_dor: str_onz,
                str_ine: {str_agq, str_xlm$0, str_rzv},
                str_ldc: []))),
         rec
           (str_wba: str_zit$0,
            str_dkn: str_tql$0,
            str_zah: INT,
            str_zsz: str_aco,
            str_hlq: str_rvn$0,
            str_vvi:
            UNION
              (str_rja, str_dko, str_rbw, str_hon, str_san, str_qbw, str_lze,
               str_okq, str_ecb, str_xyh).
            (str_zqf /<<:
             struct
               (str_fmz: bool(!(str_leb, str_lrh).(999 /= NATURAL1)),
                str_voc: str_wkr)|
             right(MAXINT))),
         bool
           (#(str_atb, str_zrf).(NAT <= str_txc) or
            last((str_aio$0(str_ddl$0)) <-> str_pnl$0) >= str_ajr$0),
         [bool
            (not
               (!
                  (str_gzb, str_nky, str_dex, str_uie, str_xgp, str_vmr,
                   str_nyx, str_vkz).
                (str_ddi /: str_lil)) <=>
             not(str_aci$0 <: str_zxx$0 <=> INTEGER <= BOOL)),
          str_tsm$0,
          str_xtx$0,
          FALSE,
          str_wgn$0])
    WHEN
      !(str_jnv, str_xaf, str_lwr, str_lki, str_jrh).
      (bool
         (not
            (not
               (str_eni <= str_nqg =>
                !
                  (str_jhk, str_fge, str_shm, str_zwm, str_vbh, str_tkw,
                   str_rlb).
                (str_glv$0 /: str_hub)))) <
       str_dfb)
    THEN
      str_mmj, str_icb, str_kzy :(
        !(str_via, str_etr, str_pki, str_ucb, str_ayu).
        (not
           (#(str_chx).
            (not
               (not
                  (#
                     (str_qzc, str_jsm, str_rus, str_eeu, str_shg, str_mwd,
                      str_moe).
                   (str_dss = str_bld$0 => str_zgc = str_pwo$0))))))
      )
    WHEN
      not
        (NATURAL1 /= str_dvm =>
         PI
           (str_jlh, str_cvz, str_hqy, str_szn, str_mom, str_pog, str_drz,
            str_xwg, str_xrq).
         (INTEGER /<: str_nuk|
          { str_tkd, str_frj, str_ukg, str_pqe, str_hus, str_rpz, str_xrx,
            str_gtg, str_usk, str_hlk, str_udu
            |
            str_yes$0 /<<: str_qfh$0 }) >
         str_ytn)
    THEN
      VAR
        str_qir, str_vuh
      IN
        VAR
          str_yix, str_frw
        IN
          WHILE
            not
              (not
                 (#
                    (str_qcu, str_rib, str_omn, str_pji, str_zub, str_rgj,
                     str_eyq, str_ver, str_pof, str_mdq, str_mne).
                  (!(str_osn, str_jce, str_xqg, str_hlc, str_cxa, str_vdn).
                   (NAT >= str_otu >-> str_efr$0'str_iru))))
          DO
            VAR
              str_rlx, str_gdd, str_jgg, str_qde, str_htp, str_qsx, str_lit,
              str_xyu, str_esa, str_xtn, str_nth
            IN
              str_doq 
                (
                  (rel
                     (PI
                        (str_hem, str_rzh, str_rzy, str_lgf, str_ebk,
                         str_xtm, str_lzj, str_tma, str_xqt, str_pan, str_aol).
                      ("str_tin" /<<: str_vkf$0 => str_mkh /= str_tdu|
                       { str_jkl, str_jzy, str_jxy, str_eod, str_dvd,
                         str_qze, str_qfw, str_ufg
                         |
                         not(str_jua <<: str_aod) })))
                    (BOOL <<| str_dhv)
                )
                (
                  [str_xbg,
                   INTER(str_xbe, str_wak).
                   ((str_ruw$0 , NAT)'str_zbl > NAT1| FALSE),
                   str_yvc$0]
                    (BOOL(INTEGER))
                )
                (
                  rec
                    (str_rtg:
                     rec
                       (str_xtn: NATURAL,
                        str_kpv: str_zmt,
                        str_czg: str_vkf$0,
                        str_fjs: str_iea$0,
                        str_crw: str_zuq$0,
                        str_kdy: str_irj),
                     str_lfg: bool(TRUE > INT))
                    'str_gml
                  |->
                  PI(str_msr). (#(str_tol).(str_vvw > 3)| str_smx)
                )
                (
                  (struct
                     (str_sav: str_yts,
                      str_ecs:
                      PI(str_mqk, str_qnt, str_bus, str_odo).
                      (str_ahm /<: STRING| str_zex)) /|\
                   str_cdu$0) +
                  (rev([](bool(STRING <= str_sxk))))
                )
                (
                  PI
                    (str_aew, str_vhs, str_whl, str_mvn, str_ojy, str_kar,
                     str_ckl, str_ogy).
                  (BOOL >= TRUE|
                   (FIN1(str_ivm$0)) +->>
                   {str_gwe$0,
                    str_nlq$0,
                    (((INT(str_dsg$0)) || struct(str_kpy: str_dej))),
                    []})
                )
              
              :=
              (iseq
                 ({str_zax,
                   MININT,
                   INTER(str_ppi, str_ywn, str_imx, str_ejw, str_kho).
                   (str_gsk /: str_ana & str_rnr$0 <= str_nrh| MININT),
                   str_evk,
                   str_eps,
                   str_dty$0,
                   str_sbf,
                   (INT(str_aop$0))}))
                'str_zpg
              ,
              str_mnp
            END
          INVARIANT
            bool(str_oip$0 >= str_otl$0) /: postfix(NAT1 |-> str_tln) &
            !
              (str_nnd, str_psv, str_nsp, str_xfy, str_jyk, str_vnx, str_jys,
               str_ipq, str_fea, str_fsn).
            (#
               (str_jup, str_knc, str_bws, str_zkr, str_ttq, str_qep,
                str_dlh, str_lvz, str_fuq).
             (str_gvl$0 /<<: str_dqh$0))
          VARIANT
            INTER(str_uzb, str_uqr, str_iqs, str_yke).
            (!(str_cbg).
             (!
                (str_hyh, str_dnr, str_qjd, str_kvh, str_ceb, str_kwq,
                 str_wsr, str_nof, str_ssw, str_zuq, str_oob).
              (not(not(str_bih <= str_lmc$0))))|
             UNION
               (str_tqj, str_yby, str_dsw, str_pus, str_iwi, str_egs,
                str_oob, str_sar).
             (TRUE >= str_qcb$0| str_cdv$0))
          END
        END
      END
    WHEN
      bool
        (not
           (SIGMA
              (str_jnp, str_iaa, str_ofb, str_teu, str_vqu, str_qzu, str_dbs).
            (str_nhm$0 > str_eok$0| str_ski$0) >
            str_hqt$0)) <=
      prefix(str_zxc , {})
    THEN
      skip
    WHEN
      !(str_qci, str_uli, str_ywz).
      (#(str_tyb, str_gcg, str_pgu, str_nvc, str_nkr, str_rwb).
       (!
          (str_ytr, str_whc, str_lba, str_ffz, str_cly, str_dtu, str_sll,
           str_xeq, str_phu, str_svq).
        (not({} = MININT <=> MAXINT > str_twd$0)) <=>
        (str_bkl$0 /: INTEGER => str_yrt < str_lqb$0)))
    THEN
      str_ooy, str_hkq, str_rql, str_exu, str_kfm, str_pov
      ::
      struct
        (str_bql:
         rec
           (str_fdw:
            rec(str_hnj: str_oud$0, str_pge: str_qhz$0, str_pkd: str_zjx),
            str_clq: ((str_vus$0 ; ({}(str_wik$0))))),
         str_arq:
         { str_yhk, str_klt, str_mdi, str_uzi, str_jdz, str_bcv, str_jmw
           |
           #(str_jdv).(str_mrl$0 <<: str_oka) })
    END
  END;

  str_col, str_fju <-- str_ptb =
  VAR
    str_jjq, str_fzj, str_gyi, str_tqz, str_cgg, str_jcl, str_ooj, str_ece,
    str_tmb, str_way, str_pjt
  IN
    CHOICE
      str_rit, str_lkx, str_aow, str_rst, str_qfy, str_aoz, str_vil, str_pox,
      str_wkb
      <--
      str_ntv
        (struct
           (str_zsd:
            rec
              (str_feg: str_aag,
               str_you:
               {str_kvs$0,
                FALSE,
                ((-{ str_lms, str_tjn, str_rrr | str_utq$0 /<<: str_ife })
                   ([]))}),
            str_jou:
            INTER(str_egk, str_huk, str_lrl, str_ovc, str_qob, str_vbf).
            (str_adc /: STRING| STRING),
            str_pzp: str_ecl,
            str_rnt: NAT),
         (arity
            ([(perm(BOOL , (last(STRING(str_zrv$0))))),
              [str_ecb$0, NAT1, [], {}],
              str_wgy$0])),
         { str_vjc
           |
           not
             (not
                (NAT1
                   (rec
                      (str_zye: str_xlj$0, str_flz: str_eqf, str_vkr: str_wvx)) >=
                 [str_mwb, str_yfr$0, str_wnk])) },
         PI
           (str_sck, str_hgg, str_jtx, str_tra, str_lsx, str_yfb, str_mlv,
            str_fjt, str_dkx, str_pwf, str_jub).
         (not
            (not
               (not(str_cxu = str_fbg) <=>
                (str_znp$0 = FALSE or MININT = str_tkd)))|
          str_qcl$0),
         bool
           (!(str_yok, str_tww, str_rjx, str_qyk, str_rto, str_dfw, str_lnh).
            (not
               (!
                  (str_ypz, str_cdj, str_dwm, str_rzz, str_trm, str_owp,
                   str_zjc, str_phz, str_kkc).
                (BOOL /<: str_mus))) or
            !(str_mfs, str_hbk, str_sxa, str_gqg, str_eyh, str_ogs, str_wpg).
            (str_pvw$0 /: MAXINT)),
         {TRUE,
          str_zwj$0,
          MAXINT,
          { str_xla, str_etq, str_zvb, str_pre, str_ixt, str_dec, str_oub,
            str_xrc, str_wux
            |
            str_cac$0 /<:
            [str_fjx$0,
             struct
               (str_eso: str_qas$0,
                str_qdz: str_svq,
                str_eae: str_glf,
                str_sug: str_qdk,
                str_lqh: BOOL),
             str_svd$0,
             str_bwe$0,
             str_pbd$0,
             TRUE] &
            MAXINT >= str_zta$0 },
          {str_jio$0, STRING, NAT, str_uvc$0, STRING},
          str_lxg},
         ((bool(str_kkz$0 <: NATURAL1)(str_pfh$0))
            (const([bool([] <<: []), str_xvq$0, NATURAL, str_hnf$0'str_txf]))),
         (NAT1
            (SIGMA
               (str_cmf, str_jpi, str_osj, str_kpb, str_npr, str_cpn, str_jua).
             (not(str_oxw > str_ldm$0 or str_ftp$0 <= str_dui)|
              [str_ewr$0, str_dxg$0, {str_oxz, str_bji$0, str_xdh, str_asd$0}]))),
         ((bool(str_mrn /: str_lbz$0)
             ((str_mzm$0 , str_xai$0) \/
              { str_njp, str_mbg, str_tuy, str_icv, str_zfp, str_djq,
                str_akp, str_wer, str_hdn, str_gkr, str_vzt
                |
                str_eou$0 : [] }))
            (FALSE)))
    OR
      CHOICE
        SELECT
          not
            (str_shu$0(BOOL) /<<:
             {{str_jvd$0, (str_ali -->> (right(str_lxf))), {}, {}}})
        THEN
          skip
        WHEN
          #(str_dfr, str_wyt, str_bza, str_ilt, str_uwk, str_blv, str_aiy).
          (#(str_fcq, str_vrk, str_ybs).
           ({ str_afb, str_rpp, str_jcr, str_pjo, str_ktj, str_lqm, str_qyo,
              str_pzb, str_cfd, str_dlv
              |
              str_yor /<<: str_ufm }
              'str_rqn <<:
            str_ruy$0) =>
           #
             (str_atr, str_wdi, str_glk, str_dii, str_qlp, str_lan, str_wqr,
              str_gjk).
           (str_aze$0 /<: str_ihj))
        THEN
          str_lna, str_xec, str_usn, str_rmo, str_tdk, str_fay, str_xst,
          str_lmp, str_tqo, str_vvo
          <--
          str_vga
            ((str_esa'str_rfd
                (prj1
                   (bool
                      (NAT /<<:
                       { str_cdl, str_ocj, str_rjr, str_pdt, str_pss,
                         str_mqx, str_ura
                         |
                         NATURAL : str_vno }
                         (NATURAL1))))),
             { str_clc, str_rif, str_vyx, str_iwi, str_egd
               |
               !(str_twc, str_rco, str_jie, str_odo, str_ezv, str_nav).
               (struct
                  (str_wiy: bool("str_ook" /= str_tii),
                   str_znq: str_lpk,
                   str_fev: str_ywj) <
                str_ssz$0) }
               'str_gfn
               'str_qli)
        WHEN
          not
            (%
               (str_swa, str_kjb, str_iqv, str_yjk, str_hnn, str_pmy,
                str_tro, str_hzi, str_moh, str_cfr, str_rdf).
             (FALSE /<<: str_qyy| str_dnu(str_qrr)) /=
             { str_zha, str_oxb, str_xgi, str_unx, str_ugm, str_qag, str_uws,
               str_jbq, str_dtc, str_eps
               |
               !
                 (str_kvk, str_znm, str_mac, str_nzq, str_ibq, str_qri,
                  str_zza, str_wvf, str_ooy, str_zma, str_xjw).
               (str_yzk > NATURAL <=> str_dbt$0 <: FALSE) })
        THEN
          str_avq, str_jfo, str_xvz, str_bea, str_drr, str_jef
          <--
          str_hwv
            (struct
               (str_gqj:
                {bool(TRUE <<: str_qnq$0),
                 { str_pbw, str_djf, str_wzy, str_ugv, str_fdz, str_mct
                   |
                   #
                     (str_tdf, str_jmw, str_itq, str_pxz, str_gno, str_khq,
                      str_lrm, str_nns).
                   (str_iuz$0 < NAT <=> str_hvc$0 <<: BOOL) },
                 str_hgo,
                 (MININT(MAXINT))}),
             {str_xpz$0'str_kiu,
              ((subtree
                  (rec(str_yco: INTEGER, str_vcl: str_rwy, str_ubt: str_bjq)))
                 (str_ipv)),
              rec
                (str_dyo: str_pea$0,
                 str_xmw: str_kkw$0,
                 str_ult: str_hjd,
                 str_qiy: str_eua,
                 str_rfd: {},
                 str_uxw: str_iav$0,
                 str_sug:
                 rec
                   (str_yky: INT,
                    str_fcq: str_gfj,
                    str_uon: str_dco,
                    str_hta: MININT,
                    str_ece: str_llg,
                    str_alx: str_byg),
                 str_gwk: {})},
             (fnc
                ([str_sfx$0,
                  str_dps,
                  INTEGER,
                  rec
                    (str_bfz: (left(str_bnp'str_srg)),
                     str_tzj: str_axm,
                     str_gzp: NATURAL,
                     str_iyo: str_mep$0,
                     str_nwq: str_irv,
                     str_zdk: str_giu$0),
                  MAXINT,
                  {str_bbw$0, str_zdh$0, str_nrl$0, str_dsr$0, str_qtw,
                   str_dmk}]))
               'str_isd,
             (father
                ([{str_uhl$0, bool(str_fzz <: str_cjd), str_bai},
                  (NATURAL1(str_dex)),
                  (MAXINT(str_ubd$0)),
                  str_yfy$0,
                  str_wyi])),
             {(str_eks$0 |-> STRING),
              struct
                (str_qzg: str_bnh$0,
                 str_fmg: str_kjk$0,
                 str_vff: bool(str_bgu > str_qlo),
                 str_zch:
                 (seq1({str_ipd$0, NATURAL, str_dnu, INT, str_ajw, NATURAL}))),
              { str_nuc, str_ljr, str_tyr, str_xrq, str_rdb, str_hvs,
                str_ioc, str_dhz, str_hup
                |
                str_irb <<: str_ozx }},
             (bool
                ({NATURAL,
                  638,
                  str_wvj$0,
                  str_uxx'str_nnp,
                  [],
                  str_yad$0,
                  BOOL,
                  str_whj$0} >=
                 struct
                   (str_fsa: INT,
                    str_lil: str_cnd,
                    str_fmc: [str_nbe$0, str_wnl$0, str_xxr, FALSE],
                    str_lab: str_xvy$0,
                    str_ixw: str_gvl$0,
                    str_kbo: str_rje))
              ,
              str_msc$0),
             {[(str_vdv$0 |-> str_aio$0), ({NATURAL'str_eep, FALSE} |>> [])]}
               'str_iec)
        WHEN
          str_kuh <:
          PI(str_ajz, str_zqr, str_ery, str_dtd, str_iya, str_xbp, str_ign).
          ({ str_nru | str_mta$0 <<: str_gbn$0 } > str_ews$0|
           [%(str_cxo, str_bmu, str_xxj, str_weg).
            (str_tyt > str_buo| str_xss'str_xzc)])
        THEN
          str_bvy'str_duu
          :=
          {PI(str_arl, str_ams). (str_efu /<: INTEGER| seq1(FALSE)),
           INT'str_arz,
           (str_jta ^ NATURAL1),
           str_spk,
           [str_reo$0,
            INTEGER,
            str_dbp$0,
            str_tcs$0,
            {str_ftk, str_gmu$0, str_myt, str_pwl, INT, [], INT, str_tvd},
            str_wqx,
            str_lnm,
            FALSE]}
        WHEN
          !(str_ukw, str_fir, str_vym).
          (str_nzu /=
           INTER
             (str_cew, str_imu, str_spp, str_mho, str_vai, str_wpf, str_jlg,
              str_aii, str_jvm, str_qng, str_omj).
           (BOOL /<: MAXINT => str_lvv >= MININT|
            { str_pbm, str_hwj, str_icf, str_hwr, str_brw, str_bur, str_hjp
              |
              { str_kmp, str_tzq, str_uqc, str_zpv, str_ejj, str_qrr,
                str_fnd, str_cha
                |
                str_sob$0 /= STRING } :
              str_kqd$0 }))
        THEN
          LET
            str_jnq, str_wpj, str_hqf, str_anl, str_eys, str_cog, str_iek,
            str_wbp
          BE
            str_nmt
            =
            perm
              (([] |-> MININT) <+
               INTER(str_vlv, str_wku, str_ryg).
               (MAXINT <: STRING| (MAXINT , {str_sfm$0})'str_yrl))&
            str_nxm
            =
            [(str_lfg$0 * str_ixf),
             bool
               (!(str_exk).
                (!(str_nej, str_xrw, str_bkf, str_bpb).
                 ({str_msj$0} <<: str_gbv)))]&
            str_pbz
            =
            rec
              (str_zua: str_iyd,
               str_psn:
               (dom
                  (rec
                     (str_rwq:
                      INTER(str_pze, str_bmm, str_hyr).
                      (str_gfy$0 > FALSE| str_xyk))
                     (str_zcc))),
               str_ulv: NATURAL1,
               str_qck: NATURAL1,
               str_zlc:
               { str_pkc, str_bjk, str_sdu, str_jab, str_bxz, str_itu,
                 str_mpu, str_bfc, str_kiw
                 |
                 str_heg$0 = str_xoi }) >->
            str_mpu$0
          IN
            VAR
              str_mkj, str_gaf, str_dbg, str_fir, str_ygs, str_jen, str_kqy,
              str_ria
            IN
              str_szb, str_xdw
              ::
              bool
                (!
                   (str_rxl, str_nzf, str_med, str_ion, str_dam, str_idv,
                    str_xiu, str_nef, str_ynj, str_yzz).
                 (!(str_bkh, str_mvx).
                  (not
                     (struct
                        (str_qix: str_pno$0,
                         str_qdr: str_lbc$0,
                         str_yrq: str_vfq,
                         str_rad: str_ghh,
                         str_owt: rec(str_ern: str_vjw$0, str_spq: NATURAL)) /<:
                      str_lzu))))
            END
          END
        END
      OR
        CHOICE
          str_pgs
          :=
          (rec
             (str_pap: NAT1,
              str_hzb: [],
              str_pcw: str_ijf,
              str_eit: str_ffm$0,
              str_uys: str_ywf)
           |->
           (rec
              (str_tfx: str_gwe$0,
               str_tbj: INTEGER,
               str_rtm: str_oyc,
               str_qqb:
               UNION
                 (str_tar, str_msf, str_pax, str_opv, str_cws, str_ibo,
                  str_edw, str_gwq).
               (str_vht <: str_tef| str_kit$0))
              ({NAT, FALSE, str_lcb, str_clc, MININT, str_xgx})))
            'str_loj
        OR
          str_dyg'str_vpf
          :=
          prj1
            (struct
               (str_xwh: str_pux,
                str_llp: NATURAL1,
                str_fba:
                (bool
                   (#(str_cno, str_erw, str_exe, str_ptd, str_arr, str_gzm).
                    (str_jqw : str_tno))
                 ,
                 (str_kil$0 , TRUE)),
                str_obw: str_kmv$0,
                str_fod: str_gor,
                str_als: str_sdk$0))
        OR
          skip
        OR
          str_rhx, str_zmw, str_dar, str_xmz, str_oiv, str_giz, str_ygx,
          str_ctg
          :=
          {str_foj$0, NAT, str_vqt$0, str_pub$0}
            (%(str_anh, str_evf, str_yro).
             (#
                (str_mpk, str_klb, str_gcb, str_nxv, str_ifo, str_jnx,
                 str_obu, str_uim, str_udv, str_rub).
              (#(str_bwh).(not(str_wyl <= str_vbs$0 <=> str_erj < str_pze)))|
              str_vme$0))
        OR
          str_msx, str_rxf, str_pib, str_bgp, str_kkc, str_dgu, str_whs,
          str_jla, str_zjo, str_wup, str_xbc
          ::
          {bool
             ((not(str_utu /: str_ato) <=> str_jca$0 <<: str_dgz$0) =>
              #(str_osi, str_uou, str_adk, str_uky, str_wmu).
              (str_cla$0 /<<: NAT1)),
           NAT1}
            'str_vaf
        END
      END
    OR
      skip
    OR
      str_fwx, str_rxv, str_dug, str_ips, str_ssp, str_zvy, str_vzo, str_plh,
      str_ear, str_lvr, str_ajh
      :=
      struct
        (str_khf: MININT,
         str_abu: str_hko$0,
         str_txc: (father(FALSE))'str_xdr,
         str_wpy:
         (%
            (str_qji, str_uob, str_fza, str_atb, str_vfp, str_wum, str_bmv,
             str_jbz, str_nou).
          (INTEGER <= str_sub| str_zxj'str_phd)
            (FALSE ** str_oqh)),
         str_ojr: str_rzr,
         str_ozr: 22,
         str_pup: TRUE)
    OR
      str_ogm, str_dpo, str_qsd, str_xij, str_xgx, str_vfi, str_jsv, str_faw
      ::
      rec
        (str_mmm:
         rec
           (str_yqe: NAT1,
            str_kov: str_qmb$0,
            str_wsk: str_dah$0,
            str_hvv: str_weg$0,
            str_xou: str_gni,
            str_akc: INT,
            str_nlw: INTEGER,
            str_wpk: str_jzf),
         str_vno: str_xth,
         str_cln: FALSE,
         str_rui:
         SIGMA
           (str_glr, str_wtt, str_xfg, str_pha, str_vkp, str_jtc, str_cyt,
            str_gxi, str_rbk).
         (str_dif$0 < str_agv| NATURAL),
         str_qmj: (((front(str_mnp$0)) ; (STRING <| str_uft))))
      ,
      str_myf
    OR
      str_dcr, str_xji, str_loq :(
        !(str_jzp, str_evp, str_meu, str_gxb).
        (not
           (not
              (!
                 (str_bog, str_smr, str_ikd, str_kmt, str_zwh, str_mqy,
                  str_clp).
               (rel(str_dqx) /=
                rec
                  (str_ins: str_onm$0,
                   str_pcg: str_vkh,
                   str_utp: str_qec$0,
                   str_xwo: str_aig$0,
                   str_tlu: INT,
                   str_slm: {})))))
      )
    OR
      str_hef 
        (
          [{ str_qxc, str_yoz, str_kmm, str_bst
             |
             #(str_hgd, str_npu).
             (not
                (!
                   (str_xtl, str_xtd, str_mbg, str_jsd, str_paj, str_maa,
                    str_kes).
                 (#
                    (str_mek, str_lgk, str_fzq, str_lzy, str_qqn, str_wiw,
                     str_klp, str_tle, str_sok, str_tdf, str_ite).
                  (str_omz$0 <: NATURAL1) &
                  BOOL >= "str_nwx"))) }]
        )
        (
          struct
            (str_cjo:
             ((INT({ str_gjr, str_gvf | str_zqr <= str_xnt$0 }))(str_rgy$0)),
             str_vpa:
             bool
               (#(str_zpr, str_ixw, str_ecc).
                (str_xlm <<: str_kld$0 or str_kqg = 6)))
        )
        (
          { str_hxw, str_ygv, str_cxk, str_ahq, str_hgg, str_jyv, str_afe,
            str_xmv, str_tox
            |
            not
              (#
                 (str_nmf, str_mfj, str_cht, str_xic, str_rfo, str_olj,
                  str_jlc).
               (#(str_kkr, str_ixp, str_opw).
                (!
                   (str_emq, str_pki, str_pkw, str_qlw, str_feh, str_ubs,
                    str_iox).
                 (!
                    (str_eme, str_bbs, str_zbx, str_cbp, str_zca, str_onj,
                     str_gbt, str_vbx, str_kjj, str_mwq, str_qem).
                  (NATURAL1 <: MAXINT)))) &
               str_dcx /= str_kpw) }
        )
        (
          (%(str_uau, str_qxs, str_baz, str_zab, str_oui, str_mrj, str_zhe).
           (!(str_xxc, str_duo, str_hqy, str_geu).({} : NATURAL1)| {})
             ({[FALSE], str_olv, str_ahy$0, str_yes$0, str_hhw}))
            'str_fxs
        )
        (
          %(str_ijq, str_nqc, str_jvh).
          (!(str_tbi, str_afl, str_zvc).
           (#(str_gvh).
            (str_iqy$0 <=
             struct
               (str_itd: str_jod,
                str_miu: str_ihv,
                str_iat: {},
                str_gam: str_vhc$0,
                str_cfu: TRUE,
                str_oqz: MININT,
                str_aox: str_ypd$0))) or
           str_poy <: str_mfg$0|
           {str_hbn, TRUE, str_scj, str_pqy, str_udr$0})
        )
      
      :=
      struct
        (str_ais:
         { str_owr, str_kpb, str_oxc, str_pop, str_ymr, str_gmt
           |
           #(str_voo, str_btb).(str_qlq = str_nrf$0) <=> {} >= NATURAL },
         str_vav: bool(BOOL = MAXINT <=> str_ifz$0 > str_owc),
         str_dvo: (str_fmq$0 / TRUE))
    OR
      str_cbo :(
        !
          (str_twl, str_jdc, str_xnu, str_mgu, str_adm, str_sqf, str_joe,
           str_zij, str_wyq).
        ((NATURAL1 = str_dzr =>
          (str_lpb >= str_qpe$0 <=> str_dem$0 <: str_vfq)) or
         #
           (str_oqb, str_jfh, str_nnj, str_kes, str_vie, str_zip, str_twa,
            str_gpy, str_zlv, str_jxh).
         (!
            (str_eex, str_khc, str_bjt, str_dwt, str_aht, str_bxm, str_xgw,
             str_nji, str_zdh, str_ylv).
          (#
             (str_den, str_gdn, str_qzk, str_itj, str_xtm, str_dcn, str_vor,
              str_gkp).
           (INTEGER = str_oug))))
      )
    END
  END

INITIALISATION
  PRE
    !(str_ydt, str_gca, str_khf).
    (#(str_bvw, str_ojy, str_pty, str_vey).
     (!
        (str_hcq, str_biw, str_eyy, str_nne, str_nhx, str_hhy, str_jns,
         str_ctp, str_rac, str_fej, str_rce).
      (!(str_qpg, str_uzj, str_wch, str_own).
       (!(str_fzt, str_mmd, str_zeb, str_nbl, str_map, str_rxq, str_scj).
        (not(str_jmm$0 = str_ckh$0))))))
  THEN
    PRE
      #(str_rpx, str_yot, str_dol, str_txv).
      (!(str_oge, str_skw, str_eqr, str_jxs, str_acy, str_yqv).
       ({ str_lhw, str_yia, str_ori, str_lwl, str_iqm, str_gyg, str_bny,
          str_bip
          |
          MININT > str_cgr$0 & NATURAL /= BOOL }
        |->
        str_ewc /:
        INT |-> NATURAL1))
    THEN
      VAR
        str_byx, str_qyy, str_pkd, str_kqy, str_hat, str_ciq
      IN
        WHILE
          [] : str_sea <=>
          (!
             (str_qgq, str_vgk, str_vfy, str_ipl, str_sba, str_xpw, str_wkx,
              str_ayc).
           (!(str_tvl, str_wjf, str_vcu, str_fmg, str_vmu, str_orw, str_iav).
            (str_fks$0 --> [NATURAL, str_hew] >= str_zdn$0)) &
           str_hzf$0 <<: str_gyl$0)
        DO
          LET
            str_lsp
          BE
            str_mel
            =
            bool
              (not(#(str_nqy, str_qlu, str_xjr).(not(INT /= str_mks))) &
               BOOL =
               { str_nkh, str_lzn, str_vwv, str_aes, str_ilq
                 |
                 str_rpe <: str_flh$0 })&
            str_ars
            =
            closure1
              (PI(str_hwh, str_dsy, str_tlf, str_kbe, str_lxs, str_izb).
               (NAT <: bool(FALSE >= str_yrf$0)([])|
                struct
                  (str_edt: str_tuh$0,
                   str_tyr: STRING,
                   str_cwg: [],
                   str_olj: INTEGER,
                   str_qoh: str_del,
                   str_whu: (str_irt - TRUE),
                   str_lxm: MININT,
                   str_dhs: FALSE)))
          IN
            skip ;
            SELECT
              !
                (str_txw, str_sho, str_ufc, str_gfs, str_kfw, str_hcv,
                 str_mhk, str_epe, str_abv, str_gho).
              (!(str_bdb, str_yar).
               (NAT1 /= bool(not(NAT1 <: str_vvr)) , str_cuw))
            THEN
              str_ovq, str_sip, str_jyk, str_rcw
              :=
              (rec(str_bkc: [], str_mvb: INTEGER, str_uab: str_wcj$0)
               |->
               [str_cyi,
                [str_ecm$0, {}, str_qhm],
                { str_ibb, str_xno | str_toq /: str_cnd$0 }'str_cnt])
              |->
              str_bvg
            WHEN
              rec
                (str_udd:
                 (NAT1 /\
                  rec
                    (str_vvi: INTEGER,
                     str_vzo: str_vrc,
                     str_ttd: str_hxf$0,
                     str_dii: str_nme$0,
                     str_hqe: NATURAL1,
                     str_zjf: str_tch$0,
                     str_nmt: str_lej,
                     str_ysw: str_orn$0)),
                 str_jvp:
                 struct
                   (str_ygi: NATURAL,
                    str_aui: INT,
                    str_gak: str_oep$0,
                    str_ggt: str_bqo,
                    str_bsl: str_ntg,
                    str_qjv: str_pit$0,
                    str_xvt: INTEGER,
                    str_uwf: str_pzi$0)
                   'str_idg,
                 str_ovi: str_iwr$0,
                 str_fpk: INT,
                 str_egn: (FALSE |-> {})) >
              str_hzn$0
            THEN
              str_gke 
                (
                  rec
                    (str_qwl: str_ywa,
                     str_fsn:
                     [str_zut$0, str_lfx, str_mok$0, STRING, str_qby$0],
                     str_kor: str_ecr$0,
                     str_alv:
                     (%(str_uja, str_pjw).
                      (str_epb$0 /<<: str_xyb|
                       INTER(str_zfr, str_dhu, str_nqz, str_veb).
                       ({} <= {} => [] <<: str_tch$0| str_pkn$0))
                        (str_nhs$0)),
                     str_roo:
                     {INT, "str_imx", str_lmu$0, FALSE, str_bmq$0, str_hpa$0},
                     str_grt: MININT)
                )
                (
                  (struct
                     (str_cgz: {str_ltr, BOOL, str_sdb, str_pkg, str_wyo$0},
                      str_nxg: INTEGER,
                      str_mff: str_mph$0,
                      str_hvh: str_dgs,
                      str_rdm: MAXINT,
                      str_xwh: str_pjl$0,
                      str_wkt: str_eac)
                   |->
                   FALSE)
                    [str_jnh$0 >->> (NATURAL1 |-> (bin(str_olx)))]
                )
                (
                  str_wpx
                  ,
                  ((size(str_sbd$0))
                     (struct
                        (str_tcd:
                         {BOOL, str_lga$0, str_aas, (str_zui$0(STRING))},
                         str_knk: str_vyr,
                         str_ocl: str_dam,
                         str_lsb: str_ycm,
                         str_kls: str_jnf$0,
                         str_ffp:
                         {str_rwr, str_qhp$0, str_oav, str_hkm, MININT, NAT1,
                          str_san$0, str_dnr$0},
                         str_ajp: str_wqp$0)))
                )
                (
                  {rec
                     (str_rjo: str_jvo,
                      str_bco: str_mpx$0,
                      str_fff: bool(str_tss <<: str_doy$0)),
                   (max
                      (%
                         (str_qdf, str_bll, str_uor, str_afn, str_tls,
                          str_lif, str_hxl, str_whi, str_tmk).
                       (NAT = str_pxi$0 <=> NATURAL = str_jqv| str_mci$0)
                         'str_hng)),
                   str_kcz,
                   str_xks}
                )
                (
                  struct
                    (str_ssn: [],
                     str_xjj:
                     (front((struct(str_olm: NAT1)([INTEGER])) , NATURAL)),
                     str_hse:
                     {str_yol, str_pjn, str_xxz, FALSE, str_odd$0, 9,
                      str_pdp$0})
                )
                (
                  str_weg
                    ({ str_dve, str_ipq, str_thf, str_mco, str_klx, str_vic
                       |
                       #
                         (str_pei, str_pkk, str_uwx, str_udb, str_ieb,
                          str_hpb, str_chu).
                       (#
                          (str_mst, str_vpv, str_mwr, str_kjw, str_oil,
                           str_noi, str_bwh, str_qlr).
                        (#
                           (str_cri, str_cxc, str_acs, str_nqb, str_juk,
                            str_pyk, str_ipt, str_apg).
                         (!
                            (str_aka, str_jui, str_usi, str_zho, str_ikx,
                             str_aaj, str_jtv, str_tms, str_uvk, str_hpy,
                             str_noj).
                          (str_bpn /<<: str_xkq)))) } ->
                     str_cyi$0)
                )
              
              :=
              (((NATURAL1 --> str_cpr$0)((seq1(str_dzf)) , NAT1))(str_wxu))
              |->
              bool(str_vwp$0 /<: TRUE)
            WHEN
              not
                (#(str_bwt, str_snh, str_ltd, str_isz, str_ohy, str_dev).
                 (NAT1 <: NAT1 <=>
                  #(str_rxy, str_gvx).({} >= MAXINT or INTEGER /<<: TRUE))) &
              #(str_who, str_mah, str_pam, str_jea, str_gnh).
              (STRING = str_kek)
            THEN
              skip
            WHEN
              #(str_tex, str_hxv, str_vmc, str_uyk, str_lzx).
              (not
                 (!(str_yci, str_tiy).
                  (!(str_ndm, str_pcq).
                   (#(str_uzr, str_pah, str_ftt, str_icp, str_mmu, str_cmq).
                    (%(str_dum, str_cpo, str_zlk, str_lnv, str_qgg, str_eja).
                     (str_xaw$0 /= str_bhr| TRUE) /<<:
                     str_git)))))
            THEN
              str_hdi, str_egc, str_vfl
              <--
              str_ptu
                (SIGMA(str_sgy, str_ndh, str_mns, str_kbi, str_wze, str_vrr).
                 (INTEGER : INTEGER &
                  #
                    (str_qke, str_gdg, str_zsx, str_axz, str_rij, str_dbe,
                     str_ykq).
                  (not(str_osu /= INT))|
                  { str_qtd, str_huj, str_kdm, str_qhz, str_rof, str_lwr,
                    str_znr
                    |
                    str_mdd$0 /: str_mdu })
                   'str_ihm,
                 (struct
                    (str_vbd: str_blk$0,
                     str_wxd: str_kwo$0,
                     str_ves: str_zdl,
                     str_ami:
                     PI(str_mqk, str_mlc, str_ebn, str_vob).
                     (str_hvx$0 /<: str_eky| str_eyh$0),
                     str_vxg: (INT >+> BOOL)) \|/
                  [rec
                     (str_usa: {},
                      str_tbm:
                      %(str_mnu, str_qsd, str_zob).
                      (str_ouc /: str_efc$0| str_uvu),
                      str_sts: str_yzx$0,
                      str_wuy: str_ubj$0)]),
                 { str_pss, str_vat, str_dkp, str_ntl, str_omg, str_ufl,
                   str_ehc
                   |
                   not
                     (not
                        ({ str_tdh, str_pam, str_ytt, str_omb, str_fob,
                           str_xet
                           |
                           str_itp /: str_pql$0 }
                         |->
                         str_jgn /=
                         FALSE'str_mgv)) },
                 (father
                    ({ str_jvx, str_apz, str_umn, str_pwf, str_zps, str_tub,
                       str_cwe, str_vfj
                       |
                       !(str_fdf, str_psc, str_mci, str_upk).
                       (#(str_ndx).(not(str_pvd /: {}))) &
                       str_gvc /<<: str_are })),
                 UNION(str_hqn, str_kri, str_mbz, str_ncd).
                 (!(str_hcc, str_xgl, str_ctz, str_yrn, str_peh, str_kbx).
                  (#
                     (str_zgq, str_lvl, str_goo, str_ldu, str_mtc, str_oko,
                      str_zia, str_jew).
                   (str_qxz$0 > NATURAL1))|
                  rec
                    (str_gze: str_wjs,
                     str_zfa: INT,
                     str_uel: bool(str_tdc$0 : NATURAL),
                     str_mlq: str_pib$0,
                     str_gjy: "str_fsz"'str_zfr)
                    ~),
                 [(SIGMA
                     (str_krf, str_zxb, str_skr, str_fmy, str_csv, str_qom,
                      str_iba).
                   (str_cpy$0 /= str_hzn$0|
                    PI
                      (str_sda, str_qpa, str_vyt, str_fql, str_zip, str_dnh,
                       str_vpc, str_kpu).
                    (STRING > str_rzc$0| NAT))
                   |->
                   ((str_fgy$0 , MAXINT) ** "str_dgs")),
                  NAT,
                  str_dcj$0,
                  NAT1,
                  NATURAL1]
                   'str_tyt,
                 (rec
                    (str_buh: str_gee,
                     str_pzo: str_wch$0,
                     str_ttx:
                     [(({} <-> str_fxu$0) \/ str_pse),
                      str_xap$0,
                      MAXINT,
                      str_nsy,
                      str_wyc],
                     str_uja: str_jro$0,
                     str_zzl: str_jvh,
                     str_jyw: str_qkl,
                     str_pxo: NAT1) -->
                  PI(str_muh, str_ton, str_nag, str_gaw).
                  ([] : str_pee or str_oow < {}| str_ejt)),
                 ({rec
                     (str_reb: rec(str_lzs: BOOL, str_lst: str_onp$0),
                      str_lnt: str_kep$0),
                   str_jbw$0}
                  |->
                  ((struct
                      (str_jxq: str_kra, str_nag: str_rlr$0, str_iky: TRUE)
                    |->
                    str_boa)
                   |->
                   INT)),
                 (bool(not(NATURAL1 /: str_qiq$0)) *
                  struct
                    (str_wvz: {INTEGER, str_qqo$0, str_hqc$0, str_ldp$0},
                     str_tbr: str_ylq,
                     str_hnj: str_qud,
                     str_vrb: str_zhj,
                     str_eox: BOOL,
                     str_zbt:
                     { str_igp, str_wvu, str_sya, str_euf, str_xaj, str_atl,
                       str_hqy
                       |
                       !
                         (str_kxx, str_lad, str_qxh, str_xnu, str_dhf,
                          str_xll, str_mqz, str_etj).
                       (str_luq$0 < NATURAL1) },
                     str_fdj: str_ktk,
                     str_tcx: TRUE)),
                 (PI(str_frk, str_ksq, str_qez, str_kfx, str_wmi, str_nny).
                  (NATURAL <: str_ldk$0| { str_ojw | str_oja /: str_jql })
                    (MAXINT
                       (struct(str_dfa: (str_peu , str_lcj), str_rpm: FALSE)))))
            END
          END
        INVARIANT
          !(str_lwr, str_aom, str_zrl).
          (not
             ([str_cag$0'str_ltu,
               str_zwk$0,
               str_zwn,
               [],
               str_ckg,
               str_iyz,
               TRUE] /:
              INT ><
              { str_wwi, str_vqn, str_hyq, str_wve, str_vjk
                |
                NATURAL /<<: str_lah }))
        VARIANT
          { str_fur, str_jav, str_wwe, str_dld, str_pbx, str_yon, str_kep,
            str_skj
            |
            !(str_sfg, str_kyr, str_azi, str_ymp, str_imr).
            (union
               (struct
                  (str_mbj:
                   {str_tqs$0, STRING, str_wle$0, str_jup$0, str_tbw, str_fuo},
                   str_xgt: {},
                   str_wib: NATURAL1,
                   str_dqv: str_sgs,
                   str_puw: str_jcl$0)) /<<:
             bool(str_lxa$0 >= str_atj$0)) }
        END
      END
    END
  END

ASSERTIONS
  !(str_dwz, str_uef, str_dgz, str_kfp).
  (str_glb$0 /<:
   (-MININT)
   |->
   rec
     (str_apb: str_wgf$0,
      str_gnw: str_pqe,
      str_oqv: str_hst$0,
      str_qts:
      struct
        (str_dei: str_noy,
         str_uiu: str_utv$0,
         str_rdo: TRUE,
         str_inn: (closure(INT)),
         str_kgp: MAXINT),
      str_yaa: STRING,
      str_xgj: str_lzi$0,
      str_yis: str_xdc,
      str_upo: str_jui$0));
  { str_wak, str_yys, str_bsi
    |
    #(str_zeu, str_lsd, str_tiv).(TRUE /: [str_bye$0, [], str_dzh]) } <<:
  PI(str_vfa, str_jth, str_fph). (NAT1 <: INT| str_rry$0)'str_jtg;
  !
    (str_gow, str_yzf, str_oof, str_pnn, str_qvb, str_nho, str_uka, str_pmy,
     str_dwv, str_nfk).
  (str_igr /<: NATURAL &
   !(str_run, str_zug, str_uvo, str_uef, str_ftp).
   ([str_frq] /: NAT => !(str_cdr, str_enr, str_dzk).(str_lkf$0 <<: {})));
  not
    (#(str_cgr, str_vic).
     (FALSE >->> str_glz$0 <
      subtree
        (POW1(rec(str_tqi: str_sis$0, str_wbb: str_nqn, str_ttc: str_uzy$0)))));
  str_rur$0 >= str_kri$0 or
  #
    (str_ruc, str_two, str_mpu, str_uwk, str_ylv, str_hcm, str_hgh, str_xhb,
     str_eus, str_mrd, str_lpf).
  (#(str_tgi, str_aeg, str_ewi, str_fhl, str_jbq, str_odj, str_qmc, str_ggo).
   (str_jqe = [[], str_tss$0, STRING]'str_gjr(str_ugw$0)));
  #(str_ubf, str_znv).
  (!(str_kal, str_lbn, str_sjs, str_vig, str_obp, str_ihv, str_yww).
   (!(str_arm, str_lcl, str_brn, str_szv, str_jiy).(str_egn$0 < str_otk)) &
   not
     (NATURAL1 /:
      [str_alb, str_awp, BOOL, str_zox$0, str_zrg$0, str_vms, BOOL]));
  !
    (str_xoz, str_jnn, str_wur, str_zvj, str_cml, str_ccy, str_dhn, str_dyo,
     str_dkx, str_gfq).
  (bool(INTEGER < str_ubq) <
   INTER
     (str_qvy, str_kpb, str_kdy, str_ksd, str_mqu, str_sft, str_dtm, str_yps,
      str_wvd).
   (#
      (str_dvy, str_dvx, str_ugf, str_ocj, str_twl, str_ujh, str_rai,
       str_thu, str_ghc, str_igq, str_ona).
    (not(str_axl < str_pdv))|
    "str_wui" <| str_pls$0))

CONCRETE_VARIABLES
  str_zap, str_rnd, str_mph, str_ace, str_snp, str_mrg, str_szs

VALUES
  str_tdi
  =
  rec
    (str_pbk: str_res$0,
     str_oyq:
     { str_ewn, str_otq, str_vzu, str_zua, str_wgs, str_lvy, str_nwd, str_qlu
       |
       not(str_mca$0 = str_ndz$0) },
     str_oci: str_rgd,
     str_rdj: (((str_iso || {}))'str_rbc(bool(str_wwc$0 : str_mqh))),
     str_qyk: str_cio$0,
     str_zkf: str_tnr);
  str_gbu
  =
  bool(TRUE = NATURAL1 => (str_oik < str_byb <=> str_sdv$0 < str_rbj$0))
    'str_xyx
    ({INT, str_awt$0, 9, (str_riq$0 , str_xfh$0)});
  str_yoa
  =
  bool(str_cgh <= str_kpe)'str_pwc
  ,
  rec
    (str_gko: NATURAL,
     str_xil: ([](([str_jtz] || str_llr$0))),
     str_ume: str_imy,
     str_fti: str_kzu);
  str_mim
  =
  { str_qyk, str_jxe, str_kdf, str_xme, str_vcq, str_hzw, str_bxv
    |
    not(str_tmn > str_jfg) <=>
    #(str_dzg, str_rmv, str_ewi, str_yck, str_vjz, str_grh, str_yii, str_lsb).
    (INT'str_wkw <<: rel(str_pkh$0)) }

PROPERTIES
  #(str_vyr, str_hdo, str_duj, str_lvy, str_bwz).(str_fdx$0 /<<: str_gtr) &
  #(str_qwd, str_uld, str_muu, str_ahz).
  (!
     (str_est, str_vbe, str_quz, str_kia, str_xhm, str_dwl, str_dfc, str_qic,
      str_twz, str_yyd).
   (!(str_vtk, str_dbh, str_art, str_aef, str_iaz, str_axs).
    (#(str_wuw, str_pvm, str_ebe).(not(str_gfa$0 /<: INT)))))

CONSTANTS
  str_cji, str_txm, str_cfo, str_ayn

SETS
   str_zid = { str_era, str_uvi } ;
  str_dvh;
  str_xsf;
  str_fus;
   str_bvf = { str_cve, str_mnh, str_ehd, str_vzr, str_dnu } ;
  
    str_pnz
    =
    { str_fcy, str_tmb, str_ymi, str_msd, str_qzv, str_zfk, str_pud }
  ;
  str_xci;
  str_yhl

EXTENDS
  str_jyf (
    {{ str_hgr, str_sfy
       |
       not
         (#(str_qsy, str_njx, str_iaa, str_ucn).
          (str_jbs$0 = str_rug or str_kxi$0 < str_mqm$0)) },
     str_ipe$0,
     (struct(str_koi: str_ljr$0, str_ytd: str_bpa$0, str_yqq: MININT)
      |->
      str_ldj)},
    ({{},
      str_apd$0,
      [str_sdb$0, (str_cnb , str_aeb$0), INT],
      [str_jbe$0,
       str_gyk$0,
       { str_zeg, str_vib, str_lcl, str_ynr, str_bog, str_vwg, str_wnt,
         str_zls, str_lax, str_ywm, str_rig
         |
         str_bol <= str_teb$0 },
       str_cjs$0,
       str_ith,
       str_yqc,
       str_ztq,
       bool(str_dlv < NATURAL)]}
       (2)),
    rec
      (str_xja: str_cwq$0,
       str_jzw: str_dox$0,
       str_oxj: str_lys$0,
       str_cdj:
       [{ str_ogz, str_jbw, str_nog | str_nvi /<: str_klr }'str_wqf'str_xux,
        str_uzf$0,
        NATURAL],
       str_vkf: STRING)
      'str_fyu
      'str_wou
  ),
  str_low (
    PI
      (str_bbg, str_vey, str_mjg, str_jnn, str_mhh, str_xck, str_jjm,
       str_ijg, str_lpx, str_dxj).
    ((!(str_lnq, str_djq, str_jgx).(str_dsm'str_cps < str_lml) &
      str_oai /<: str_lik$0) =>
     str_sil > str_phw|
     [str_bff$0, BOOL]),
    PI(str_vnp, str_ksc, str_vgv, str_xxo, str_ftr).
    (str_lpz$0 < MAXINT|
     INTER(str_rgz, str_rzd, str_wnx, str_ggc).
     (!
        (str_qzi, str_rpm, str_zfj, str_ctt, str_elt, str_tmm, str_rlc,
         str_tax).
      (str_vnx <: str_lpd$0)|
      struct
        (str_xzf:
         ({ str_kiz, str_yhn, str_kse, str_xsh | str_nds$0 >= str_tgr }
          |->
          str_pgp))))
  ),
  str_ruf (
    rec
      (str_bvm: str_xng$0,
       str_upa:
       [[[],
         { str_ztz, str_uov, str_ghr, str_xax
           |
           !(str_cwr, str_tnm, str_iuw, str_bcw).(str_zlk < str_ihh$0) },
         NATURAL,
         str_mac,
         str_jhw,
         str_vjz$0,
         str_ddy$0,
         (TRUE(str_uly$0))]],
       str_vbj:
       struct
         (str_lfd: NAT1,
          str_mcq: str_dzk$0,
          str_hkk: str_mlm$0,
          str_rwy: str_cqf,
          str_rfr: [],
          str_rge: str_ikc$0,
          str_sfh: str_oaf,
          str_kvd: MAXINT),
       str_mjb: str_rix,
       str_eas: NATURAL),
    bool
      (rank
         ({ str_rqe, str_mft, str_scx
            |
            #(str_cvw).(str_nae$0 /<: struct(str_bhs: 42)) }) /=
       MININT)
  ),
  str_gdn (
    ([{struct(str_njl: MININT, str_ixn: str_aen$0, str_oor: str_xfm$0),
       str_ifk$0,
       str_qki$0,
       str_pja,
       {NAT,
        str_sdr,
        str_hqz$0,
        NAT1,
        { str_cil, str_yvy, str_eky | NAT1 <: str_ogj$0 },
        MAXINT},
       str_jut},
      struct
        (str_fos: str_myz$0,
         str_nch: str_czj$0,
         str_xnn: str_zvp$0,
         str_waz: str_jrr$0,
         str_ola: str_fmv$0),
      str_acx$0,
      str_hnz$0]
       (str_bck$0)),
    %(str_yui, str_mpt).
    (!(str_upr, str_ses, str_fhe, str_pgh, str_ybx, str_dpx, str_aot).
     (str_tgu$0 = str_kiy$0)|
     (mirror
        (str_fhw$0
           (rec
              (str_fsw: str_uia,
               str_eva: MININT,
               str_job: str_qrg,
               str_ufs: INTEGER,
               str_bct: str_tai,
               str_nxf: MININT)))) -
     MAXINT)
  ),
  str_mda (
    { str_ntq, str_tar, str_les, str_odv
      |
      #(str_msi, str_lnw, str_dfj, str_vrk).
      (NAT1 /: rec(str_una: str_qbz, str_vgy: str_vaj$0)) &
      #
        (str_vkx, str_djo, str_mjl, str_iis, str_rgf, str_czg, str_wvu,
         str_npl, str_sbk, str_ggh, str_ycn).
      (str_tzp >= str_wvq) }
  ),
  str_oqz,
  str_ism (
    bool
      (#(str_hhi, str_ypb, str_eki, str_zqg, str_tzl).
       (!(str_jsb, str_yzf, str_gzx, str_kbz, str_ecz, str_laj, str_bdh).
        (!(str_xma, str_vpt, str_phr, str_sqt, str_hnl).
         (not(not(str_rfp$0 <: str_fxw)))))),
    (STRING
     ,
     (bool(str_qmf /: str_ith)
      ,
      struct
        (str_unb: str_eml,
         str_abc:
         { str_mjp, str_tzd, str_rgj, str_eip
           |
           #(str_zva).("str_lxy" <: str_dbl) }))
       'str_iem)
  ),
  str_efd (
    bool
      (not
         (not
            (!
               (str_isu, str_xkz, str_ajf, str_wzr, str_rlq, str_utm,
                str_eoz, str_nnm, str_zkt).
             (STRING < str_pzu =>
              ((str_hmd$0 /<: FALSE => str_udx < MININT) & NATURAL /<: TRUE)))))
  ),
  str_iiu (
    ((str_axb$0
        (bool(!(str_xrz, str_gqq, str_vog, str_pii).(not(str_ehi > NATURAL)))))
       (bool(NAT /: str_gyo)))
      'str_drq,
    PI(str_vzq, str_sfa, str_gga).
    (#(str_wea, str_gvl).
     (#(str_vhf, str_nur).(str_uzv$0 /<: bool(NAT1 >= str_jak$0)))|
     {str_deo, [NAT1, str_pis]}),
    bool
      (bool(str_grf >= NATURAL) <<:
       { str_nhb, str_bag, str_gcg, str_owv, str_lqt, str_kba, str_oau,
         str_uht
         |
         not
           (!
              (str_eyu, str_whx, str_txq, str_adl, str_axy, str_sgz, str_xbk,
               str_wgl, str_yhe, str_mmf).
            (str_bly$0 >= MININT => INT > NATURAL1)) })
  )

PROMOTES
  str_aaj

IMPORTS
  str_pix (
    (subtree
       ([(rank(str_mwg$0)),
         { str_gkm, str_vvm, str_tjf, str_ooe, str_ecz
           |
           !(str_upf, str_vhc, str_jym, str_lfi, str_eoj, str_srq).
           (str_ami /: str_lgr$0) <=>
           !(str_xtb, str_yxi, str_izo, str_fzp).(str_gyv /: MININT) },
         str_tcm])),
    ({str_znn$0,
      {str_efb,
       str_xrz$0,
       str_clx,
       bool(str_zfy$0 = str_ggq),
       str_tmc$0,
       str_vmp$0,
       TRUE}} \/
     { str_kfj, str_xyt, str_eer, str_obc, str_qig, str_fnd, str_ljz,
       str_rgh, str_yrs
       |
       !(str_ydc, str_vlq).(not(INT : MININT)) }),
    (((subtree(str_nsz'str_vpg))'str_oxg \/ str_scx)
     ,
     rec(str_wkj: (tail(str_hpo))))
  ),
  str_kbg,
  str_bkb

END 