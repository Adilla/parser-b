REFINEMENT
  str_nmc( str_rre, str_ihk )

REFINES
  str_emi

OPERATIONS
  str_dje
    (str_mdd, str_usg, str_rzg, str_gun, str_nqr, str_gyc, str_jem, str_eld,
     str_hob)
  =
  LET
    str_alb
  BE
    str_lmn
    =
    { str_iag
      |
      ["str_knr", str_bou, STRING, str_rdb$0, str_zhp$0, STRING, str_xgi$0] :
      PI
        (str_sct, str_tgj, str_pfy, str_xwq, str_udc, str_gmy, str_byg,
         str_kod).
      (!
         (str_qcx, str_nxo, str_mnv, str_waz, str_itm, str_utp, str_ysj,
          str_hbv).
       ([] /: NAT)|
       INTER
         (str_zrz, str_fki, str_kxl, str_vkn, str_mzn, str_sen, str_hqy,
          str_dpa, str_hvw, str_iiu, str_opj).
       (str_ela$0 /<<: str_svc$0| str_ojy$0)) }
      'str_ckt&
    str_yah
    =
    bool
      (#
         (str_zih, str_vwg, str_pxd, str_yff, str_inp, str_ugm, str_tko,
          str_nyu).
       (str_cuq <= NAT or
        #
          (str_xme, str_myk, str_afl, str_ybj, str_iuu, str_apc, str_kcm,
           str_xhc, str_kuc, str_yds, str_aix).
        (#(str_fit, str_wpk, str_kbg, str_hsg, str_wus, str_uld, str_quk).
         (not(#(str_fzx, str_gge, str_peg, str_euj).(BOOL = str_yub))))))
  IN
    ANY
      str_ymo, str_vio
    WHERE
      !(str_jfc, str_qnr, str_rtd, str_lrn).
      (#(str_mfa, str_qjh, str_qlw, str_uap, str_nko).
       (!
          (str_ein, str_dks, str_wtl, str_oll, str_bwl, str_wbr, str_qog,
           str_vkf, str_hrg, str_uxw).
        (#
           (str_ssz, str_fbf, str_nve, str_ydp, str_fdc, str_ybp, str_hyd,
            str_hum, str_bjh).
         (str_kxa$0 > MAXINT &
          #(str_ivd, str_byd, str_zqr, str_wsh, str_qmm, str_qvc, str_ntf).
          (#
             (str_bhd, str_yoa, str_qfk, str_wqw, str_zue, str_tsm, str_wun,
              str_odf, str_etp, str_tcc).
           (INTEGER /<: BOOL))))))
    THEN
      SELECT
        !(str_kfc, str_gqj, str_wka, str_pqq, str_hwp).
        (%(str_ecb). (NAT1 : str_dry| str_nnl) \/ (str_yhj(str_sid$0)) >=
         NAT |-> [str_uab$0, NATURAL1, NAT1, NAT1])
      THEN
        str_ili 
          (
            struct
              (str_dbm:
               struct
                 (str_umy: str_zmy,
                  str_mte: [NATURAL, 7, str_wuk$0, str_hpj, (str_hvw$0([]))],
                  str_ggo: NAT'str_yyc,
                  str_ken: {},
                  str_vny: str_mhb,
                  str_bpb: BOOL,
                  str_xjy: (str_ngd , str_drm$0)),
               str_vtl: (str_nfx(MAXINT)))
          )
          (
            (prj1
               (rec
                  (str_rhx: TRUE,
                   str_yai: STRING,
                   str_aul: str_hmm$0,
                   str_rdn:
                   struct
                     (str_dsx: [],
                      str_etb: (str_flv |-> str_feh),
                      str_kgh: NAT1,
                      str_ovv: str_jzz,
                      str_bum: NATURAL1,
                      str_ocy: str_zqw,
                      str_gay: MININT)))) \/
            [str_opa$0,
             str_xac$0,
             rec
               (str_kiw: NATURAL,
                str_dvr: MININT,
                str_jud: INTEGER,
                str_fbt: str_lla,
                str_gwy: str_pob$0,
                str_adk: INT,
                str_vja: str_fhv),
             str_hiy,
             str_wyl,
             FALSE]
          )
          (
            { str_mgo, str_wsk, str_rja | NATURAL1 > {} }
            ,
            %(str_mbm, str_rze, str_yal, str_fxs, str_mqe).
            (str_klt$0 = str_iwk|
             struct
               (str_vcr: {},
                str_qmc:
                [str_evj$0, str_mar, str_bwi$0, str_ttx, NAT1, str_amy$0,
                 str_skf, str_kcn],
                str_mou:
                rec
                  (str_pem: str_vvr,
                   str_apb: str_lts$0,
                   str_giy: bool(FALSE /: MININT),
                   str_jbb: str_rxp,
                   str_pjo: {},
                   str_sru: str_vei,
                   str_dce: str_itn$0),
                str_jgx: "str_tmh",
                str_okf: str_vnv,
                str_xmx: str_dxo,
                str_hvf: str_bke$0,
                str_gpx: str_ahf))
          )
          (
            struct
              (str_pue: MAXINT,
               str_ljd: [],
               str_srx: str_phs$0,
               str_lnv: str_llz,
               str_hqy:
               struct
                 (str_wtb: (bool(str_vna /<<: str_tok) , NAT1),
                  str_epx: NAT1'str_lts'str_msk),
               str_ity:
               { str_let, str_udo, str_hgu, str_pmc, str_hgu
                 |
                 str_fqt$0 <: TRUE },
               str_swb: str_jyr)
          )
          (
            (subtree(bool(#(str_djj, str_agd, str_sja).(INT >= str_mrd))))
            ,
            (str_rkd <->
             UNION
               (str_ehs, str_afg, str_mvg, str_ncr, str_fmq, str_bnb,
                str_vkx, str_mjq, str_awp, str_hbe, str_sxo).
             (not(str_vdr <: str_ffh$0)| str_uor))
          )
          (
            rec
              (str_arg:
               { str_sbg, str_uxp, str_zhg, str_pwv, str_uoq, str_zdh
                 |
                 (#
                    (str_aru, str_lbx, str_fhf, str_foy, str_klq, str_mvi,
                     str_axa, str_ovx, str_oab).
                  (MININT : str_npg$0 <=> str_jth$0 : str_nnz) &
                  ([] /<: str_taw$0 or NAT1 <: NAT1)) =>
                 str_gin$0 > {} },
               str_izd: NATURAL)
          )
          (
            rec
              (str_yng: str_kpa,
               str_cib: UNION(str_opj). (INT <= str_ozl| INTEGER),
               str_lrt:
               (rec(str_ntg: str_miq$0, str_drp: STRING) |-> str_fvq$0)
                 'str_bnu,
               str_oel: bool(str_ruu$0 >= STRING),
               str_tls: MININT)
            ,
            str_jfp
          )
        
        :=
        { str_gkp, str_abd, str_lqs, str_fbp, str_toa
          |
          {str_xjr, str_yrm$0, str_yon} /<<:
          str_kkp$0 , ({str_dhc, 9, str_aqq$0, INT, str_cxi} |-> str_hdv) }
          ~
      WHEN
        #(str_vqd).
        (#(str_haq).
         ((str_mml > INTEGER =>
           #(str_ben, str_pjh, str_heb).(not(NATURAL1 = str_jgb))) or
          !(str_zaa, str_tkh, str_ydy).(str_mvu <: FALSE)))
      THEN
        skip
      WHEN
        !(str_mtd, str_qrt).
        (!(str_vci, str_jzz, str_ugq, str_smu, str_uea, str_ocq, str_acw).
         (not
            (#(str_cbt, str_xyw, str_wda, str_ryu).
             (!
                (str_pno, str_mhk, str_fsy, str_abn, str_cav, str_dtb, str_zaa).
              (#
                 (str_rgc, str_mci, str_acn, str_uuk, str_lsa, str_dfk,
                  str_fsk, str_ecm, str_utc, str_mkj, str_mvh).
               (str_xmx$0 : STRING))))))
      THEN
        str_txn, str_elz, str_qxn, str_uzh, str_nnq, str_qiw
        ::
        {bool(str_lml > INTEGER),
         [str_gyp, str_xta, NAT, str_xly, str_sdh, NAT, str_tbr$0, str_fct$0],
         bool
           (str_yxs$0 /<:
            {str_pwm$0, str_tkf, str_pai, str_vvo, NATURAL, str_yaj$0}
              'str_lzo),
         str_hra}
      WHEN
        not
          (not
             (PI(str_fkf, str_snp). (str_pgr$0 /<: str_ysa$0| NATURAL) <=
              (str_jir(str_spj))
              ,
              { str_ksf, str_lit, str_rge, str_zpf, str_xvv, str_zmt,
                str_rkk, str_rys, str_ris
                |
                str_qmg >= INTEGER }))
      THEN
        str_izi, str_shm, str_qaa, str_efm, str_xlx, str_vln, str_hqm,
        str_ctz, str_kvy, str_twe
        <--
        str_ouv
          (struct
             (str_gkt: str_egh,
              str_yis: [],
              str_wcl: str_uga$0,
              str_jjw: NATURAL,
              str_wxu: str_trv$0,
              str_zjp:
              (id
                 ([struct
                     (str_ljn: INTEGER,
                      str_npj: str_rio$0,
                      str_wkq:
                      (str_ruz ->
                       PI
                         (str_yal, str_yfb, str_ejq, str_cyf, str_vby,
                          str_qum, str_xys).
                       (str_ajl /<<: NAT| STRING)),
                      str_jfs: str_wfk$0,
                      str_lqt: {},
                      str_erw: NATURAL1)])),
              str_tas: str_xnz,
              str_dit: str_erd$0)
             'str_qov,
           (struct
              (str_lsd: [],
               str_jmi: str_mjf$0,
               str_fta:
               (bool
                  (str_qqx$0 /= str_lmv$0 &
                   ([] <= str_uto$0 or "str_voa" /= INTEGER))
                  (str_grb))) <->
            (str_pvi$0 <- str_qrg$0)),
           (conc
              ([str_kmd,
                str_cum$0,
                (sizet({str_qjj$0, str_hjy, str_yrh$0})),
                str_enr$0,
                str_wjz]
                 ((str_uwp |> str_cvl) |-> MININT))))
      WHEN
        not
          (not(NATURAL /= NATURAL1 <=> str_bxz >= str_kxx$0) or
           str_zrz([]) >= tree(str_owj))
      THEN
        str_wnq, str_kcv, str_xtw, str_uux, str_eae, str_tot, str_ryf,
        str_dym, str_rci, str_att
        ::
        [str_yph$0,
         FALSE'str_ous,
         (NATURAL |-> {}),
         str_fzz,
         str_cds$0,
         INT,
         struct
           (str_hph: (str_rht$0 , str_vgx),
            str_cuo:
            %(str_jbq, str_bea, str_zfg, str_lzm).
            (str_rmb$0 <: NATURAL1| str_kde$0),
            str_oxe: rec(str_wnb: str_hdv, str_wbx: str_zyr))]
      WHEN
        rec
          (str_jhg: str_xyp,
           str_czn: bool(str_car$0 <= str_atz$0 or str_nnb$0 = str_fqj$0),
           str_pfb: str_ooi$0) >
        struct
          (str_kit: (inter(str_djb , str_qbn$0)),
           str_grc: NAT1,
           str_rzw: str_lwx,
           str_oay: [])
      THEN
        ASSERT
          %(str_jed, str_gca, str_ggh, str_mjm, str_mle, str_fxz, str_asf).
          (!
             (str_yop, str_arg, str_dcy, str_zcn, str_uzo, str_ueq, str_fxq,
              str_hky, str_xcb).
           (not(str_aci >= str_ehg))|
           FALSE) /<<:
          INTEGER'str_jkt'str_onk(TRUE)
        THEN
          str_cqg, str_jvj, str_vij
          :=
          FIN1
            (INT
             |->
             { str_qra, str_dvp
               |
               #(str_ark, str_cbn, str_ceb).
               (!
                  (str_dfk, str_cho, str_gxs, str_elr, str_thz, str_jwp,
                   str_dmg, str_pkh, str_fxk, str_isz, str_mkd).
                (NATURAL1 : str_pwe$0)) }
               'str_ulm
               'str_nxx)
        END
      ELSE
        str_jdp 
          (
            bool
              (not
                 (!(str_qdm, str_nom, str_czs).
                  (#
                     (str_now, str_qwo, str_ewb, str_eky, str_xev, str_sal,
                      str_ewv, str_rdi, str_ywx, str_uok).
                   (str_nsv$0 /<: str_wgm$0 &
                    not(!(str_ryk, str_vcx).(str_vwg <= NATURAL))))))
          )
          (
            UNION
              (str_zct, str_azq, str_kpr, str_mbd, str_ooa, str_nfn, str_zjp,
               str_est, str_hfb, str_ofq, str_xty).
            (!(str_ptt, str_pjw).(not(str_gkb$0 /= str_pcn))| {str_xea$0, []})
            |->
            bool(str_fvz$0 /<: str_mgq => NAT /<<: 8)
          )
          (
            last
              (bool
                 (STRING /<: str_xrm$0 &
                  (not(str_nxe /= {}) =>
                   !
                     (str_dfw, str_wwo, str_myf, str_ido, str_rwn, str_bru,
                      str_rwd).
                   (not(str_zlj = str_bsb)))))
          )
          (
            rec
              (str_iyc: str_hub$0,
               str_fzt: (STRING |-> (str_pgf$0(str_xxz$0))),
               str_iez:
               rec
                 (str_mfx: str_yhu$0,
                  str_rfu: INT,
                  str_rlk: NAT1,
                  str_kvj: MAXINT,
                  str_hvi: str_idg,
                  str_opj: TRUE,
                  str_osz: str_sgi),
               str_rok: str_zhg$0,
               str_bdg: BOOL)
              ((str_jbe(MAXINT))(str_fhd))
          )
        
        :=
        UNION
          (str_qln, str_uiy, str_win, str_pvf, str_njb, str_mzd, str_wmb,
           str_mkq, str_acy, str_sia, str_rpk).
        (not
           (!(str_sol, str_xbs, str_lof, str_glg).
            (!
               (str_iuy, str_yqh, str_aez, str_trd, str_lth, str_pdy,
                str_egy, str_dhm, str_tvp).
             (str_ips$0 <<: str_jyj or str_uam$0 = str_ekz)))|
         str_eat
         ,
         PI(str_grt, str_qnv, str_soy, str_ejg). (str_pnf : str_bby| MAXINT))
      END ;
      SELECT
        SIGMA(str_opl, str_nku, str_hbl). (str_fre <= TRUE| str_cfe) /:
        conc
          ({ str_ktu, str_lyu, str_ubh, str_nsr, str_nqp, str_qcc
             |
             str_pzl$0 /: str_qia } <|
           INTER
             (str_uoe, str_gkk, str_kap, str_ndv, str_msa, str_qpo, str_zlr,
              str_zdk).
           (not(NAT /<<: str_azy$0)| str_led))
      THEN
        str_wzp, str_wtl :(
          str_mah$0 <: str_qtc$0 or
          bool
            (!(str_cdu, str_vdx).
             ({ str_msi, str_mbw | BOOL : {} } >= str_qgt)) <:
          NAT1(str_xny)
        )
      WHEN
        !
          (str_yfm, str_uiu, str_ocr, str_xbv, str_fjt, str_lbh, str_veo,
           str_yta, str_zdk).
        (#(str_ret, str_qym, str_axo, str_zte, str_zww, str_mpv, str_woy).
         (BOOL /: bool(str_qla /: str_how$0) or
          not(!(str_tcj, str_ikl, str_zaz).(TRUE /: str_ukk))))
      THEN
        str_qoz, str_ecy, str_vtx, str_tqq, str_nxb, str_tmp
        <--
        str_ctn
          ((NAT \/
            rec
              (str_pdv: str_qcr$0,
               str_hfa: str_kel,
               str_dfa: str_gsh$0,
               str_zhe: str_bcm,
               str_wmv:
               struct
                 (str_ylm: str_hmo,
                  str_bcb: NATURAL,
                  str_dfj: INTEGER,
                  str_srf: str_mfi'str_pqp,
                  str_hyc:
                  rec
                    (str_whg: FALSE,
                     str_lux: (INTEGER(str_eve$0(str_fyg))),
                     str_uqn: str_mnr,
                     str_wev: MININT,
                     str_tpe: INTEGER)))),
           bool
             (#(str_eug).
              (#
                 (str_fig, str_xyu, str_vuh, str_war, str_rwa, str_pbr,
                  str_upg, str_alv, str_xcu, str_dwb, str_suz).
               (!
                  (str_yhw, str_zwv, str_yyj, str_cdu, str_pcf, str_igf,
                   str_gwx, str_gjy, str_ugu).
                (NATURAL1 > str_dnl$0 or
                 str_rsq$0 /<<: STRING or
                 not(NAT > NAT1))))),
           [bool(TRUE <<: str_axc$0),
            struct
              (str_mkw: str_nbx,
               str_tqh: str_nhp$0,
               str_jof:
               { str_olu, str_ctw, str_nwd, str_lnu | INT /: str_flq$0 },
               str_hzq: str_dws$0,
               str_zvk: INTEGER,
               str_vbr: str_ans,
               str_amc: MININT,
               str_hlx: NAT),
            str_jzl,
            str_jxp,
            str_clh,
            str_oou$0,
            bool(str_ndb < str_jvz(str_cic))],
           (struct(str_umd: NATURAL1, str_ypy: str_cde)
              (rec
                 (str_bdr: str_rwf$0,
                  str_azo: str_hyj,
                  str_twi: str_mpl$0,
                  str_qpi: str_jdr,
                  str_hpz:
                  [([] |-> MININT), str_wlr$0, (fnc(str_amz$0))]'str_dqg,
                  str_zmh: str_ric,
                  str_kjp: str_twy))),
           [str_eky,
            (MININT(FALSE)),
            rec
              (str_oxr: [],
               str_rti:
               bool
                 (!(str_rlv, str_asu, str_ewh, str_txk, str_baw, str_pot).
                  (#
                     (str_ypv, str_fxj, str_nua, str_fxc, str_egt, str_qpe,
                      str_kjr, str_eak, str_udz, str_bhw, str_sft).
                   (str_lvh$0 >= str_rec)))),
            rec
              (str_snm: str_bsx,
               str_oaz: str_ecd,
               str_rhj: str_axo,
               str_gde: FALSE,
               str_jgf: str_ppt,
               str_uay: [],
               str_ien: str_rri$0,
               str_fqa: str_exp$0)])
      ELSE
        IF
          not
            ((!
                (str_yge, str_vhs, str_zwt, str_tfq, str_qif, str_amn,
                 str_gvh, str_ess).
              ([] > str_eqh or FALSE >= str_cbm) =>
              #
                (str_fzh, str_pqy, str_wtl, str_hoo, str_jzb, str_nys,
                 str_shp, str_khz, str_gzc, str_qgd).
              (str_mfk$0 = str_mjj)) <=>
             !
               (str_htk, str_let, str_oxh, str_uqa, str_tip, str_qjn,
                str_mrf, str_jev, str_oeo, str_fbz).
             (NAT <<: str_hia$0))
        THEN
          str_jpv 
            (
              bool
                ((MAXINT , TRUE)'str_uov
                 ,
                 %(str_mwm, str_jeg). (str_hzh$0 /: str_jjr| INT) :
                 NATURAL / str_msi$0)
            )
            (
              iseq1
                (card
                   (struct
                      (str_ulo:
                       struct
                         (str_cvo: rec(str_bok: str_gxu),
                          str_sgf: str_wkn$0,
                          str_qqe: NAT,
                          str_kgn: INTEGER),
                       str_ohc: [],
                       str_dcb: str_evk,
                       str_aas: str_zwb$0,
                       str_rmj: NATURAL,
                       str_dzh:
                       INTER
                         (str_rrl, str_oxi, str_vst, str_iyo, str_mxc,
                          str_ufc, str_zho, str_tth, str_sku, str_eex).
                       (str_vpe /<<: str_qpt$0| mirror(str_wvt$0)),
                       str_foe: NATURAL)))
            )
            (
              { str_bth, str_php, str_itk, str_oke, str_swo, str_fch
                |
                {str_tdx$0,
                 MAXINT,
                 NATURAL,
                 rec(str_skj: NAT1),
                 str_fmq$0,
                 TRUE,
                 BOOL} /=
                str_fkw
                  (SIGMA
                     (str_hde, str_xkb, str_wob, str_gbm, str_gxl, str_yrv,
                      str_zrw).
                   (str_dkt > str_thg$0|
                    rec
                      (str_qsi: str_mxc,
                       str_oni: str_piy,
                       str_iyr: NAT,
                       str_ezv: str_tkg$0,
                       str_ein: str_csh,
                       str_jse: str_bqr))) }
            )
            (
              {bool
                 (not
                    (!
                       (str_gvt, str_dcu, str_qxs, str_mot, str_wkk, str_emp,
                        str_edl, str_rbq, str_kzv).
                     (#
                        (str_ipn, str_nis, str_sef, str_bjq, str_vfk,
                         str_vuv, str_fxa, str_dqs, str_lju, str_beh, str_fra).
                      (#
                         (str_iqc, str_qza, str_zix, str_snt, str_zmt,
                          str_wwy, str_suu, str_yjm, str_cbn).
                       (not(str_yfn$0 : NATURAL))))))}
            )
            (
              (str_tvt$0(str_cti))
              ,
              rec
                (str_kqz: rec(str_wzd: TRUE)'str_lzs,
                 str_psa: (str_afc$0 ^ str_tlz),
                 str_zgx: str_jrl$0,
                 str_qye: str_ybz,
                 str_naw:
                 [MAXINT, str_zdg, str_vov$0, "str_lmu", [], str_udz, [],
                  BOOL],
                 str_ggg: str_yav,
                 str_xxo: str_ibd$0)
            )
            (
              ([({NAT1, (MAXINT , str_llc$0)}(STRING)),
                MININT,
                str_ozi$0,
                str_wzj$0,
                str_czs$0,
                str_gdz,
                NATURAL,
                (str_fmb >< str_rqc)]
               |->
               MININT)
                (str_jvl)
            )
            (
              rec
                (str_bhl:
                 ((str_clb$0 <<|
                   (PI
                      (str_juu, str_otp, str_lvx, str_nnf, str_mvn, str_kfd,
                       str_esk, str_dvu).
                    (!
                       (str_guq, str_lqb, str_cya, str_iwm, str_juk, str_pyo,
                        str_bft, str_zjm).
                     (NAT1 = str_ima$0)|
                     str_sfg)
                    |->
                    str_ehw))
                    ([]'str_szo)))
            )
            (
              bool
                (not(NATURAL1 /<<: str_ush) &
                 !
                   (str_pnv, str_zti, str_gjk, str_vwd, str_xhd, str_gls,
                    str_bvh, str_hlb, str_utg, str_qil).
                 (#
                    (str_vfz, str_ugy, str_krt, str_zkz, str_dih, str_jtx,
                     str_pco, str_ieo, str_bhx).
                  (str_qzf$0 /=
                   INTER(str_jsd, str_ajb). (INT /<<: str_zpn$0| str_soy$0))))
            )
          
          :=
          struct
            (str_ged: str_frq$0,
             str_ize: str_ien$0,
             str_evd: str_gtb$0,
             str_eoh: str_ofg,
             str_sss:
             {rec
                (str_ctm: str_hig$0,
                 str_vlu: str_lho$0,
                 str_xtk: TRUE,
                 str_tij: str_kdb)},
             str_epm: str_eol$0,
             str_klf:
             ({ str_rjl, str_xtv, str_jvt, str_kqy, str_ktu
                |
                str_lvl$0 <<: str_awm$0 }
              ,
              [FALSE, str_eow$0, STRING, str_jjm, BOOL, INTEGER]'str_dsy))
        ELSIF
          not
            (#(str_gxz, str_clk, str_jdy).
             (!(str_ywt).
              (str_fxp :
               [str_gvo$0,
                str_qdz,
                NAT1,
                rec
                  (str_ins: NAT1,
                   str_uen: INT,
                   str_ila: str_foh,
                   str_lhc: MININT,
                   str_zun: str_fsi,
                   str_rwb: {},
                   str_iug: str_gkb$0,
                   str_kln: str_lhj$0),
                str_rpp,
                { str_ihw | FALSE = str_dan$0 }])))
        THEN
          str_mah'str_zvu
          :=
          rec
            (str_axi: str_wmd,
             str_pyl: STRING,
             str_dja:
             (fnc
                (rec
                   (str_asx: rec(str_gth: str_lia$0, str_luj: str_gpl$0),
                    str_wfj:
                    (left
                       ({(str_jwn$0 \/ NAT), str_qjg, BOOL, INTEGER, str_xst}))))),
             str_prw: str_wfn$0,
             str_evv: INT)
        ELSIF
          str_kjp$0 = str_muh$0 or
          closure1(bool(not(str_svd /: str_ytn))'str_wza) = conc(str_pfi$0)
        THEN
          str_usq'str_rmh
          :=
          [NATURAL,
           str_asc,
           str_xve,
           (rec(str_ibz: str_pai, str_eqb: MAXINT, str_ojv: str_meu'str_tab) /|\
            (NAT1~)),
           ((top(NAT1)) /|\ MAXINT)]
        ELSIF
          !(str_mju, str_kbf, str_rlo, str_ksq, str_lfj, str_lxg).
          (#
             (str_czd, str_lfd, str_myq, str_jcf, str_cxk, str_xae, str_psg,
              str_ize).
           (!(str_omu, str_acp, str_akp, str_cep, str_kiy, str_ywc).
            (!(str_yid, str_eny, str_kzw, str_xny, str_xqh).
             (not(not(not(FALSE /: str_ueq)))))))
        THEN
          str_azc, str_hpe, str_kak
          :=
          size
            (tail
               ({ str_ogi | {} > str_ygf }
                |->
                bool
                  (!
                     (str_blc, str_jyk, str_ilj, str_vnr, str_ubj, str_fxt,
                      str_znp, str_fuo).
                   (not(str_npt$0 <<: str_kgh$0)))))
        ELSIF
          not
            (not(str_kew$0 , str_gia$0 <<: str_nsk$0) or
             !
               (str_efu, str_ono, str_keo, str_tlj, str_oqh, str_ksn,
                str_hba, str_hcz, str_nmw).
             (str_rzo > str_jfr$0 => STRING > str_exh$0))
        THEN
          str_hnn, str_hdy, str_cnn, str_lxo, str_ntq, str_ped, str_sqk,
          str_kqr :(
            [bool(str_dle$0 > str_njt), (perm(str_msi$0))] >
            { str_gqc | not(TRUE < NATURAL) }
          )
        ELSIF
          (#(str_qxh, str_sxq, str_yvl, str_gsg, str_euu).
           (str_lwg$0 /: INTEGER) =>
           str_kcv$0 <: NAT1) &
          #(str_qrz, str_uho).((str_dvg(str_sbq$0))'str_hfr <<: str_mqv$0)
        THEN
          str_pfs'str_kkd
          :=
          rec
            (str_kmu: NATURAL1,
             str_bmr: NATURAL,
             str_ogg: str_sdr$0,
             str_nid: str_kll,
             str_mwz: str_ciz,
             str_clb: MININT)
          ,
          { str_jcw, str_tqm, str_ear, str_awn, str_xuz, str_zxz, str_vjp,
            str_bgx
            |
            not
              (not
                 (!
                    (str_nxc, str_kfq, str_ucm, str_lpo, str_qul, str_vcx,
                     str_xdw, str_aum).
                  (!
                     (str_qnf, str_evc, str_xgx, str_kln, str_qcc, str_mzq,
                      str_beg, str_fhj, str_cgo, str_nxt, str_xse).
                   (str_hln$0 /<<: str_snd)))) }
        ELSIF
          (str_qcr$0 > str_vwo$0 =>
           !(str_crl, str_fcn, str_jmy, str_owk, str_eyp).
           (!(str_isv, str_div, str_fed, str_gau).
            (!(str_vpw, str_uiq, str_czy).(NAT1 < MININT)))) or
          (INT = str_ese$0 => [] : MAXINT)
        THEN
          str_xio, str_qzq, str_whp, str_wcg
          <--
          str_okh
            ({ str_vhp, str_kpu, str_ubb, str_aye, str_sbj
               |
               #
                 (str_ruo, str_ghi, str_rde, str_rgd, str_aal, str_qsy,
                  str_yfq).
               (not
                  (!(str_nol, str_ilu, str_agr, str_qzv).
                   (#
                      (str_clh, str_unb, str_voa, str_eat, str_eot, str_xwg,
                       str_lys, str_ykx, str_pkb, str_gyf, str_plj).
                    (str_byw <= [FALSE, str_ycq, str_dkr, str_abi$0])))) },
             (str_kof$0
                (({}
                  |->
                  SIGMA
                    (str_tvb, str_mnq, str_xxm, str_usk, str_xde, str_fyk,
                     str_doc).
                  ({str_uly$0, str_xfv$0, NAT1, str_mre$0, str_azw} < str_xav|
                   str_ogo$0 |-> []))
                   'str_xax)),
             ((MININT
                 ({ str_aqe, str_gvl, str_enl, str_ypw, str_glk, str_kcq,
                    str_oex, str_hie
                    |
                    STRING > str_gbf } *
                  ((str_vua$0 , str_wan$0) +->> MAXINT)))
                ([])),
             ([str_quz,
               INT,
               (NATURAL({BOOL, [], str_vsz, str_cyq, NATURAL})),
               { str_itp, str_juf, str_rjd, str_hzm, str_bwj, str_qtn,
                 str_hhs
                 |
                 str_gsd = str_ygt$0 },
               str_yda$0,
               str_exl]
              ,
              (str_fub$0 +
               rec
                 (str_nxk: str_tkj,
                  str_xdn: str_glq,
                  str_nbk: str_cvv,
                  str_hkz: str_xvt,
                  str_mrw: str_vvg,
                  str_oko: str_erm,
                  str_dol: str_hfe))),
             INTER
               (str_wju, str_zyb, str_jvx, str_xoe, str_cjo, str_zif, str_lfu).
             (#(str_xzd, str_ndm).
              ({INT,
                str_naw$0,
                [],
                str_yak,
                rec
                  (str_idn: str_wqv,
                   str_jfn: str_rbr$0,
                   str_ujl: str_ohn,
                   str_awq: str_gmn$0,
                   str_gjc: str_sqr$0,
                   str_sfn: str_fpn,
                   str_ovb: [],
                   str_ekv: str_atw)} >=
               NAT1)|
              struct(str_duu: MAXINT, str_wnx: str_fdc, str_chl: str_pve$0)
                'str_bmr),
             (rec
                (str_tfg: str_asp$0,
                 str_hoe: NAT1,
                 str_dmx: str_ots$0,
                 str_hdl: INTEGER,
                 str_tue: str_vqw$0,
                 str_tpx:
                 (struct
                    (str_cjc: INTEGER,
                     str_eyh:
                     UNION(str_pys). (str_owf$0 <= str_mrg$0| MININT),
                     str_zpc: str_goa,
                     str_xek: str_reg$0,
                     str_jlv: NATURAL1)
                    (struct(str_wse: str_egj$0, str_ynz: str_yta$0))),
                 str_fwr: FALSE)
              |->
              %(str_oxh, str_hdf, str_rle). (str_gao$0 > str_ejz$0| MAXINT)),
             (struct
                (str_klz: str_mvc$0,
                 str_aun:
                 { str_xwf, str_asn, str_puh, str_beh, str_tgi, str_fbt,
                   str_pvh, str_ogc, str_opk, str_izb
                   |
                   #
                     (str_rfu, str_rus, str_wap, str_uqk, str_imz, str_cbk,
                      str_cbc, str_jdd).
                   (str_cyf <= str_ctc$0) })
              |->
              ({ str_ysg, str_ans, str_pmi, str_oso, str_tms, str_pos,
                 str_wki, str_hwk, str_hcx
                 |
                 #(str_sfu, str_vrn, str_pxp, str_oql, str_yrk).
                 (BOOL = MAXINT) } \/
               str_icp)),
             (min
                ({[],
                  NAT1,
                  PI
                    (str_aoy, str_wnj, str_dnh, str_lga, str_gww, str_lru,
                     str_kxu, str_eon, str_njz, str_usj, str_imq).
                  (str_eye$0 <= str_aue => FALSE /<<: str_xet| NATURAL1),
                  (bool(str_ryp$0 /<: str_lku => str_mrj <= str_vht) - INT),
                  str_kwl})))
        END
      END
    END
  END;

  str_xlq, str_taw, str_pse, str_dpe, str_yrq, str_phd <-- str_xrd =
  CHOICE
    VAR
      str_dcz, str_rfo, str_cih, str_ckl, str_kmg, str_sgw, str_bdx, str_auk
    IN
      BEGIN
        str_anm, str_ubm, str_eyu, str_wgv, str_dsi, str_jcf :(
          str_cya /: str_wrt$0 &
          not(not(not(str_lqk /= bool(INT /<<: NATURAL))))
        ) ;
        str_sbq, str_vvs, str_iwp, str_utu, str_kyy, str_oqd, str_ach
        <--
        str_yuk
          ({str_frh$0,
            str_jdy$0,
            str_qzx,
            str_xve,
            [(ran
                (struct
                   (str_xai: str_hfw,
                    str_bif: 231,
                    str_yat: str_sjq$0,
                    str_sct: str_paz$0,
                    str_aoz: str_gqr$0,
                    str_iro: str_nbw,
                    str_vkv: "str_axf"))),
             NAT],
            bool
              (#
                 (str_doc, str_opg, str_czi, str_gno, str_yjm, str_ggy,
                  str_zri, str_vdn).
               (#
                  (str_frz, str_kcq, str_tbo, str_imn, str_jys, str_bru,
                   str_xfo, str_ewa).
                (str_xkz$0 <<: str_nvp))),
            TRUE,
            str_efj$0},
           (prj2
              (UNION
                 (str_ges, str_rgm, str_klb, str_lwe, str_vaj, str_ccw,
                  str_oyu).
               (!(str_uuh, str_rmp, str_sjx, str_qvr).
                (!(str_fnk, str_xpw).
                 (not(str_gjs$0 < str_uhw$0) or not(str_yas$0 /<<: str_rhg$0)))|
                str_uei))))
      END ||
      str_kmy, str_cbs, str_fpq, str_dqh, str_pql, str_xsn, str_iam, str_lzg,
      str_nie
      ::
      {rec
         (str_hhn: (STRING >< str_tib),
          str_ilj: str_btm$0,
          str_woo: str_bwm$0,
          str_das: STRING,
          str_pwd: 6,
          str_tqo: str_ccp$0,
          str_tqq: str_rtw$0,
          str_atz: TRUE),
       ([str_tvq$0,
         NATURAL,
         str_isi$0,
         STRING,
         str_tpt'str_ytv,
         str_ilt$0,
         {INT, str_cuh, str_obh, {}, str_klr$0, str_qtf$0, str_qha},
         str_dgy$0] <<|
        str_pky),
       str_oya}
    END
  OR
    str_afn'str_nbn
    :=
    { str_zgc, str_hou, str_qdh, str_arn, str_ikj
      |
      str_zxo < BOOL <=>
      not
        (#(str_vfv, str_fcv).
         (#(str_tun, str_jha).(not(str_usw <: str_wir$0)))) }
  OR
    str_exu, str_zjx, str_fid, str_zpi, str_fmg, str_sqm, str_pwc, str_bfq,
    str_ojb
    ::
    INTER
      (str_dkp, str_jfa, str_syd, str_uys, str_urr, str_tfx, str_gwa,
       str_def, str_zel).
    (#(str_dbj, str_akm, str_lah, str_zeh).
     (not
        (#
           (str_zeq, str_bzx, str_wpy, str_odw, str_fgk, str_eci, str_zly,
            str_yxj, str_vvp).
         (str_lun$0 <<: MININT)))|
     arity({} , (iseq1(str_dxo$0))))
  OR
    str_eqq, str_oih, str_rfe, str_lho, str_ilw, str_uue, str_dtx
    :=
    {{ str_glg, str_qsi | [] <= str_ytx },
     str_cii,
     7,
     bool
       (!(str_ytv, str_oxc, str_qxy, str_wjo, str_awo).
        (not(str_wae$0 = MININT)))
       'str_uey}
      (TRUE)
  OR
    str_gtw 
      (
        rec
          (str_sme: str_jwp$0,
           str_npm: NAT1,
           str_ila: str_axq$0,
           str_wxr: str_kln,
           str_ijm:
           {{ str_suh, str_ldo | str_sqs = str_qeu },
            str_hpe,
            [],
            str_efl'str_fgu'str_vwm,
            PI(str_rik, str_obp). (INT <: str_vwn$0| str_vqf),
            str_ovp},
           str_zct: [],
           str_qow: str_ham,
           str_atx:
           [NATURAL1, BOOL, str_eth, str_bkk$0, str_zqt, str_pey, FALSE])
      )
    
    :=
    rec
      (str_uwp: NATURAL,
       str_ljg:
       PI(str_oiq, str_etc, str_kun, str_wzw, str_ybc, str_bqy, str_upk).
       (str_jnh /<<: str_lga| str_hns$0),
       str_eoq: (626 , str_isx$0),
       str_hza:
       { str_xib, str_git, str_xzd, str_fhz, str_ioj, str_kse, str_thh,
         str_lxb
         |
         #
           (str_wad, str_xty, str_xvl, str_xue, str_sxx, str_yyg, str_ntd,
            str_hcx, str_jiu, str_rnp).
         (!(str_ngz).(str_lkp$0 >= FALSE <=> str_crq$0 < STRING)) },
       str_ume: str_nco,
       str_sjx: str_kpy)
  OR
    ANY
      str_ezd, str_wvw, str_fqt, str_izu
    WHERE
      #(str_uyn, str_nvg, str_iia, str_sqb, str_tnq, str_msy).
      (FALSE >
       { str_hfy, str_zsl, str_oyg, str_ooz, str_utj, str_vtk, str_ppf,
         str_vib, str_hxi, str_wqu
         |
         not
           (!
              (str_pjf, str_pmc, str_wjo, str_ssx, str_ung, str_vve, str_qil,
               str_nua, str_iem).
            (#(str_nod, str_lzt, str_ilv, str_gvu).
             (str_xra /<: TRUE & str_sid /= str_pfn))) })
    THEN
      LET
        str_ryk, str_igq, str_jme, str_hut, str_fzm, str_pgw, str_cmw
      BE
        str_paz
        =
        bool
          (#
             (str_ain, str_spp, str_nyy, str_rdk, str_txa, str_ibo, str_qos,
              str_ict).
           (!(str_zxm, str_qcp, str_kng).
            ((str_nsg$0 < str_rtb & str_dkp$0 >= str_itf) =>
             not(str_wri$0 : str_wkc))))&
        str_jkc
        =
        succ
          ({ str_izp, str_uwl, str_ins
             |
             #(str_rak, str_mtm, str_yyt).
             ([str_ryt, str_olf$0, str_prr$0, str_dge]'str_yak <<:
              rec(str_ewy: str_ibo, str_sst: NATURAL, str_otd: str_rsj)) })&
        str_gxo
        =
        [str_ilv$0,
         str_hfr$0,
         rec
           (str_rwf:
            (struct
               (str_lkr: str_mvx,
                str_gkj: str_psi$0,
                str_yxo: FALSE,
                str_oud: str_wah) |>
             struct(str_moc: INTEGER)),
            str_ygx: str_xkn,
            str_urx: NAT,
            str_fgw: str_nvw$0,
            str_aav:
            struct
              (str_iiw: str_dzl'str_dbo,
               str_aov: str_tty,
               str_euz: str_sin$0,
               str_hvr: str_wxz$0),
            str_exs: str_cyy$0,
            str_fgc: NAT1,
            str_zuu: str_eip),
         NAT1]
      IN
        IF
          not
            (min
               (rec
                  (str_pch:
                   (str_vab
                    |->
                    { str_sxp, str_xso, str_ghk, str_tma, str_epk, str_ivq,
                      str_sna, str_mzn, str_hbg, str_ivn
                      |
                      not([] /= str_vlb) }))) >
             1)
        THEN
          str_mpv, str_ldi, str_lhx, str_ojk, str_yih
          :=
          {str_vsy$0,
           NAT,
           [str_tdd, (str_apj <<| str_kfh$0)],
           STRING,
           str_xgm$0'str_yhk,
           (son
              (%
                 (str_xxh, str_thr, str_sln, str_ihz, str_nvq, str_wnn,
                  str_ivm).
               (not(BOOL /<<: str_zpb)| str_rmo))),
           str_wdj$0,
           TRUE}
        ELSIF
          !(str_fvg, str_vuk, str_gbl, str_add, str_kro).
          (str_fts$0(postfix(str_wnp$0)) <=
           pred([MAXINT, str_aci, str_yiu$0, {}, str_acz$0, (rev(str_lie))]))
        THEN
          str_gpm, str_lif, str_djm, str_frr, str_lnw, str_alh, str_pkv,
          str_qpa, str_nhw, str_cku, str_znq
          ::
          SIGMA
            (str_glu, str_jzw, str_ukg, str_lqn, str_sdk, str_rwb, str_wkp,
             str_dqc).
          (not
             (!(str_lda, str_zew, str_qsf, str_due).(not(TRUE <<: str_uek$0)))|
           { str_vxq, str_pmp, str_wab, str_frn, str_zsd, str_vue, str_qcg,
             str_hlr, str_wem, str_vzt, str_afn
             |
             NATURAL : str_jcq }
           ,
           rec(str_etb: TRUE, str_zqs: TRUE))
        ELSIF
          not
            (PI
               (str_pao, str_ohn, str_tkq, str_zzb, str_yzk, str_quo,
                str_ysr, str_yjq).
             ("str_hkp" /<<: str_ywp$0|
              [str_shn$0,
               str_cns,
               [str_sft, str_uwa$0, str_yfs$0, str_qjt, str_rmk, MAXINT,
                str_ttq]]
                (str_sot)) <<:
             PI(str_ndx). (str_cqe : str_yps| {}))
        THEN
          str_pmd, str_hdk, str_emq, str_hyc :(
            str_waa$0 /<<:
            front
              (struct
                 (str_sfd: str_rde,
                  str_cqo: {},
                  str_mmu: str_jjl$0,
                  str_kmv: str_lkl$0,
                  str_exu: str_thc$0,
                  str_cab: NAT,
                  str_umj:
                  struct
                    (str_spw: str_hby$0,
                     str_xzz: str_vhr$0,
                     str_vql: str_vcc$0,
                     str_ibz: STRING,
                     str_eql: str_zsj$0,
                     str_lxg: str_pna$0),
                  str_cly: ((str_jij ; str_phj)))
               |->
               { str_srh, str_qcb, str_xip, str_xow, str_hen, str_qqg,
                 str_inu
                 |
                 NAT > NATURAL })
          )
        ELSIF
          #(str_qpf, str_ygt, str_auf, str_lxz, str_bmb, str_axr, str_rzt).
          (str_dtz$0 <->
           rec
             (str_lvx: str_qnl$0,
              str_djw: str_yaa$0,
              str_jsu: NATURAL,
              str_zlh: str_bsj$0,
              str_lqq: NAT,
              str_ywq: NAT1,
              str_vxr: str_uvh$0) /=
           (str_hol |-> MININT)'str_wmu |-> str_jsr)
        THEN
          str_ewu'str_gep
          :=
          bool
            (str_lcl$0 <->
             {NAT1,
              "str_htv",
              rec(str_kcw: str_hwj$0),
              str_umn,
              %(str_oby, str_qvb, str_ndb, str_xkt).
              (str_gat /<<: NAT| str_ooq)} /:
             {}[MININT])
        ELSE
          str_vql 
            (
              {str_mjz,
               rec(str_yzp: str_vfx$0, str_yqo: str_cev$0),
               str_qqj'str_rob,
               str_tba,
               (str_gkq >< str_mnx),
               {"str_ovf",
                {str_nhn,
                 [INTEGER, NATURAL, str_fdm, str_wdb, str_yme$0, str_kwl$0],
                 NATURAL}}}
            )
            (
              ({ str_evf, str_ump, str_jbl, str_ujb, str_txl, str_wtz
                 |
                 str_llg$0 /<<: str_kkk$0 }
                 (str_pbn -
                  {MAXINT,
                   str_wid,
                   str_dxz,
                   STRING,
                   (const(str_paq)),
                   str_oue$0,
                   [str_dkg, str_fkn$0, FALSE, str_nrt, str_ole$0, []]}))
                'str_caz
            )
            (
              { str_onw, str_swe, str_mrv, str_kqw, str_lps, str_hks, str_kzt
                |
                (str_kkd$0
                 |->
                 {struct
                    (str_xkd: 2,
                     str_dun: FALSE,
                     str_yyd: str_mby$0,
                     str_tar: STRING,
                     str_oaf: str_fyp$0,
                     str_kxt: str_eyn$0,
                     str_dzi: MININT,
                     str_viz: str_bod)})
                  'str_yad /<<:
                str_ciw$0'str_vmr }
            )
          
          :=
          rec
            (str_cvn: (str_fmr$0([str_vjd, FALSE, str_svc, str_vzi$0])),
             str_ngl: str_tyw$0,
             str_bah:
             struct
               (str_vsx:
                SIGMA(str_uon, str_bxe).
                (#(str_hpf, str_mdq, str_sau, str_joq, str_qmg, str_fns).
                 (str_bvz <: NATURAL)|
                 str_lpn$0),
                str_ipt: INT))
        END
      END
    END
  END;

  str_fih, str_ixz, str_qhk, str_din, str_kzv, str_zcu, str_nuz <-- str_byj =
  VAR
    str_qph, str_dbg, str_lpf, str_ckz, str_kdp, str_wui, str_nxu, str_oqv,
    str_xbj
  IN
    IF
      !(str_sza, str_wxx).
      (!(str_pgh, str_lhf, str_fns, str_jhf, str_kat).
       ((str_wwm <<: str_pnc$0 or str_axa$0 /: str_fas) &
        not
          (not
             (!
                (str_elz, str_rzv, str_dwg, str_oek, str_kwo, str_pxu,
                 str_sei, str_bbp, str_neh, str_yyz).
              (str_ccf /<: str_ait)))))
    THEN
      str_wjm, str_sig, str_gic, str_wdv, str_ftd, str_wzg, str_xsb
      <--
      str_dqo
        (rec
           (str_ftx: str_sdr,
            str_omm:
            { str_gnd, str_hpz, str_say, str_yri | not(str_hqw$0 = str_ecm$0) },
            str_qwg: "str_pmi",
            str_doc:
            INTER
              (str_pcp, str_eva, str_gkl, str_pyi, str_ipk, str_ffp, str_bkq,
               str_jaw, str_top).
            (str_vpx /<: INT| str_val$0)
              'str_bdb,
            str_dut: { str_dur, str_wfh | str_hkw >= str_vts$0 },
            str_ucl: bool(str_ijq <<: str_tyg$0)),
         {{ str_pfk
            |
            !
              (str_ccs, str_vlc, str_hui, str_tqs, str_jdg, str_znn, str_zdt,
               str_jun, str_sec, str_ybq, str_cwi).
            (!(str_xcc, str_qcy, str_crr, str_opi, str_xye, str_lii).
             (not(!(str_cbc).(str_zwh$0 /: NAT1)))) &
            str_rkv /= str_sgk$0 }},
         ((prefix
             (INTER(str_eda).
              (#(str_tfk, str_lcc, str_elu).(FALSE >= NATURAL)|
               bool(MAXINT /: INTEGER => str_dpz$0 : NATURAL1)))) -->
          MAXINT),
         { str_nym, str_flv, str_jhv, str_fpv
           |
           !(str_atp, str_ygw, str_kjg, str_eun).
           (#(str_ivv, str_rea, str_pvr, str_bla, str_hoz).
            (struct
               (str_rso: str_vdq$0,
                str_lef: str_qhp$0,
                str_ttn: str_ocm$0,
                str_rir: str_rvv,
                str_gcr: FALSE,
                str_nid: FALSE,
                str_nmt: str_ljd,
                str_oby: str_shq$0) /<<:
             ("str_pez" , str_huh) |-> MININT)) },
         (POW((FIN(MAXINT'str_ttz)) , [[(postfix(NATURAL1))]])),
         rec
           (str_ckl: (prefix(FALSE , str_rad$0)),
            str_ywy:
            (str_ncs
               ([str_qqj, 335, str_gfm$0, str_bql$0, str_sge, INTEGER,
                 str_bqm$0, NAT])),
            str_dij: {(first(INTEGER))},
            str_thw: str_bcx$0,
            str_fxv: NATURAL1),
         [(str_lua >+> {str_pwp$0}),
          [str_fro$0,
           str_yuc$0,
           str_wnf$0,
           str_mog,
           rec(str_lnk: str_urg$0, str_aww: STRING)],
          str_fhv$0,
          str_cxf,
          [str_czl, str_kjl, str_hgt$0, str_dtn, str_ldb$0, FALSE],
          str_xbv$0,
          (str_wao$0(str_fsv))],
         (UNION
            (str_qtg, str_jzj, str_pem, str_hxx, str_fkd, str_okp, str_gxt,
             str_yka, str_ojw, str_fys, str_hom).
          (NATURAL1 : str_nnz & MININT >= str_vat| FALSE)
            ({ str_ylw, str_wcc, str_zca, str_mqn, str_wlu, str_hwg, str_bsw,
               str_tyt, str_zgr, str_rtb
               |
               str_bmb$0 /: str_lov$0 or STRING <<: [] })),
         [({} |>>
           (str_kyi <<|
            { str_qjy, str_llx
              |
              !(str_arl).
              (rec
                 (str_pzc: str_nxi$0,
                  str_tzc: BOOL,
                  str_mus: str_hva$0,
                  str_usf: str_nhs,
                  str_aul: str_rkj$0) /<<:
               str_ous$0) }))],
         { str_xwq, str_dly
           |
           !(str_wns).(not(str_vzf <<: str_vif$0) & not(NATURAL1 <= NATURAL)) or
           str_bwn : str_qtr })
    ELSIF
      not
        (#
           (str_idv, str_hrf, str_hoe, str_iaq, str_owm, str_oiq, str_pzr,
            str_ner, str_ieb, str_pwi).
         (#(str_tgc, str_tbl, str_bkj, str_jpm, str_ubl, str_iqh, str_zpq).
          (str_gvz : str_fbo$0))) or
      #(str_uba, str_qjg, str_qvv).({} <<: NAT)
    THEN
      str_hfn, str_gta, str_ecy, str_vcw, str_ymz, str_cyh, str_chd, str_abn,
      str_fvv, str_qvs, str_die :(
        !(str_caw, str_vji, str_aln, str_vot).
        (#(str_wjx, str_xxi, str_uee, str_yrm, str_doh).
         (#(str_iqy, str_ysi, str_nke, str_mtj, str_tgt, str_reg).
          ({str_jwv, BOOL, str_hex$0, str_dnj, str_xgt$0, str_qdz$0, str_zqc} <<:
           (str_sgr |-> str_roq)(str_pcr$0))))
      )
    ELSIF
      not
        (#
           (str_hik, str_mtx, str_adk, str_eal, str_jrg, str_yxr, str_uwe,
            str_iby).
         (rec
            (str_xsx: bool(str_xsk /<<: str_svy$0),
             str_wqc: INTEGER'str_aiu,
             str_spx: { str_clw | NATURAL <: str_ctb }) <
          {}))
    THEN
      str_rcx, str_rvy, str_prk, str_ont, str_top
      ::
      struct
        (str_xtj: str_qtp,
         str_ksn:
         struct
           (str_mqn:
            rec
              (str_pge: ((STRING || str_bgs)),
               str_ihy: str_ude$0,
               str_dns: bool(str_uor$0 /: str_ibb$0)),
            str_nax: INT),
         str_fea: (STRING(str_wkm$0)),
         str_xuu: str_zqz,
         str_lzl: struct(str_nyt: str_huc$0, str_yub: str_jno),
         str_hyt: str_uus,
         str_lfd: str_bpk$0)
    ELSIF
      #
        (str_xkq, str_kzg, str_sxt, str_uwq, str_vse, str_onr, str_xie,
         str_ynp, str_try, str_vpl, str_avc).
      (!
         (str_puf, str_xhp, str_ucp, str_mme, str_njv, str_nwt, str_pqm,
          str_ghx, str_pfs, str_fte).
       (#
          (str_atn, str_zli, str_ncu, str_vla, str_fte, str_hkz, str_qfp,
           str_ljm, str_grf, str_lwo).
        (str_grm >= "str_vjy") <=>
        not
          (#(str_afe, str_blp).
           (#(str_uuu, str_iur, str_fvf, str_swo).(str_tej : NAT)))))
    THEN
      CASE
        struct
          (str_ubi: [str_psp$0, (INTEGER(str_ztl)), "str_pry"],
           str_xbv:
           {"str_gix",
            [str_cmc,
             BOOL,
             SIGMA
               (str_jdr, str_siy, str_nnb, str_uzu, str_jtr, str_oan,
                str_bto, str_cjv, str_ies, str_jyz, str_mjt).
             (str_lzv$0 : str_nvm$0| str_npe)]}) <->
        str_fhb$0
        OF
        EITHER
          rec
            (str_kjf:
             struct
               (str_wdo: str_ovu,
                str_tkv:
                (struct(str_xfb: NATURAL)
                 |->
                 rec(str_ies: str_kry, str_lpz: NATURAL1)),
                str_rps: rec(str_bbm: INTEGER)),
             str_crn:
             struct
               (str_mlr: str_dsg$0,
                str_meb: NAT,
                str_wyj: str_rrf$0,
                str_pgz: str_ery,
                str_tmt: INTEGER,
                str_fiy: str_oup,
                str_bqs: [],
                str_gsp: str_aqt))
        THEN
          str_omj 
            (
              { str_pxw, str_tgu, str_jqb, str_ety, str_hbl, str_rmg,
                str_zrx, str_xlm, str_dau
                |
                str_lsk /:
                [{ str_irk, str_ceq, str_ltd, str_cda, str_yix, str_icw,
                   str_vhv, str_mrb, str_acm, str_ejg, str_vwu
                   |
                   str_wwq$0 <= str_bpb$0 => MAXINT < str_wej },
                 str_ebg$0,
                 UNION
                   (str_pxo, str_fgn, str_xjs, str_yip, str_sfs, str_xxj,
                    str_fmj, str_cbx, str_cki).
                 (str_fjk$0 /<<: str_vub$0|
                  PI(str_bzx, str_tif, str_hag, str_sfl, str_bgs).
                  (TRUE > str_lrp$0| str_waz$0)),
                 NAT1,
                 str_pnq$0] }
            )
          
          :=
          {str_aao$0,
           str_seg$0,
           str_zgm$0,
           FALSE,
           (rev({{}, str_kak$0, bool(#(str_xmv).(str_ijo$0 /<: INTEGER))})),
           str_ugj,
           str_fmh$0,
           struct
             (str_jlo: str_plt,
              str_sfj: NAT1,
              str_lzv: str_edo$0,
              str_sml: "str_suz",
              str_cqd: str_sub,
              str_vyj: {},
              str_hrm: str_xhj,
              str_voi: str_fvt$0)}
            'str_ndl
        OR
          (str_zvp
             ({ str_kts, str_hbw, str_hwv, str_eqa
                |
                not
                  (!
                     (str_knz, str_bfy, str_jqt, str_odf, str_lak, str_uxm,
                      str_esm, str_mzl, str_xyv).
                   (INT >= str_bgd)) =>
                [] /= NATURAL }
                (str_wky$0)))
            'str_jts
        THEN
          str_att 
            (
              {((str_mts$0 ^
                 %
                   (str_kmh, str_sgr, str_qnj, str_gfh, str_enj, str_qys,
                    str_ljw).
                 (str_rbc$0 /: NATURAL|
                  rec
                    (str_omz: str_gvx,
                     str_vbp: str_fcq,
                     str_kny: str_pis,
                     str_qff: str_kci,
                     str_zcq: str_uuz$0,
                     str_ydw: str_loh,
                     str_mni: str_ajb$0,
                     str_zxh: str_prf)))
                ,
                [str_bcj,
                 PI
                   (str_qkb, str_ags, str_fkq, str_bfr, str_xii, str_lfa,
                    str_pvb, str_zvh, str_iwx, str_gof).
                 (str_uqn > str_abv| str_ssq$0),
                 str_qrc])}
            )
            (
              {(str_tqq$0 \|/ FALSE),
               (FALSE
                  (str_jjv
                   |->
                   struct
                     (str_pic: str_csn$0,
                      str_ggc: str_tag$0,
                      str_zrk: str_vwc,
                      str_ttu: [],
                      str_wdc:
                      rec
                        (str_xrr: str_adb,
                         str_efr: str_kpi,
                         str_hau: TRUE,
                         str_hff: INTEGER,
                         str_tbv: str_oue$0),
                      str_muw: str_sra,
                      str_nyy: FALSE)))}
              |->
              str_rkr$0
            )
            (
              { str_cju, str_gvy, str_qap, str_bcy
                |
                struct
                  (str_zgf: [],
                   str_uao: MAXINT,
                   str_nex: [],
                   str_flv: str_szx,
                   str_juc: str_egd$0,
                   str_yea:
                   rec
                     (str_wuc: NATURAL,
                      str_iiv: str_uon$0,
                      str_gjj: str_gbf$0,
                      str_vwi: [str_sjy$0, NATURAL1, str_mlr$0, BOOL]),
                   str_zfp: rec(str_div: str_gjj$0)'str_nkb) <=
                FALSE }
            )
          
          :=
          PI(str_ifh).
          (#
             (str_tui, str_cbj, str_dql, str_kam, str_uil, str_ycz, str_noe,
              str_yiz).
           (not
              ({str_zex$0,
                str_fle$0,
                str_oza,
                str_zkp,
                INT,
                rec
                  (str_dml: NAT,
                   str_vof: MININT,
                   str_hxd: str_knd$0,
                   str_arm: INT,
                   str_rsg: str_fhm$0,
                   str_pyh: BOOL,
                   str_gvm: { str_rax, str_scl | str_can /= NAT }),
                MININT} /:
               str_ugx$0))|
           NATURAL)
        OR
          rec
            (str_twa: str_muy,
             str_vvq: TRUE,
             str_bpy: ((str_vey$0'str_vlm(str_tzy)) <- str_nsw$0),
             str_fzr:
             struct
               (str_mzw: {},
                str_rxa: rec(str_omn: str_lxl, str_fka: "str_kpw"),
                str_ifo: [],
                str_cbp: NAT,
                str_arb: STRING,
                str_wdc: NATURAL1,
                str_jez: (str_bia$0(str_iqj)),
                str_jxi: str_ylw),
             str_urw: INTEGER,
             str_xum: [],
             str_otx: str_rnj)
        THEN
          str_qox, str_dzh, str_wvz, str_ydk, str_hau, str_wfk, str_qpi,
          str_dbl, str_ies, str_ydc, str_hgv :(
            not
              (!
                 (str_rqs, str_shb, str_jnu, str_zah, str_lka, str_zmy,
                  str_oxt, str_njl, str_ape, str_srr).
               (!
                  (str_hhk, str_fhg, str_ihc, str_tac, str_ajo, str_izs,
                   str_vwu, str_vca).
                ((NATURAL /= str_tmp & str_imb$0 >= str_odt$0) <=>
                 BOOL > str_soe$0 |-> str_ott)))
          )
        OR
          str_ynf$0
            (%(str_wak).
             (#
                (str_hlr, str_bny, str_ayh, str_tpj, str_nvd, str_ahl,
                 str_rel, str_sda, str_kyk).
              (str_rbj > str_oxb$0 <=> TRUE >= str_nvm)|
              rank(str_qpn)) >->
             rec
               (str_let: NAT1,
                str_xmv: str_dmh,
                str_amm: str_yqx,
                str_taa: str_frq,
                str_kvq: INT))
        THEN
          str_exq
          <--
          str_qdi
            ((str_ond
                ({str_reo,
                  str_drl,
                  [],
                  struct
                    (str_aqg: (str_grd(str_lip$0))'str_rwg,
                     str_pdw:
                     SIGMA(str_kdp, str_uva).
                     (str_hxv < str_oaf|
                      SIGMA(str_opo, str_hia, str_sxy).
                      ([] <= str_mjv$0| str_jti$0)),
                     str_awy: str_kpf$0,
                     str_nob: MININT,
                     str_aqp: str_som),
                  INT,
                  str_jyq$0})),
             {(str_tvt$0
               |->
               {[],
                str_sxg$0,
                struct
                  (str_fmk: str_dvy$0,
                   str_eko: NATURAL,
                   str_dux: str_lrs$0,
                   str_bib: str_edt$0,
                   str_vgp: str_waw,
                   str_qkx: str_otr,
                   str_grv: FALSE)
                  'str_nee,
                str_mfh$0,
                {str_wck$0, str_agd$0}}),
              "str_hvc"}
               'str_bbw,
             (min
                (bool(str_zig$0 /<<: str_lqn)
                   [struct
                      (str_gij: (str_cgb$0 ** str_coo),
                       str_wik:
                       rec
                         (str_quc: str_rri,
                          str_cou: (rev(str_oiw$0)),
                          str_qxa: FALSE,
                          str_jwd: str_zwq$0,
                          str_vaj: str_nkn,
                          str_mrr: NATURAL1,
                          str_idz: str_bes,
                          str_fkx: str_jbn),
                       str_pda: INTEGER,
                       str_xqv: str_geb,
                       str_zdg: str_jke,
                       str_lan: str_ftx$0)])),
             bool
               (rec
                  (str_pug:
                   rec
                     (str_prf: str_uxo,
                      str_dbn: str_jxw$0,
                      str_kpb: str_gtv$0,
                      str_vgl: str_lca$0,
                      str_lhp: str_qgo,
                      str_nnk: str_jwo$0,
                      str_ezr: str_ago$0),
                   str_qmc: (str_yai , (btree(str_uii))),
                   str_mex: str_nrz$0) /=
                str_yra(INT)),
             (str_lql
              ,
              ((str_qib$0 , (id(str_wyl)))
               ,
               (prefix
                  (str_qmt /
                   UNION
                     (str_exg, str_daw, str_syj, str_vhc, str_iyn, str_pof,
                      str_dut, str_lms).
                   (MININT < str_xcf| str_gzr$0))))),
             [{NATURAL, str_zkj$0},
              bool(#(str_mtd).(INTEGER > str_kuu))'str_jof,
              [INTER(str_iws, str_kra, str_tel, str_okb, str_wgy).
               (str_hei /= NATURAL1| str_lfq$0),
               str_tqv]])
        END
      END
    ELSIF
      not
        (#(str_tlm).
         (#(str_mdz, str_gqv, str_tqc, str_clr, str_woo, str_nnu).
          (str_rkx$0 < str_mxn$0) =>
          !
            (str_dsa, str_zmx, str_wwq, str_wwh, str_hzp, str_uvx, str_yjt,
             str_ura, str_vbk, str_zju).
          (FALSE <<: BOOL => str_hmw$0 <: str_isj$0)))
    THEN
      str_kvm'str_hec
      :=
      left
        (rec
           (str_ank: {},
            str_iys: STRING,
            str_cjv: str_qbs,
            str_wph: str_kdn,
            str_pec:
            rec
              (str_fzg: str_qvm,
               str_bjn: str_egm$0,
               str_pnm: str_lsz$0,
               str_roc: MAXINT),
            str_ijc:
            { str_jhy, str_uti, str_pgn, str_ots, str_hbu, str_wie, str_ubo,
              str_owq, str_xdt, str_ywu
              |
              !
                (str_oyq, str_qvp, str_afa, str_zyo, str_fbv, str_yvk,
                 str_yxs, str_mio, str_nzy, str_myz, str_lmc).
              (str_jhc <: BOOL) })
           (str_uvs))
    ELSIF
      str_frv$0 * str_hil$0 <<:
      rec
        (str_ysv: str_wic,
         str_aza: str_tjo,
         str_exj:
         INTER
           (str_svp, str_njg, str_hld, str_unu, str_xyp, str_cin, str_hwf,
            str_gey, str_pso, str_zpb, str_tla).
         (!(str_tlr, str_lup, str_wfg, str_xor).(str_jsu$0 <<: str_rmz)| []),
         str_hgv: NAT,
         str_ihr: MAXINT,
         str_ktw: (str_cnj |-> str_hto))
    THEN
      str_zgn
        ({ str_kqb, str_wmp, str_uap, str_olh, str_vhs, str_zmx, str_awk,
           str_hjb, str_yjy, str_amf, str_lxd
           |
           str_woq$0 >= str_boj$0 or
           not
             (!(str_kwy).
              (!
                 (str_lcr, str_rch, str_yfu, str_pap, str_huf, str_xsj,
                  str_loh, str_rta, str_wlc, str_xyd).
               (str_nag > str_dgz or INTEGER < str_fer)) or
              1 /: NATURAL1) },
         struct
           (str_wkx: str_cjq,
            str_wqq:
            struct
              (str_enz: NATURAL,
               str_dvt: MAXINT,
               str_xdy:
               [rec
                  (str_lwp: str_rpp,
                   str_pbh: str_rhu$0,
                   str_zwy: str_fng,
                   str_rvm: str_ahv,
                   str_ujn: str_ydq$0,
                   str_vor: str_lwn$0,
                   str_cyk: str_kyo$0),
                ({str_wbm, FALSE, str_frk, str_wwr, [], str_qrn, STRING,
                  str_tgn}
                 ,
                 (str_zsj$0(INT)))],
               str_phj: str_oxf,
               str_mnr: INTEGER,
               str_ims: str_jnc$0,
               str_gaj: NAT,
               str_nyf: str_emc$0),
            str_udi: str_otz),
         (first
            ({FALSE,
              str_pnb$0,
              str_tep,
              str_ywu,
              { str_uwq, str_hwp, str_xan, str_pch, str_rqy, str_xuf,
                str_myn, str_ipg, str_oum, str_whu, str_rzu
                |
                #(str_mqw, str_boi, str_bew, str_kry, str_xnw).
                (#
                   (str_mlj, str_fvh, str_mgj, str_yrq, str_rlk, str_vgo,
                    str_vuu, str_agz, str_fxy, str_oct).
                 (!(str_gra, str_evm, str_zur).(NATURAL >= str_xip$0))) },
              str_egx,
              (min(str_ryn$0))})),
         [UNION(str_ddl, str_dpe, str_eia, str_cvn, str_xnn).
          (str_qgi /:
           {bool(str_abr = STRING),
            str_wto$0,
            [str_raw, str_nyq$0, bool(str_syv$0 <<: str_gez$0)],
            str_krw$0}|
           str_ydr$0)],
         bool
           (not
              (#
                 (str_btt, str_sdk, str_gme, str_pcb, str_cvt, str_vkf,
                  str_dvs, str_izy, str_qcv).
               (not(str_dli$0 : str_psy))) or
            not(str_mka$0 <: "str_wkf")),
         struct
           (str_hie: str_qzb$0,
            str_pyp: str_zgv$0,
            str_eov: str_htz,
            str_hyf:
            INTER(str_cgi, str_gxi, str_smg). ("str_csf" <<: TRUE| str_mlg$0),
            str_axq:
            struct
              (str_cbl: []'str_eyt,
               str_dum: {},
               str_hby:
               %
                 (str_zvo, str_ztt, str_tfd, str_ssw, str_gfy, str_tdz,
                  str_tpc, str_ddh).
               (not(str_ury$0 <<: FALSE)|
                { str_hlj, str_tdc, str_jwg, str_vpv, str_zdt, str_kkw,
                  str_diq, str_lfm, str_eki, str_kuw, str_qzz
                  |
                  str_jst$0 /: NAT1 }))),
         INTER(str_lph, str_com).
         (not
            (!
               (str_nkl, str_zqq, str_fll, str_wht, str_ueo, str_qkz,
                str_for, str_ewn, str_nhr, str_rag, str_yjy).
             (FALSE /<: str_crl$0))|
          {(STRING
            |->
            [str_duv$0, NATURAL1, {}, str_qeq, NAT1, str_lyz, TRUE]),
           {},
           str_xke$0,
           FALSE,
           INT}
            'str_vcm))
    ELSIF
      (str_pme$0 , (str_qej$0 <+ str_fdf$0))'str_rti :
      {{ str_azi, str_rso, str_vem | [] : str_nni }, TRUE, str_dfm}'str_pfz
    THEN
      WHILE
        !(str_pnr, str_ubn).
        ((str_vts$0 , str_hla$0) +->> bool(not(MININT > str_zhk))'str_lor =
         str_dxp)
      DO
        str_nas, str_pox, str_gcb, str_vqu, str_erv, str_ntp, str_awd,
        str_vxp, str_vqr, str_zvs, str_dki :(
          NAT1 =
          (INTER(str_fpl, str_fzw, str_uvz, str_btw).
           (str_gsp$0 <= str_fbd| str_crr$0) ;
           SIGMA(str_faq).
           (#
              (str_phg, str_sig, str_thn, str_grz, str_cax, str_bza, str_ote,
               str_apr, str_jcg, str_skj).
            (str_boy$0 : NAT1 => [] <<: str_wvf$0)|
            [str_ufd, str_ahq$0, str_wys, str_zsd$0, INT, TRUE]))
        ) ;
        str_mqq, str_eyu, str_wnk, str_sag, str_xss, str_oke
        <--
        str_cyg
          (PI(str_hqw, str_nsh, str_dgv, str_dtx).
           (str_tvd <= STRING|
            str_yhp$0 +->>
            %
              (str_hvf, str_acx, str_znl, str_iwz, str_tnj, str_iyl, str_bgu,
               str_bfb, str_tec, str_kea, str_gwt).
            (MININT /<: str_gjx => str_xun$0 /= str_tku$0|
             rec
               (str_koq: str_kxz,
                str_hxa: str_pfc,
                str_omr: str_ubo,
                str_dif: MAXINT,
                str_tcw: str_vcd,
                str_vzp: NATURAL,
                str_gqn: str_jfr)
             |->
             str_asy$0'str_rwo)))
      INVARIANT
        !
          (str_wlk, str_ixr, str_dkx, str_ofh, str_zia, str_tdf, str_irq,
           str_nqg).
        (not
           (!
              (str_wsv, str_aam, str_swe, str_kqr, str_law, str_wym, str_jck,
               str_ufh, str_rgg, str_ulm).
            (str_jzw <= str_idm))) &
        #(str_ovq, str_hdt, str_zog, str_llt).
        (#
           (str_urk, str_dwl, str_pkq, str_wjg, str_xhj, str_zhy, str_pun,
            str_wml, str_trg, str_cjs, str_dui).
         (#(str_gvl, str_iqv, str_hof, str_wpw, str_vcx, str_kpb).
          (NATURAL1 /<<: STRING)))
      VARIANT
        SIGMA(str_dfh, str_vgd).
        (str_aoy :
         rec
           (str_nhu: [],
            str_cya: str_liw$0,
            str_nfo: BOOL,
            str_lwv: str_jej,
            str_wvj: BOOL,
            str_eml: {},
            str_epz: 199,
            str_cuc: {})|
         str_mkq)
          'str_scw
          'str_aab
          'str_qif
          'str_bvi
      END
    ELSIF
      str_vrw$0 - str_kru$0 <<:
      { str_mof, str_ceh, str_aeb, str_smx, str_ari, str_iry, str_tkz
        |
        !
          (str_nza, str_hms, str_man, str_lma, str_fkx, str_qzd, str_ciz,
           str_nhl, str_gyo).
        (str_fzf$0 > NATURAL1) &
        not(#(str_ryj, str_cyq, str_ick, str_gew).(str_iik$0 < str_udh)) }
    THEN
      LET
        str_gqm, str_koy, str_rkc, str_dvx, str_xbe, str_bqv, str_mha
      BE
        str_vpk
        =
        (str_zjx$0 \|/
         struct
           (str_xcf:
            {[],
             str_hdk,
             STRING,
             str_lso,
             (str_zxq , str_akz$0),
             str_fpd$0,
             str_cyv,
             SIGMA
               (str_lrg, str_joy, str_bqv, str_wls, str_oyt, str_avp,
                str_pmn, str_oqn, str_wme, str_iih).
             (str_hui = str_kod$0|
              rec
                (str_mdy: FALSE,
                 str_dgb: str_imk,
                 str_zhm: str_kzg,
                 str_hvk: MAXINT,
                 str_whx: str_rvx$0,
                 str_amn: str_fyx$0))}))
          (str_aki)&
        str_owe
        =
        rec
          (str_rks: str_hnz$0,
           str_bjy: str_oco$0,
           str_ipa: NATURAL1,
           str_dwn: str_utm$0,
           str_oen: bool(not(not(STRING /= str_bfs$0))),
           str_cto:
           {str_hox$0,
            str_zpa$0,
            SIGMA(str_ggp, str_asv, str_nkh, str_qhu, str_ljt).
            (FALSE /<<: TRUE| str_nqu)},
           str_ibd: str_fjo$0)&
        str_lco
        =
        rec
          (str_etv: str_gfd$0,
           str_sxl: ((str_nyf$0(FALSE)) |-> str_hea$0),
           str_juj: bool([] , MININT'str_hyo /<: BOOL))&
        str_svh
        =
        { str_lfj
          |
          !(str_iaj, str_gqz, str_dbz).
          (#
             (str_zof, str_tjo, str_sjk, str_bgq, str_eis, str_jjt, str_xrj,
              str_xdt, str_lxa).
           (#(str_dea, str_pwz, str_ytf, str_iuf, str_vpe, str_jhh).
            (#
               (str_axp, str_uct, str_uoz, str_xht, str_bhi, str_htm,
                str_rmx, str_fok).
             (not
                (!(str_eoh, str_mri, str_law, str_pds, str_mmw, str_due).
                 (str_dvg < str_tlv)))))) }&
        str_vdi
        =
        (infix(closure1(FALSE'str_kna'str_rsn <+ (str_hhf$0 , str_erz))))
          'str_jth&
        str_dsq
        =
        bool
          ({str_hey, str_kjd, str_nqv$0, str_tmr$0, str_rzu, str_dre, str_oof} >
           {str_yik, str_awz, str_qnz$0, []}'str_fwz'str_ovy(str_ebo$0))&
        str_wab
        =
        {{ str_jrp | not(not(str_rqz$0 > str_hyz)) },
         str_uyl$0,
         60,
         rec
           (str_ugi: str_mia,
            str_ary: MININT,
            str_uik: str_tgg$0,
            str_exw: str_prd,
            str_hdq: str_qan,
            str_nno: { str_wpc, str_xgv, str_efu | INTEGER > str_vum$0 },
            str_yde: str_fyv,
            str_fcr: str_fia)
           'str_ysy}&
        str_rkz
        =
        str_mwb$0
        |->
        {MAXINT,
         bool
           (#(str_lej, str_qnk, str_pvc, str_fdk, str_rgm, str_uur, str_ltr).
            (#(str_rmy, str_sgv, str_gct, str_edp).
             (str_yhi$0'str_jcc /<: INT)))}&
        str_xye
        =
        { str_zji, str_oha, str_fxb, str_cmi, str_xdp, str_vkd, str_bgt,
          str_vii, str_npe, str_asj
          |
          !(str_jle, str_sxv, str_rdq, str_mrs, str_iye, str_ank, str_ypx).
          (!(str_myb, str_zeg, str_ohd, str_iwg).
           (#(str_vlx, str_rcy, str_plc, str_gtv, str_iho).
            (str_lqn$0 <
             [str_dnr,
              str_ywr$0,
              str_ptr,
              FALSE,
              (str_zvx$0 , str_jnm),
              str_fdr,
              str_cks,
              str_dcm]))) }&
        str_muq
        =
        { str_yne, str_yza
          |
          !
            (str_jmw, str_bac, str_hmf, str_eez, str_lqn, str_ajs, str_sfg,
             str_vmd, str_ezq).
          (!(str_yqw, str_bqy, str_bey, str_hiv, str_atv, str_aeu, str_uje).
           (str_lxq > str_iju)) }
          ([(str_qbv - str_rxt$0), (MAXINT ** BOOL)])
      IN
        IF
          not
            ({} <= str_wqb or
             !(str_dxa, str_puo, str_sfp, str_psx, str_lis).
             (not(str_jxl /<: str_yqc$0) or !(str_yug).(str_fjw$0 <= BOOL)))
        THEN
          str_rxe, str_zun, str_unh, str_ula, str_oqe
          ::
          (NAT , str_yik$0)
            (SIGMA
               (str_abo, str_elk, str_gsa, str_uwa, str_cvt, str_jxo,
                str_spw, str_bou, str_nik, str_zoj, str_axy).
             (str_wrb /<<: NATURAL| str_kzt$0(NATURAL1)) /\
             { str_tde, str_vmn, str_wad | NAT1 <: [] & STRING > str_uzr$0 })
        ELSIF
          !
            (str_hwf, str_atd, str_nqp, str_bea, str_xzn, str_lyf, str_bem,
             str_gqz, str_ymg, str_okm, str_lxc).
          (str_eoz /<: INTEGER) =>
          [MAXINT,
           INT,
           BOOL,
           str_sai,
           str_eks,
           rec
             (str_pgm: str_ehy$0,
              str_mzk: str_czp$0,
              str_ydl: str_qlb,
              str_cgj: str_hqk,
              str_auw: {},
              str_evw: str_kuz$0,
              str_hey: str_det$0)] >
          union(str_uwy$0 -->> str_evu$0)
        THEN
          str_cpl 
            (
              bool
                (str_ccf$0 /=
                 { str_puv, str_qfu
                   |
                   (!
                      (str_bsu, str_yhz, str_yxr, str_ypu, str_gue, str_jyf,
                       str_lcg, str_eqp, str_fwu).
                    (str_ajy$0 /<: str_rdy) &
                    str_apb /= str_cvj$0) <=>
                   (str_jiq <= MININT & str_bhv$0 /<: str_asw$0) })
            )
            (
              struct
                (str_ajw: { str_rao | str_ewm$0 : FALSE },
                 str_fde: str_itg,
                 str_hbh: NATURAL,
                 str_drq: str_gge$0,
                 str_mxu: str_sgn$0,
                 str_lgb:
                 SIGMA
                   (str_pjn, str_pfy, str_uze, str_kke, str_ery, str_ezz,
                    str_pkk).
                 ([] >= str_etp| str_yxx$0),
                 str_swj: str_cru$0,
                 str_erk:
                 struct
                   (str_wtk: str_dsg, str_bxd: NATURAL, str_cca: str_zvy$0))
                ([str_eyu$0, str_ldv$0, str_dij, str_nkw, str_hug$0,
                  str_bbj$0]
                   [MININT])
            )
            (
              {str_ksr$0,
               str_agq$0,
               {str_kwa, str_ndj, str_tfd$0, str_awr, str_dqv$0},
               str_ujk$0,
               (INTEGER |-> (str_zyg$0 , str_uju)),
               str_fdy}
                (rev(union(TRUE)))
            )
            (
              { str_zlg, str_hgu, str_kwo, str_efg, str_kwo, str_rpt,
                str_zqu, str_vjp, str_syu, str_hwj
                |
                str_rdj$0 <= str_yvm & str_yva$0 /<: 2 }
              |->
              {INTER
                 (str_ywr, str_bir, str_tpa, str_erd, str_lcl, str_aum,
                  str_zyu, str_hvl, str_wsj, str_jxu).
               (!
                  (str_mvq, str_udv, str_zbb, str_uzj, str_nyy, str_rcg,
                   str_kxx, str_qav, str_tfc).
                (str_xup$0 <: str_pey)|
                str_mte'str_zwp),
               FALSE}
            )
            (
              iseq
                ([8,
                  (({ str_uzp | str_fzl$0 /: str_rme$0 }
                      (struct
                         (str_pbq: str_iky, str_jox: MAXINT, str_wsu: TRUE)
                       |->
                       str_jou))
                   ,
                   INT),
                  TRUE,
                  str_kwk$0,
                  str_nhq$0,
                  str_nrv$0])
            )
            (
              str_njk
              |->
              (str_pus
                 (bool
                    (not
                       ({MAXINT, str_qov$0, ([] , str_mql), str_alq$0} /<<:
                        str_mba))))
            )
            (
              [str_yqp$0, NATURAL1] |>>
              struct
                (str_tww:
                 { str_dxh, str_feh, str_jax, str_gwc, str_lzy, str_ocu,
                   str_jzz, str_nuq, str_nhs, str_lrr
                   |
                   str_oog$0 /: INT },
                 str_nyu:
                 { str_kjy, str_pnl, str_nag, str_zbl, str_gmd
                   |
                   not(str_pjn$0 /<: str_pht) },
                 str_taz: MAXINT)
            )
            (
              bool
                (not
                   (not(MAXINT <<: {} or str_off$0 = NATURAL1) &
                    !(str_fod, str_lrf).(FALSE /= str_zbb)))
                'str_aua
            )
            (
              [str_zbl, str_xhj, str_eep, bool(43 /<: str_zzm)]
              ,
              (((str_gdc$0 |-> []) |-> (closure1(str_qzp))) * FALSE)
            )
          
          :=
          INTER
            (str_jke, str_fna, str_tap, str_wvl, str_xej, str_afl, str_tyn,
             str_oeh).
          (!
             (str_ifj, str_cpn, str_vvf, str_mil, str_kgn, str_tub, str_bcn,
              str_sss).
           (str_kbh >= str_avz)|
           bool
             (!
                (str_aui, str_oxa, str_did, str_ttn, str_ire, str_sor, str_mkd).
              (str_lnm = str_xbf or not(str_kbz$0 <: str_egd)))
             'str_gtr)
        ELSIF
          not
            (#(str_eyx, str_uus).
             (!
                (str_azs, str_kmo, str_esn, str_srl, str_cnr, str_hng,
                 str_nwy, str_skc, str_eec, str_oay).
              (#
                 (str_gmv, str_ily, str_ltr, str_crk, str_uiv, str_enq,
                  str_uko).
               (not(str_slt$0 /: {})) &
               #
                 (str_kav, str_mkp, str_wus, str_dnj, str_aff, str_ald,
                  str_hny, str_wla, str_huz, str_ory, str_rcz).
               (str_gsu >= str_vbw$0))))
        THEN
          str_mxc, str_vhp, str_gti, str_nwq, str_wtd, str_mbn
          :=
          rec
            (str_leh: NAT1,
             str_mno:
             [(bool(str_kjp$0 < str_ncy$0)(str_tpu)),
              rec
                (str_ipw: str_zau$0,
                 str_cfe: FALSE,
                 str_byk: str_nmy$0,
                 str_zhl: str_rpd$0,
                 str_ikp: str_ssh$0),
              rec
                (str_rmc: str_nfs,
                 str_qna: str_lqj$0,
                 str_pbz: str_ors,
                 str_rpr: MAXINT,
                 str_sol: [],
                 str_moc: str_uvc$0)],
             str_tvt: str_vin,
             str_nto: str_irz,
             str_mpk: NAT1)
            (BOOL)
        ELSE
          str_sjm, str_xbn, str_imc, str_awx
          :=
          (str_sih$0 *
           %
             (str_pha, str_ley, str_bag, str_kpz, str_izd, str_ois, str_ftz,
              str_bec, str_aar, str_yik).
           (not((str_nsr$0 ; str_wgg) > MININT)| str_nhc))
            (rec
               (str_grs: str_mns,
                str_tsp: str_vge$0,
                str_kpn: str_wsy,
                str_zup: str_row$0,
                str_kzh: str_mwv,
                str_flo: str_zjp$0,
                str_bhd: str_wnt$0,
                str_jqs: str_mar$0))
        END
      END
    END
  END;

  str_rgi, str_lzh, str_iad, str_gvp <-- str_pah (str_bdb) =
  SELECT
    !(str_tsn, str_sfn, str_xms, str_pdq, str_rnn, str_tse).
    (not
       (#(str_fpu, str_pik, str_yrg).
        (!(str_ipx, str_sav, str_iup, str_igj, str_zje, str_mek, str_fdq).
         (!
            (str_xue, str_svh, str_uhi, str_iqh, str_trp, str_wyi, str_guv,
             str_eyg, str_otw, str_jpr).
          (!
             (str_duj, str_atv, str_izn, str_qez, str_obz, str_exp, str_jhr,
              str_dqp, str_pdj, str_zya, str_pcf).
           (str_hzo /= MININT))))))
  THEN
    ASSERT
      (str_pej$0 <: str_apw or str_fgg$0 <: str_qpv) <=>
      str_kwr$0 /<:
      rec
        (str_wlx: str_hga$0,
         str_ada: str_kxz,
         str_dva:
         PI(str_ukk, str_kai, str_wzh, str_mxj).
         (str_ywl$0 <= str_eek| str_xnz$0),
         str_cij: str_kog,
         str_kft: NAT1,
         str_anz:
         rec(str_rri: INT, str_nyb: NATURAL1, str_vzz: (str_dcv , str_lyz$0)),
         str_jqp: NATURAL)
    THEN
      ASSERT
        "str_cph" <=
        { str_dvn, str_nyg, str_szv, str_zcw | str_ysp /<: str_sha } <=>
        struct(str_jcj: (top(str_mye))) - str_mjj /: str_gyz$0
      THEN
        str_bwp, str_jiw, str_qkr, str_yko, str_ahl, str_grs, str_emy
        :=
        bool
          (!(str_erc, str_uup, str_pfl, str_vti, str_csr).
           ((str_dhv ** NAT1) |>
            PI(str_qjt, str_fnm, str_mod, str_nux).
            (str_iez$0 /: STRING|
             { str_mgh, str_cpg, str_hbf, str_bgm, str_lsk, str_pvh, str_lbc,
               str_wum, str_ref
               |
               str_wff$0 = str_lzb }) <
            str_mig))
      END
    END
  WHEN
    #(str_eph, str_kfk, str_wmp, str_yfq, str_yfh, str_ccd).
    (bool([] /= str_kbj or str_dcz : str_fta) <
     { str_xpy, str_afv, str_edb, str_xdk, str_dky, str_fgt, str_nul, str_wxo
       |
       !
         (str_nxd, str_udj, str_hgh, str_nub, str_obd, str_dxe, str_qfs,
          str_euw, str_ahv, str_lmf, str_zxy).
       (NAT <<: str_lil) }
       ~)
  THEN
    str_syu, str_aod, str_ksg, str_jdr
    <--
    str_vep
      (bool
         (!
            (str_lyy, str_cgx, str_ksz, str_fcn, str_hvw, str_yzo, str_fid,
             str_xys, str_ysg, str_hhj, str_fwa).
          (struct
             (str_pkq: str_vjc$0,
              str_ynv: str_tar,
              str_iph:
              [str_jsd$0, 76, str_moe$0, str_jhp$0, MININT, BOOL, str_rcv$0,
               TRUE],
              str_rld: str_xhd$0,
              str_ivy: struct(str_tfm: str_hwi),
              str_riy: BOOL,
              str_ypt: str_ebz$0,
              str_zhd: str_vox)
           ,
           str_xig >=
           INT)),
       [bool(not(str_bmv < str_sqr <=> {} = str_kgd$0)),
        NAT,
        MININT,
        (rec(str_rdx: str_gpl$0) +->>
         {str_vah, STRING, str_mxn$0, NAT1, INTEGER, str_auh$0, str_glk$0,
          str_vgn$0})],
       { str_vpb, str_atn
         |
         not
           (not(str_oka : NAT) =>
            (str_wek$0 > INTEGER or
             #(str_koy, str_msg, str_zxh, str_odj).
             (str_czc$0 <<: str_kze or str_whw < str_wjn))) },
       ((str_jsh
           ({ str_asp, str_iyr, str_kod
              |
              not(#(str_tbz, str_xut, str_dyk, str_hvd).(str_rkg$0 > MININT)) }))
          (rec
             (str_lqt: NATURAL,
              str_bop: str_egd$0,
              str_eqn: str_yua$0,
              str_rzh: str_nea)))
         'str_qrz,
       struct
         (str_lsq:
          { str_srr, str_sau, str_kdr, str_noh, str_onf, str_boc, str_zkx,
            str_cll, str_kak, str_imv, str_fnz
            |
            not(NAT <: str_qbq) },
          str_wdb: str_ofq,
          str_zth: NATURAL1,
          str_glk: str_eqx,
          str_krt: MAXINT,
          str_gag: NAT1,
          str_ejr: bool(#(str_atj, str_zgg).(str_gee$0 /<: str_jic))),
       (union
          (rec
             (str_adf: FALSE,
              str_eyg: str_xrt$0,
              str_uwk:
              PI(str_ayy, str_hsi).
              (str_zpp <= str_kwn$0| (bin(str_cbs))(prefix(NAT1))),
              str_cdu: STRING,
              str_kgx: str_hcv,
              str_pcb: STRING,
              str_kay: INTEGER,
              str_kwp: str_ybc)))
         'str_vgr,
       {str_tpu$0,
        [],
        [],
        str_fgk,
        str_fbr$0,
        struct(str_ukl: str_hon),
        (tree
           (struct
              (str_wcl: {str_ybu, str_gyl$0, str_quw, str_kmd}'str_ljd,
               str_eqp: bool(str_ijw <<: []),
               str_wgy: str_qlz,
               str_fnn: str_roz$0,
               str_ual: TRUE,
               str_phz: NATURAL))),
        str_qxp},
       (((tree
            ({ str_eox, str_udu, str_hfz, str_qnq, str_osw
               |
               str_jht <: str_zfs$0 }))
           (str_uvc$0'str_dig)) >->>
        [NATURAL,
         str_usv,
         str_eli$0,
         (NATURAL |> str_kqk),
         str_pxe$0,
         str_ynz$0,
         TRUE]),
       rec
         (str_pfh: str_apl$0,
          str_pbh: str_bqd,
          str_zbv:
          rec
            (str_jij:
             PI
               (str_dfa, str_oka, str_hnm, str_guq, str_ryr, str_fsz,
                str_pbk, str_baj).
             (str_bgd$0 <: str_shf| str_sen$0),
             str_jpn:
             (str_zkx$0 *
              {PI(str_fqz, str_ura, str_mll, str_tqo).
               (str_mew /<: str_ojr$0| str_qaa$0),
               MAXINT,
               struct
                 (str_rfs: INTEGER,
                  str_brk: "str_upy",
                  str_fex: NATURAL,
                  str_pyr: STRING,
                  str_iau: BOOL,
                  str_ztt: str_xnx,
                  str_tap: {})}),
             str_bwi: "str_lzp"),
          str_jpd: str_yol,
          str_ehk: str_xaq))
  ELSE
    SELECT
      !
        (str_zro, str_qgl, str_mjc, str_agb, str_xss, str_dau, str_xeg,
         str_qun, str_ver).
      (str_vce /=
       [str_lro,
        str_rzo,
        [NATURAL, (str_bqr$0(str_kzb)), str_ojb],
        str_dcb,
        {str_ffd, NATURAL1, INT, {str_fop, TRUE}, str_yny}])
    THEN
      PRE
        #(str_upu, str_gay, str_cbu, str_cdk, str_oev).
        (!
           (str_bjf, str_hln, str_lah, str_yry, str_cps, str_qlo, str_lwl,
            str_yyg).
         (not(not(not(str_xlh$0 /= str_baf$0) or not(str_ljj <: INT)))))
      THEN
        str_wul, str_ngo, str_pvu, str_nvm, str_ufq :(
          str_xjv$0
            ({INT,
              str_xad,
              {str_vvt, str_bnj$0, 8, str_yrt, str_itn$0},
              str_ier$0,
              str_hzj$0,
              INT,
              str_ouh$0,
              str_rej'str_eic}) /:
          rec
            (str_jtn: str_och,
             str_gwn: INTEGER,
             str_xiy: str_zng$0,
             str_ldy: str_feo$0,
             str_fnf: str_ldx,
             str_mmj: str_kpm,
             str_hpq: [])
          ,
          str_srk$0
        )
      END
    WHEN
      #
        (str_dln, str_evj, str_yew, str_lbm, str_rrs, str_xcy, str_wnl,
         str_bpn, str_mnz, str_bse).
      (NATURAL >=
       top
         ({UNION(str_vaj). (str_qgp$0 <: str_tid$0| INTEGER), str_kao} +->>
          bool(9600 /<<: MININT)))
    THEN
      IF
        !
          (str_zrt, str_xnb, str_xnx, str_ykr, str_vat, str_mdo, str_gcq,
           str_kfu).
        (str_tvv$0 <: BOOL) <=>
        not
          (#(str_ady, str_wdl, str_clk, str_wsk, str_zty, str_wwm).
           (!(str_mci).(str_ilm < str_rna <=> INTEGER > str_mzq)))
      THEN
        str_kjn, str_wrw, str_pwf, str_zwf, str_nqq, str_eni, str_kha
        <--
        str_hik
          (struct
             (str_zjn: str_fls$0,
              str_adu:
              SIGMA(str_jjf, str_big, str_jxy, str_vpg).
              (#(str_yqa, str_ale, str_iqj, str_kkc, str_cbj, str_skn).
               (str_jts <<: FALSE)|
               str_ean <<| str_mtg),
              str_vqn: str_foh,
              str_srd:
              struct
                (str_xuk: (card(str_fwi)),
                 str_eac: (str_wtm , str_vek$0),
                 str_shh: str_wys,
                 str_kbj: str_kcc$0),
              str_rkn: str_saa$0),
           { str_frq, str_uzn, str_wts, str_wdb, str_xkk, str_qkp, str_asr,
             str_mwg
             |
             3 <<: str_vrd <=>
             struct
               (str_gry: NAT,
                str_ujo: str_dyk$0,
                str_pal: NATURAL,
                str_hrx: str_hnx,
                str_mut: str_pov$0,
                str_nso: str_sit,
                str_fyf: str_fza,
                str_vpu: str_eqg$0) :
             (PI
                (str_jru, str_exl, str_kau, str_rvc, str_wcg, str_uho,
                 str_ups, str_vun, str_cnx).
              (str_ppy <= MAXINT| str_aep$0) +->
              MAXINT)
               'str_nkq },
           rec
             (str_etq: (str_unv |-> (MAXINT |-> bool(str_zvc$0 > NATURAL1))),
              str_fsk:
              (NATURAL1 |-> {str_moq$0, FALSE, BOOL, str_eob$0, FALSE}),
              str_gsz: str_thw$0,
              str_byy: str_zzd,
              str_bmy: str_ogz,
              str_mwc:
              rec
                (str_ink: INTEGER,
                 str_etz: str_ppk,
                 str_gne: FALSE,
                 str_cax: NATURAL1)),
           struct
             (str_lbv:
              struct
                (str_fai:
                 struct
                   (str_icz: str_cob$0,
                    str_khx: str_cuh$0,
                    str_ace: str_dnj$0,
                    str_mws:
                    {BOOL'str_jav,
                     str_icg$0,
                     NAT,
                     str_rzf$0,
                     str_prr,
                     str_zjb,
                     FALSE},
                    str_wsi: (NATURAL1 , str_iak),
                    str_vxz: BOOL),
                 str_xud: TRUE,
                 str_kwd:
                 struct
                   (str_dky: str_cox,
                    str_kyh: TRUE,
                    str_xzo: STRING,
                    str_ixj: str_rnm$0,
                    str_gxu: MININT,
                    str_yhy: str_woe$0),
                 str_sbk: str_hrq$0,
                 str_zud: [],
                 str_ehe: str_aty$0,
                 str_fff: str_epz$0)),
           rec
             (str_lfe: (NATURAL1(INTEGER)),
              str_epc:
              (rec
                 (str_xji: MININT,
                  str_kuq: {str_mbw$0, NATURAL, str_lun$0, [], MAXINT},
                  str_kbc: str_jya)
               |->
               struct
                 (str_qss: str_dhb,
                  str_eay: str_foo,
                  str_aqi: MAXINT,
                  str_nkt: { str_fjm, str_lky | str_zwm$0 /<<: NATURAL },
                  str_lca: str_mjq$0,
                  str_upy: str_daq$0,
                  str_lnk: NATURAL))),
           [bool
              (not
                 (!
                    (str_cin, str_lfb, str_gro, str_tcf, str_iiy, str_tba,
                     str_dng, str_nvb, str_nbm, str_kps, str_fhi).
                  (NATURAL1 <<: {str_zox'str_emn}))),
            {}],
           bool
             (not
                (not
                   (#
                      (str_rmp, str_ldq, str_ebj, str_kzv, str_rnr, str_vcx,
                       str_jaf, str_wdy, str_hmg).
                    (not
                       (!
                          (str_kok, str_mje, str_cfk, str_apd, str_vnt,
                           str_drw, str_uos, str_vmh, str_atw, str_zfa).
                        (str_unw$0 > STRING) <=>
                        NAT <= str_gaq))))),
           {rec
              (str_wfu: {str_uzt$0, NAT1, str_ntr$0, [], str_izr},
               str_gzr:
               rec
                 (str_iti:
                  { str_mqg, str_lgp, str_nox, str_yfo, str_scn, str_kic,
                    str_rhz, str_wel, str_uzx
                    |
                    str_dhw$0 /= str_rhz$0 },
                  str_igq: str_mam$0,
                  str_qgi: str_sml$0),
               str_oac: str_wod,
               str_nop: {}),
            (str_wyc$0 * str_och$0),
            {str_nwm, MAXINT, {}, str_juo$0, str_ows$0}},
           struct
             (str_aat:
              [({} - str_zkk$0),
               rec(str_qoj: str_dfm$0, str_oio: STRING, str_dhx: str_evl$0),
               (NAT , str_bdo$0),
               (str_hsy$0 >+> str_xbi$0),
               (str_vcd$0 , str_foo)]),
           { str_evt, str_iaz, str_jds, str_jgl, str_vxe, str_cjo, str_upo,
             str_saa
             |
             #
               (str_tdv, str_hqw, str_axw, str_hkz, str_tmd, str_nvo,
                str_jsw, str_xdx, str_wbr).
             (#
                (str_geg, str_oyp, str_vtc, str_kcq, str_bls, str_tlc,
                 str_czy, str_jbr, str_upt, str_uiy, str_yxb).
              (bool(str_nlb /<: str_qyn$0) /<:
               str_hts$0 |>> (str_gcb$0(str_ozk$0)))) })
      ELSIF
        str_gxb |-> (infix(INT |-> str_ldz$0)) /=
        { str_rty, str_jwl, str_yyu, str_iag, str_peb, str_xmv, str_nwb,
          str_oap, str_iyq
          |
          str_wxe /: NATURAL }
        |->
        [str_mmo, STRING, str_cex, str_bpe, []]
      THEN
        str_eth'str_ujj
        :=
        UNION
          (str_pth, str_abq, str_pnh, str_uas, str_aqx, str_xsn, str_elg,
           str_zie).
        ("str_vzv" , FALSE <= [((btree({str_azg, str_uor})) |-> NAT)]|
         str_irc)
      ELSIF
        not
          (#(str_llb, str_thv, str_ddg, str_vvu, str_hfl, str_rke).
           (#(str_usf, str_bkk, str_ezz, str_dhy, str_nxl, str_ise, str_sms).
            (!(str_uvz, str_gym, str_nnk, str_yfp, str_pkl, str_zve).
             (str_tdr$0 <= str_lbp$0)) =>
            #
              (str_afk, str_edm, str_huj, str_aud, str_zng, str_tvl, str_qzn,
               str_jpp, str_keg).
            (not(TRUE > str_kur))))
      THEN
        str_ypy'str_wla
        :=
        rec
          (str_uwo:
           rec
             (str_sue: str_gdn,
              str_oqb: str_akb,
              str_rsz: (rel(str_hxv)),
              str_ipi: []),
           str_gsi: str_onf,
           str_gaq:
           struct
             (str_yfp: str_gid$0,
              str_slc: str_ayi,
              str_jfr:
              { str_tst, str_tql, str_urm, str_pfd, str_pxa, str_jli,
                str_cxp, str_qun, str_vph
                |
                MININT = BOOL },
              str_ijx: NATURAL1,
              str_cnb: NATURAL1,
              str_lcf: NAT1),
           str_lky: (FALSE +-> "str_uci"),
           str_jye: (str_umc(str_jzr)),
           str_dme: MININT)
      ELSIF
        { str_lqf, str_exq, str_hrb, str_jev, str_lse, str_ajp, str_cta,
          str_kpt
          |
          str_rnw : str_hlb$0 } =
        str_wwe , str_xos <=>
        #
          (str_kco, str_hix, str_zsv, str_ibf, str_gxc, str_mta, str_jkn,
           str_klp, str_ybr).
        (#(str_jie, str_avd, str_wcq, str_nei).
         (#
            (str_adi, str_oxx, str_bma, str_kmt, str_hab, str_bxc, str_ckv,
             str_gak, str_mqq, str_vmk, str_ffn).
          (str_gbl$0 <: str_kmh)))
      THEN
        str_mzh
        <--
        str_qgb
          ((rev
              (succ
                 (PI
                    (str_hwa, str_mqg, str_ign, str_lsv, str_avp, str_xps,
                     str_ezt, str_gcg, str_juv, str_bky).
                  (!
                     (str_frp, str_lmf, str_slk, str_esm, str_nei, str_ynn,
                      str_jda, str_lde, str_tmm, str_xzf, str_jxd).
                   ({} <<: INT or str_vej : STRING)|
                   bool
                     (!(str_apv, str_civ, str_uqf, str_mqv, str_ktx).
                      (STRING < str_rdb$0)))))),
           { str_vxn, str_whd, str_gvz, str_psw, str_gez, str_znm, str_rfl,
             str_bnd, str_cuh, str_lyi, str_rqh
             |
             (str_xzp /<<: str_dhv =>
              INT /= rec(str_cyd: INTEGER, str_yvu: str_otn$0)) <=>
             not(not(str_bio /<: NATURAL1)) },
           (rec
              (str_vej:
               { str_lbl, str_xhy, str_oxh, str_zwu, str_xha, str_yvm,
                 str_mtc, str_qag, str_wiv, str_aha
                 |
                 #(str_oaf, str_orb, str_pme, str_gmm, str_nbu).
                 (#
                    (str_ezg, str_tna, str_qet, str_zfp, str_gdg, str_qrh,
                     str_jmk, str_dxl, str_bxz, str_uta).
                  (str_npr = MININT)) },
               str_yyt: str_igm$0,
               str_eke: str_kpw$0'str_mcq) ><
            FALSE'str_zyb),
           ((NATURAL1 /|\ BOOL)
              ((min(bool(not(str_svv = str_zbg))'str_pjh))(str_oed$0))),
           bool
             (#(str_hvl, str_ioq, str_olw, str_tzy, str_rrk, str_hqg).
              (str_dcl$0 /\ str_rrj$0 /= str_nga$0 &
               #
                 (str_hev, str_kkp, str_ryn, str_lsn, str_mnx, str_qfs,
                  str_gjn).
               (str_bcn$0 /: str_ygd$0 & str_cda /: MAXINT))),
           bool
             (#
                (str_gji, str_lmd, str_snr, str_emz, str_ekb, str_sqr,
                 str_ftf, str_eei, str_thq, str_iad).
              ([] <<: str_bsm <=> not(not(str_fyx$0 < NAT))))
             'str_gdp,
           UNION
             (str_fkp, str_xyt, str_pdz, str_hix, str_oxz, str_mnm, str_tgp,
              str_jeo, str_feb, str_xnk).
           (!(str_zth, str_ncw, str_fsr, str_irg).
            (str_qky(str_ykk$0) > str_fea$0)|
            {str_pto$0,
             { str_mub, str_gps, str_zbv | str_wpt = str_fum$0 },
             str_jjj,
             str_uos$0,
             str_zoq,
             NATURAL}),
           struct
             (str_ueo: INTEGER,
              str_zte:
              { str_mqo, str_pad, str_iqa, str_ozv, str_cty, str_tmj,
                str_yeq, str_vvs, str_rqo
                |
                {} /<<: NATURAL },
              str_jjt:
              ((left
                  ([str_yjz,
                    (NAT ** NAT1),
                    str_opf,
                    str_vux$0,
                    str_mkg$0,
                    str_mud,
                    MININT])) /\
               struct
                 (str_ncq: str_hak,
                  str_meo: MININT,
                  str_nfg: FALSE,
                  str_fsd: FALSE,
                  str_lub: {},
                  str_hcf: NATURAL1))),
           ((rec
               (str_stl: str_tmn,
                str_dfx: str_lon,
                str_bnb: str_kry,
                str_miz: str_tau,
                str_mny: str_fbv,
                str_tro: str_xud$0)
             ,
             str_viz)
              'str_bsc |>>
            (str_kym
             |->
             struct
               (str_egi: str_ext,
                str_adg: NAT,
                str_lcy: NATURAL1,
                str_pje: str_gui$0))
              'str_ahe))
      ELSIF
        not
          (not
             (struct
                (str_zpy: NAT,
                 str_sdx: MAXINT,
                 str_zdd: str_pgz$0,
                 str_mhg: str_fum$0,
                 str_dch: str_oia$0,
                 str_sbr: bool(str_sui$0 > STRING))
              |->
              [str_zmy, NATURAL, str_jog$0, str_ywo, str_psq$0, str_wou$0,
               str_xip] /<<:
              str_gjc$0))
      THEN
        str_mmq 
          (
            [str_djh,
             {NAT1, TRUE, NATURAL1, MININT, FALSE, str_ddv$0, str_xfx, NAT}
               'str_rxx,
             str_gfx,
             FALSE,
             {{ str_mai, str_ooa, str_sjx, str_hxo | str_zhq /<<: INTEGER },
              PI(str_wmc, str_dsl, str_vpw, str_ftq).
              (str_maf$0 = NAT|
               struct
                 (str_mvb: NAT,
                  str_qxm: STRING,
                  str_zgg: NATURAL1,
                  str_uey: MAXINT,
                  str_pok: NAT1,
                  str_pmg: INT)),
              str_hpo$0},
             INT]
          )
          (
            rec
              (str_tvo: rec(str_jhw: (size(MININT))),
               str_vnt: (NAT1([])),
               str_sto:
               [TRUE,
                rec
                  (str_wxj: NAT1,
                   str_tcd: str_ekt,
                   str_xaz: str_ygo$0,
                   str_wwh: str_ohn$0,
                   str_ftg: str_irg),
                str_chf$0,
                struct
                  (str_mrm: str_gkn$0,
                   str_ldm: str_kob$0,
                   str_sjl: str_egg,
                   str_kzm: NAT,
                   str_bbe: str_uoz,
                   str_zzi: str_xnx),
                str_upn,
                STRING],
               str_xpw: str_yzt)
          )
          (
            bool
              (!(str_otg, str_bpn, str_nmf, str_bwn).
               (not
                  (#
                     (str_pdy, str_riy, str_lbc, str_jxj, str_oif, str_gzr,
                      str_qnu, str_coa, str_xlh, str_poe, str_ewp).
                   (str_xsy$0 <<:
                    {NATURAL, TRUE, str_zqo, str_haa$0, str_smz, str_lno$0,
                     str_gqc$0, str_hlc$0}
                      'str_lph))))
          )
        
        :=
        rank
          ([MININT,
            str_ypf,
            str_mdr,
            str_hve,
            str_ksl$0,
            (struct
               (str_asf: str_iye$0,
                str_znl: str_fgb$0,
                str_ljn: str_aaz$0,
                str_bkr: (prefix(str_jvu$0)),
                str_tqi: str_sxj,
                str_scr: str_ydz)
             |->
             ((prj1(str_axv))(str_kog$0)))])
      ELSIF
        !(str_myr, str_buz).
        ({ str_sil, str_lxd, str_pxw, str_dul | not(str_ilm /<: str_cnw$0) } >
         { str_nlv, str_iwk, str_ljx, str_qoy, str_twy, str_gbj
           |
           str_ova$0 ^ MININT /<: str_dyy })
      THEN
        str_vrc
        :=
        size
          (UNION(str_peh, str_isc, str_syh, str_qhz).
           (str_xxl /= TRUE(str_qvs$0)| bool(NAT1 >= INTEGER))
             'str_yac)
      ELSIF
        str_dkw$0 >= {} &
        #(str_iwo, str_lwl).
        (!
           (str_ctx, str_jjz, str_rto, str_pjs, str_mph, str_jju, str_cqx,
            str_psl, str_lwd, str_zxq, str_kph).
         (str_ejs$0 <<:
          { str_kjn, str_tew, str_sdx | str_rps$0 <= str_yzj$0 })) &
        INTEGER >= str_gjg$0
      THEN
        str_jsz, str_bjx, str_osm
        ::
        rec
          (str_fog: str_bsg$0,
           str_ryh: NATURAL,
           str_zas:
           struct
             (str_tih:
              rec
                (str_jjs: str_owt,
                 str_fwv: INTEGER,
                 str_xwa: str_pnx,
                 str_joe: str_qsg$0,
                 str_olw: str_jmf),
              str_zen: str_rkz$0,
              str_qqw: str_qvx,
              str_emc: str_rgi$0,
              str_usb:
              rec
                (str_wvo: NATURAL,
                 str_rao: STRING,
                 str_fgv: str_ptx$0,
                 str_qph: FALSE,
                 str_lbh: str_lmr,
                 str_upy: NAT1,
                 str_wqh: str_axm),
              str_yyr: TRUE,
              str_xag: str_rfy))
          (str_ljz$0
             (rec
                (str_sel: str_wlr,
                 str_aey: str_wpk$0,
                 str_ewe: [],
                 str_qwx: str_fgu$0,
                 str_cli: str_itj,
                 str_sja: str_rbx$0)))
      ELSIF
        (str_wfu$0 /: BOOL &
         !
           (str_hfb, str_zqp, str_eta, str_dwi, str_lkm, str_fpv, str_zuj,
            str_qla, str_jeu, str_ohw).
         ((STRING <| str_pox)'str_vaq <=
          rec
            (str_cqh: str_boj,
             str_ykl: str_ueu,
             str_prt: str_ohd,
             str_gic: str_ddk,
             str_jnc: TRUE,
             str_tdg: NATURAL))) =>
        str_krh$0 /<<: NAT
      THEN
        str_cyk, str_vlm, str_jrx, str_gts, str_hlv, str_cvh, str_xyd,
        str_zyw, str_mml
        <--
        str_ovz
          (bool
             (!
                (str_gis, str_ais, str_vkb, str_eoo, str_ozk, str_wqx, str_iqn).
              (#
                 (str_oef, str_ufw, str_sff, str_bof, str_ihs, str_xng,
                  str_uim, str_iyf, str_adg, str_pah).
               ([str_hvu] /<<:
                struct
                  (str_etq: str_jvb,
                   str_wpc: str_bkr$0,
                   str_yln: str_rfu$0,
                   str_rtj: str_mso,
                   str_oxl: str_wcp$0,
                   str_lnl: { str_ohg, str_lkl | str_njk$0 /: str_qye$0 })))))
      ELSE
        str_dgw, str_twe, str_fot, str_zxn, str_ysd, str_ovh, str_lnp,
        str_crc
        ::
        SIGMA
          (str_rvm, str_eve, str_bgo, str_avu, str_fkh, str_jxj, str_bsz,
           str_jra).
        (str_enp <: bool(MININT /<: FALSE or str_csb$0 < MININT)'str_qup|
         rec
           (str_wct: str_wyr,
            str_egm: str_cdf$0,
            str_fma:
            struct
              (str_ogb: str_dpx,
               str_bfe: str_fou,
               str_hip: str_oed$0,
               str_kfm: str_xhf$0,
               str_bhn: str_qse$0,
               str_lzo: NATURAL1,
               str_sft: str_edn),
            str_gip: str_eap,
            str_bxv: str_obr,
            str_wje: str_wmd))
      END
    END ;
    str_oka, str_hhn, str_uah, str_zjm, str_avr, str_ajm, str_iau
    ::
    { str_lsw, str_gre, str_dby, str_cnk, str_oqw, str_umm, str_lld, str_poz
      |
      #
        (str_bce, str_llo, str_itg, str_ide, str_ycn, str_rwm, str_ryi,
         str_dhg).
      ((POW({ str_kkb, str_qvo, str_eno | str_kzm /= str_rag })) <+
       (rel(str_jne$0)) <<:
       FALSE) }
  END;

  str_cuj, str_cgb, str_kzk, str_xfj
  <--
  str_tmb (str_oom, str_xlx, str_pma, str_chb, str_ydk, str_lih)
  =
  BEGIN
    str_mzd'str_vtd
    :=
    { str_grk, str_aen, str_clw, str_fea, str_zxi, str_jzm, str_okl, str_mnp,
      str_zuq
      |
      str_hwf$0 /: [] &
      !
        (str_jzy, str_xnj, str_bam, str_piw, str_fqg, str_kml, str_edz,
         str_sry).
      (#(str_bhm, str_oan, str_zbd, str_psk, str_fmo, str_fby).
       (#(str_rxo, str_asb, str_lta).(not(str_bdz$0 = str_lyb$0)))) } ;
    PRE
      {rec
         (str_yvw:
          PI(str_nxy, str_jfu, str_hfk, str_oxo, str_cwr, str_zya).
          (str_sxt$0 > str_bbl$0 => str_mey$0 <= str_pre$0| STRING),
          str_gra: [str_ppz, str_fzx$0, str_jmn$0, str_lcc]'str_nqs,
          str_azn: {}),
       str_cls$0} >
      str_fsg
    THEN
      SELECT
        ((NATURAL <<: str_era$0 & str_rvl$0 /= str_xtu) or
         (!
            (str_klw, str_xxo, str_zzq, str_rgk, str_diz, str_pig, str_wfi,
             str_zcm, str_ury).
          (NAT /<: []) or
          str_bao$0 < str_ihd)) &
        (not(str_dvm$0 <<: str_zln) & str_qrb$0 <<: MININT)
      THEN
        str_njm :(
          seq1(((son(MAXINT)) ; bool(not(TRUE <<: str_yop$0)))) /:
          rec
            (str_plq: MAXINT,
             str_gkh: str_pdv,
             str_yat: str_xbo$0,
             str_leh: str_nrl$0,
             str_qsj: str_awp$0,
             str_wem: str_tcg$0,
             str_fos: str_phv)
        ) ||
        str_cxn, str_qic, str_jim, str_woe, str_csc, str_sbj, str_gwz
        :=
        rec
          (str_xtq:
           { str_bva, str_bsc, str_dvm, str_fcr, str_xyj, str_zcb, str_vae,
             str_llu
             |
             str_fmz <= str_zpp },
           str_ghs:
           { str_mkh, str_hqi, str_fto, str_qax | not(NAT1 > str_dti) }
             'str_wpz)
          'str_pzc
          'str_uag
      WHEN
        not(not(str_hfa <= str_tlg$0) or #(str_zvn).([] >= FIN(str_pzu$0)))
      THEN
        str_dnp 
          (
            INTER
              (str_wvz, str_jzz, str_elq, str_gpf, str_clz, str_jsd, str_lkw).
            (!
               (str_jty, str_rqi, str_dfc, str_jbt, str_mro, str_vou,
                str_uwb, str_zeq, str_mta, str_loi).
             (#
                (str_mel, str_bnh, str_xcf, str_hxk, str_zhx, str_dcy,
                 str_xkj, str_eyp).
              (not(NATURAL < NAT)))|
             { str_bfi, str_mqb | not(str_qsf /<: {}) })
          )
          (
            { str_ycz, str_ypd, str_cgw, str_itn, str_nvm, str_asl, str_tap,
              str_ira, str_wne, str_psr
              |
              !(str_ihn).
              (#(str_qhd, str_qjd).
               (!(str_nmg, str_mar, str_elh, str_jrj, str_zlz).
                (str_eib >= str_vau &
                 (#
                    (str_etb, str_ngh, str_rwm, str_yoe, str_nin, str_hvh,
                     str_not).
                  (str_yzj$0 : TRUE) or
                  37 /<<: str_mjp$0)))) }
          )
        
        :=
        { str_ttj
          |
          #(str_qrl, str_ouk, str_ayg, str_tzo, str_klv, str_rsb).
          ({str_ksi$0,
            {str_bkd,
             (str_pgh$0 , str_zxs),
             str_yiq$0,
             str_qsi$0,
             MAXINT,
             str_dmf,
             str_pmp$0},
            INT,
            str_vyn,
            str_eqw$0,
            str_ler,
            str_het,
            MAXINT} /<:
           MAXINT) }
          'str_rqb
      WHEN
        not
          (#(str_hue).
           (not
              (#
                 (str_hal, str_iyb, str_osd, str_isv, str_bna, str_ljk,
                  str_otc, str_yzr, str_lzz).
               (str_voa$0 > NAT))) =>
           (str_kfy > FALSE & str_ukc$0 <= NATURAL1))
      THEN
        CASE
          rec
            (str_cht:
             rec
               (str_wax: str_twq,
                str_rhy:
                %(str_hhz, str_kcr, str_snp, str_jsf, str_xxb).
                (str_ipr <: str_sxn$0|
                 [NATURAL1, TRUE, MININT, "str_vkp", "str_igm", NATURAL1,
                  INTEGER, "str_sib"]),
                str_dty:
                { str_ujk
                  |
                  !
                    (str_uzc, str_vht, str_woh, str_jjz, str_ics, str_shb,
                     str_ntj).
                  (#
                     (str_wpr, str_xrt, str_yqc, str_kck, str_krr, str_adm,
                      str_uze, str_ays, str_lov).
                   (str_hvu$0 /<<: str_adw)) },
                str_btm: 43,
                str_jqf: str_jku$0,
                str_ckr: str_lmh))
          OF
          EITHER
            (rec(str_jxw: str_vgp, str_wih: str_iat$0'str_hbu) |-> INTEGER)
              ([(bool(str_sax : str_imt$0) |-> INT)])
          THEN
            str_hog, str_hls, str_tnc, str_abv, str_zfz, str_klq
            <--
            str_fer
              (((SIGMA
                   (str_qzz, str_acu, str_hip, str_czz, str_kfg, str_ske,
                    str_ych, str_itd).
                 (NATURAL >= NATURAL| str_auo) -->
                 NATURAL)
                  (({ str_odx | str_cyn : str_ilo } ||
                    (str_epj |-> str_azq$0)))),
               bool
                 (left(SIGMA(str_ctr, str_kms). ({} = str_tsn$0| str_yds)) /=
                  struct
                    (str_lvk: str_wgp,
                     str_ppq: str_pzb,
                     str_dsx:
                     (struct(str_hpa: str_enr$0, str_wah: str_ivz$0)
                      ,
                      str_sjs),
                     str_idg: str_mxe$0,
                     str_eiq: MAXINT,
                     str_yii: str_xgw$0)),
               { str_awt, str_cnf, str_stz, str_vqv, str_xsl, str_ltm,
                 str_xeu
                 |
                 TRUE /: str_kfn <=>
                 ((!(str_lpr, str_mtf).(str_ysr$0 = str_iyt) &
                   !(str_gzj, str_awa, str_awj, str_kvc, str_xkm, str_ynh).
                   (str_jvd$0 > str_jdf$0)) or
                  INT <: str_psx) },
               {SIGMA(str_jav, str_pwm, str_iyv, str_xoz, str_fdh, str_dsg).
                (MAXINT <: str_vyd| str_clv),
                str_khk$0,
                { str_uwo, str_eve, str_mfk, str_urv, str_hne
                  |
                  not(str_bcb > str_mha) },
                str_ywo,
                str_ief,
                (%(str_rjz).
                 (str_igc$0 <: str_zka|
                  struct
                    (str_plz: str_hsy,
                     str_ufv: MININT,
                     str_dqb: str_qpt$0,
                     str_nxh: str_qea$0,
                     str_eni: str_sos,
                     str_nby: TRUE,
                     str_xzb: str_tkb,
                     str_prv: str_jmb$0))
                   ~)},
               SIGMA
                 (str_dos, str_swh, str_lei, str_btx, str_ytx, str_zjq,
                  str_quu, str_bsw, str_tlq, str_rcf, str_tbj).
               (!
                  (str_zpv, str_auu, str_ssk, str_qlz, str_ljg, str_nky,
                   str_bgi, str_wyc, str_dvp).
                (str_trd /<: str_quc$0)|
                closure
                  (rec
                     (str_bns: (str_xmi(str_gmm)),
                      str_xzu:
                      (MININT <|
                       UNION(str_czc, str_gpp).
                       (str_men$0 /<<: str_lnt$0| str_hrz$0))))),
               (FALSE'str_daw
                  ((UNION
                      (str_agf, str_sot, str_odk, str_rxv, str_zab, str_djn,
                       str_nyr, str_zbw).
                    (str_tjp$0 /<<: MININT| str_zpk) -->>
                    NATURAL1)
                     (max(min(MAXINT))))),
               { str_gyv, str_tfk, str_dqx, str_hvt, str_wgw, str_fkh,
                 str_ndh, str_vlq, str_tfq
                 |
                 struct
                   (str_rob: TRUE,
                    str_dnv: STRING,
                    str_zis: NATURAL1,
                    str_amh:
                    struct
                      (str_oeu: str_fpk$0,
                       str_xdf: FALSE,
                       str_wfv: str_cvy,
                       str_vvi: str_kkf$0,
                       str_cmq: str_nxv$0,
                       str_klj: str_axg,
                       str_qyq: {},
                       str_aau: BOOL),
                    str_psi: str_qxq$0,
                    str_clv: str_wac) /<:
                 bool
                   (#(str_ofp, str_gph, str_suw).
                    (!
                       (str_rag, str_dog, str_azn, str_tfy, str_uzp, str_wtv,
                        str_sil, str_tdw, str_slk, str_ntp).
                     (str_yju /= []))) },
               (str_yte$0
                  (bool
                     (!
                        (str_eyc, str_poq, str_vro, str_qgr, str_tli,
                         str_ebr, str_rri, str_bid, str_asd, str_dzb).
                      (not(NAT1 <= str_yxh$0 & NAT : []) <=>
                       str_kul$0 /<<: str_aac$0))))
                 'str_ikh)
          OR
            struct
              (str_mxg: bool(9 >= str_asq <=> str_elx <= STRING),
               str_kzs: str_mgb,
               str_ixz: str_evf$0,
               str_ftm:
               SIGMA(str_czb, str_eps, str_zmr).
               (MININT <= struct(str_nnd: STRING, str_fzg: str_oom)|
                str_hvs$0),
               str_pmv: str_qse,
               str_rth: (NATURAL1 |-> 5),
               str_gsk: str_xmr,
               str_kbs: str_vdr$0)
          THEN
            skip ;
            ASSERT
              #
                (str_wkq, str_tne, str_ado, str_cfa, str_mbr, str_hto,
                 str_evr, str_ril, str_vzp, str_eow, str_xju).
              (#(str_krv, str_ort, str_zip, str_bxw, str_hpu).
               (!(str_exz, str_ecf, str_gkm, str_pko, str_jkt).
                (!(str_isr).([str_izl] /: str_esd$0'str_hdw))))
            THEN
              str_jir 
                (
                  {} *
                  rec
                    (str_hbd: str_bvk$0,
                     str_xmr: str_nsh$0,
                     str_fez: str_red,
                     str_exp: 97,
                     str_yng:
                     (rec
                        (str_ucv: INT,
                         str_rum: str_qtx$0,
                         str_yby: str_vgq$0,
                         str_tcn: str_cgs$0,
                         str_fbg: str_fow$0) +->>
                      { str_jid, str_rkf | not(not(str_rlx$0 < INT)) }),
                     str_nlq: str_drv)
                )
              
              :=
              { str_fhs, str_yft
                |
                not
                  (TRUE <
                   SIGMA(str_gxs, str_vsp).
                   ([MININT, NATURAL1, str_hbo, NAT1, str_arv$0, BOOL] >
                    bool(str_kbv$0 >= str_dif)|
                    str_njx)) }
            END
          OR
            INTEGER
              ({{str_vlc$0,
                 str_zgd$0,
                 str_sqf,
                 NATURAL1,
                 str_haf,
                 { str_obs, str_wkj, str_cup, str_ouk, str_bav, str_nil,
                   str_toc
                   |
                   str_epf > str_nuw }},
                (str_cnc$0 >< STRING),
                { str_qjx, str_dof, str_hkm, str_yxa, str_pdu, str_vxe,
                  str_vfs, str_atv
                  |
                  {} >= str_byk$0 <=> str_pmj <<: str_rfv$0 },
                NAT1})
          THEN
            skip
          OR
            SIGMA
              (str_gvd, str_xqx, str_gze, str_ebq, str_sus, str_oig, str_jff,
               str_itx, str_ava, str_rfc, str_hlr).
            (#
               (str_ape, str_nqe, str_gyl, str_nsb, str_qkq, str_qae,
                str_ytj, str_udc).
             (NATURAL : str_gcm &
              (str_zbd$0 < str_xxv$0 => str_phm : str_npt$0))|
             bool(not(str_fiu$0 >= str_kcp <=> MAXINT <<: str_wuy$0)))
          THEN
            str_mjj 
              (
                struct
                  (str_frn: FALSE,
                   str_iil: str_gih,
                   str_cvy: BOOL,
                   str_hro:
                   rec
                     (str_ats: str_xad$0,
                      str_ira: (postfix(bool(str_gty$0 > str_qmb))),
                      str_css: { str_rlx, str_ycg | INT /: str_ztc },
                      str_xzj:
                      UNION
                        (str_bgv, str_kpx, str_zxf, str_nkj, str_ink,
                         str_jna, str_jcz, str_wmf, str_jlf).
                      (str_zcd$0 >= MAXINT| INTEGER))
                     'str_uel,
                   str_lvt: TRUE)
              )
              (
                { str_lvo, str_hfn
                  |
                  not
                    (str_asx <:
                     str_xop
                     ,
                     (iseq1
                        (rec
                           (str_jnk: (str_yxv(str_uhp)),
                            str_cra: str_xju,
                            str_irv: str_iwg,
                            str_bax: str_nop$0)))) }
              )
              (
                { str_sds, str_pvj, str_nje, str_kvx, str_pea, str_inb,
                  str_zge
                  |
                  !(str_xii).
                  (#(str_kjo, str_mad, str_gdu, str_kmi, str_mji).
                   (MININT = NATURAL1) or
                   !
                     (str_pgh, str_ens, str_xoq, str_uzr, str_ist, str_opl,
                      str_orw, str_nle, str_lqs).
                   (str_wgr$0 /: str_yvp)) <=>
                  !(str_ejl).(str_abj /<<: str_iaj$0) }
              )
            
            :=
            rel
              (INTER(str_gxx, str_udc).
               (not
                  (BOOL >= str_qtf or
                   str_fja <<:
                   rec
                     (str_utp: NAT,
                      str_esy: INTEGER,
                      str_whp: str_udm$0,
                      str_zfe: NAT1))|
                MININT /\ str_emy$0))
          ELSE
            str_bik 
              (
                { str_wlc, str_gpc, str_ste
                  |
                  {str_esh$0, str_lal, 1, INT} |-> 145'str_ezz >=
                  (ran(str_zbq))[str_dua$0] }
              )
              (
                bool
                  (not
                     ({str_gkm,
                       str_ckp$0,
                       rec
                         (str_flz: str_tui$0,
                          str_noy: str_ukc,
                          str_ivd: (str_snp(str_wai$0)),
                          str_eun: str_dcs,
                          str_gqi: str_sar,
                          str_klz:
                          struct
                            (str_kwg: str_nwb,
                             str_iyn: str_vkk$0,
                             str_fuv: str_ndi$0,
                             str_thc: MAXINT,
                             str_ams: str_oob,
                             str_lim: str_ukw)),
                       str_jnu$0} /:
                      str_jop$0))
              )
              (
                { str_ejm, str_dov, str_fhn, str_ffq, str_klg, str_dqk,
                  str_ljp
                  |
                  not
                    (#(str_skl, str_ilq).
                     (#
                        (str_ylt, str_toc, str_zyj, str_sgt, str_pyt,
                         str_key, str_tqj, str_joi, str_pqq, str_bvi).
                      (not
                         (!(str_wxa, str_sxi, str_cnr, str_zcw, str_xse).
                          (str_ldm : str_yxw$0 & str_ccb <: NAT))))) }
              )
              (
                bool
                  ([str_luq, str_gwf, str_wpe, str_wyp$0, str_cvb, str_dvy$0,
                    MAXINT] /<:
                   str_bbb
                   ,
                   ([str_yic$0, str_xeu$0, str_tin$0, str_iwi$0, TRUE]
                      ({ str_hav, str_ogh, str_gqh, str_zgc
                         |
                         str_axr <= str_org })))
              )
              (
                [str_nel, {str_mci$0, str_ppv$0, MININT}]
                |->
                struct
                  (str_xgh:
                   rec
                     (str_evu: STRING,
                      str_vfc: INT,
                      str_zxm: str_spf,
                      str_nsi: str_hjv,
                      str_dqr: str_gmf),
                   str_ejy: ((str_mot +-> str_uxy)(str_zzv$0)),
                   str_ope: str_ttv)
              )
            
            :=
            { str_oqv, str_okh, str_yjp, str_vbt, str_ftj, str_hwv, str_mhp,
              str_vwv, str_bln
              |
              rec
                (str_ywk: bool(str_eer$0 = str_fzs),
                 str_kwa: BOOL,
                 str_ruz:
                 {MAXINT, STRING, str_pvb, str_iqh$0, str_krd, str_hxq$0},
                 str_fcc: str_mii$0,
                 str_gak: str_zwt) <
              mirror(BOOL(str_anr$0)) }
          END
        END
      WHEN
        not
          (struct
             (str_zyr: MININT,
              str_fpq: str_chn$0,
              str_vxl: str_ogb$0,
              str_emp: str_avl$0) >=
           struct
             (str_ouj: (str_yar$0 mod NATURAL),
              str_lfr:
              rec
                (str_fzf: INTEGER,
                 str_mqn: str_emz$0,
                 str_fcv: str_doc,
                 str_ruw:
                 rec
                   (str_kme: str_sdy$0,
                    str_iqz: str_wki$0,
                    str_wmu: str_yjq,
                    str_tjd: str_jhf$0,
                    str_pdt: str_myp$0,
                    str_umc: str_beo$0),
                 str_bjv: str_wpy$0,
                 str_whu: str_emy,
                 str_zal: str_nch,
                 str_hfv: str_ziw),
              str_tgj: STRING,
              str_ndn: str_lnp,
              str_juo: MAXINT))
      THEN
        str_lfd 
          (
            rec
              (str_gim:
               [{},
                NAT,
                str_unj$0,
                str_fxz,
                [],
                struct
                  (str_uyw: str_brf,
                   str_ntm:
                   rec
                     (str_hrb: [],
                      str_ksl: str_xsd$0,
                      str_ejo: {},
                      str_duo: str_ipi$0,
                      str_lpm: str_jat),
                   str_yly:
                   { str_ihh, str_phr, str_ysp, str_nsc, str_vhg
                     |
                     str_sys$0 >= str_jor$0 },
                   str_gkw:
                   INTER(str_eia, str_epp, str_vqy).
                   (str_jro$0 /= str_cjq$0|
                    PI(str_plg, str_fnl, str_aae).
                    (str_bde$0 >= INT| str_vpq$0)),
                   str_gvf: INT),
                str_tss$0],
               str_djc: str_sgc)
          )
          (
            rec
              (str_aum:
               (UNION(str_pue, str_qxc).
                (str_vnz$0 > str_ret &
                 str_roo /=
                 rec(str_ymr: (perm(str_qrv$0)), str_jdb: str_rdc$0)|
                 str_zzl)
                  (str_eot$0)))
          )
          (
            {}
              ((iterate(str_jwk))'str_kvq **
               {str_vur$0,
                UNION
                  (str_lnc, str_htb, str_nax, str_zbv, str_tel, str_xwi,
                   str_mzi, str_pxi, str_ybk, str_aug).
                (str_raf$0 >= str_uto$0|
                 { str_zik, str_xwa, str_lji, str_fmx, str_vqo, str_nsq,
                   str_xiw, str_ypy, str_kxq, str_aqr, str_ysk
                   |
                   MININT >= str_zlb }),
                INT,
                str_nzd,
                FALSE,
                TRUE,
                INT})
          )
          (
            { str_vii, str_ubg, str_wjj, str_uen, str_vsi, str_dgn, str_pqi,
              str_mgq
              |
              #(str_jfl, str_kxz).
              (#(str_ctk, str_ibf, str_nhj, str_iym).
               (!
                  (str_feo, str_gec, str_jek, str_iai, str_nzq, str_bhk,
                   str_vgy, str_ufd).
                (#
                   (str_vtk, str_jme, str_uyj, str_wrm, str_udw, str_fun,
                    str_vlz, str_skv, str_xyf).
                 (str_bxn$0 <: TRUE =>
                  #
                    (str_ois, str_nsd, str_uia, str_crf, str_vfa, str_brw,
                     str_dul, str_vkh).
                  (NAT /= str_mrm))))) }
          )
          (
            { str_nps, str_btk
              |
              not
                (#(str_lrv).
                 (!
                    (str_vdn, str_bvl, str_oli, str_qhz, str_rny, str_kxz,
                     str_zgy, str_ggo).
                  (!
                     (str_dzz, str_nle, str_gcp, str_hbt, str_don, str_jeh,
                      str_jbz, str_zfv, str_jzd, str_zyg).
                   (!(str_itw, str_zlg).(str_dyw <<: str_bws$0))))) }
          )
        
        :=
        %(str_xei, str_akf, str_ipz).
        (#(str_xok, str_ylq).(not(str_ook$0 > STRING))|
         SIGMA
           (str_fsi, str_vuj, str_ejd, str_hkz, str_bal, str_vhu, str_smo,
            str_adn, str_lfm, str_fod).
         (str_xlx$0 /: []|
          { str_srr, str_crl, str_cnr, str_qta, str_udy, str_yzk, str_sxm,
            str_dvw
            |
            MININT > str_kip })
           'str_wxa)
      WHEN
        not(!(str_tqh, str_rpi, str_gqe).(TRUE : str_vfy$0)) <=>
        str_tmp$0(str_pzb$0) /<: postfix(str_gox)
      THEN
        str_xwe, str_aaa :(
          !
            (str_chm, str_sld, str_pdq, str_jhs, str_avq, str_fbi, str_dor,
             str_swp, str_pia, str_exq).
          (!(str_ieu, str_jbk, str_rxv, str_imf, str_hdw, str_jha, str_ysq).
           (!(str_lze).
            (#(str_ggi, str_iva, str_zaw).(str_mpf > str_yck) or
             not(str_fxh /: str_uur$0)))) =>
          STRING > str_jti
        )
      END
    END
  END;

  str_mpz, str_wsr, str_bls
  <--
  str_ced (str_vsj, str_cfh, str_gus, str_zts, str_dei)
  =
  CASE
    struct
      (str_rqp: str_wqc,
       str_kfg:
       [[str_ryk$0,
         str_cmp$0,
         str_gej$0,
         {},
         (inter
            ({ str_iqy, str_epx, str_ucw, str_cdt, str_dhp, str_jfz
               |
               STRING <: str_qho })),
         (str_rva$0 <<| str_ycu),
         str_fqb$0]],
       str_lrb: str_foz$0,
       str_dvx:
       { str_eve, str_ors, str_kvc, str_wze, str_cxm, str_yiy, str_fjn,
         str_dxm, str_wda, str_sdm
         |
         MININT /: str_bah })
    OF
    EITHER
      [str_iis,
       ((NAT1(str_bus))
          (struct
             (str_xup:
              rec
                (str_etk: 56,
                 str_ouh:
                 [NAT1,
                  {str_quw$0, str_axc$0, STRING, str_lpb, str_azy$0},
                  str_dwe$0,
                  str_ykm$0],
                 str_smz: str_koh$0,
                 str_ujm: str_anu$0,
                 str_nef: NAT,
                 str_gea: str_bsn),
              str_dfp: str_ntf,
              str_hqq: str_cwn$0))),
       str_baa$0]
    THEN
      LET
        str_ebu, str_zxt, str_lqr, str_udc, str_vif, str_xhi, str_hkf,
        str_afu
      BE
        str_ihy
        =
        right
          (struct
             (str_sub: (str_abu , (str_bvy$0(str_eyn -->> str_apf))),
              str_mke: str_bcs,
              str_afj: str_rvn$0,
              str_cxa: { str_ixs, str_gkf, str_laq | str_rcv <<: NAT1 },
              str_avq: [],
              str_ewf:
              {str_pwe$0, str_epp$0, str_pga$0, str_osq, INTEGER, TRUE,
               str_uhg, str_faw$0}))&
        str_gbf
        =
        (INTER
           (str_vge, str_fmq, str_bns, str_ncs, str_rdi, str_nms, str_vqe,
            str_kkz, str_zvk).
         (str_qcw <<: str_zvj & FALSE /<<: str_ymz$0| TRUE(str_gkr))
         ,
         ((MAXINT |> str_qpu)~))
        |->
        str_xuy$0&
        str_kma
        =
        (str_dgv$0 <- BOOL)
        ,
        (btree([str_les, str_mcu$0, (BOOL ^ str_hsb$0)](2 |-> str_rpi)))&
        str_mmk
        =
        {(father
            ({str_pio$0,
              str_szw$0,
              NAT1,
              str_czi,
              rec(str_ovl: str_acw, str_gvv: str_slg$0),
              BOOL,
              [NATURAL, BOOL, str_olj$0, str_ezb, str_ndz, str_mqg, str_yvx,
               str_row$0],
              []})),
         str_grh,
         (str_wpb$0 /
          struct
            (str_mln: str_nbo$0,
             str_uno: INT,
             str_nlv: str_lqf,
             str_bnj: BOOL,
             str_ftb: str_ell$0,
             str_txa: str_ziy$0,
             str_ipg: str_raw)),
         str_eod$0}&
        str_nts
        =
        {str_xjj$0,
         { str_unp, str_uvw, str_lxb, str_znb, str_cte, str_ols, str_sfa,
           str_oyd, str_tfb, str_iaz
           |
           #(str_sek).
           (#(str_gfr, str_gqd, str_rpl).
            (str_aqq = NAT1 or str_hzo$0 /= NATURAL1)) },
         [],
         INT,
         str_lmi,
         { str_urz, str_pxn, str_fnu, str_zca, str_oap, str_mvt, str_prr,
           str_tdf, str_nzj, str_ahx, str_nmb
           |
           str_trx$0 <<: str_ujc$0 or INT /: str_hoe$0 }}&
        str_hda
        =
        UNION(str_lfr).
        (not(not(str_piz$0 = str_bbx$0))|
         { str_rgy
           |
           FALSE = MININT <=>
           (str_lgu$0 /= str_tqx$0 =>
            (str_kjk$0 /<<: MAXINT <=> str_yac < str_hxy)) })&
        str_hpt
        =
        [BOOL,
         str_qac$0,
         str_yhk,
         str_qvj,
         str_pem$0,
         rec
           (str_len:
            (INTER(str_xqm, str_bvx, str_znv).
             (str_zxa$0 < str_ssj$0| str_omr)
               (struct
                  (str_fkw: str_gry$0,
                   str_vml: str_pfk,
                   str_owt: str_ovp,
                   str_fww: str_vug,
                   str_eto: str_bhl$0,
                   str_akn: (NATURAL1(str_yvb$0)),
                   str_rvr: MAXINT,
                   str_yky: NAT))),
            str_vay: [],
            str_jar: str_vmk$0),
         (INTEGER \/ str_hic$0)]&
        str_tok
        =
        {bool
           (#
              (str_aqs, str_czw, str_ikz, str_vks, str_wug, str_qrx, str_veh,
               str_ucx, str_aed).
            (not
               (!
                  (str_nbq, str_bdg, str_ijb, str_irn, str_bnm, str_twk,
                   str_jnb, str_smy).
                (#(str_fup, str_sqm, str_ois, str_ybb, str_yns, str_yll).
                 (str_isj$0 /: str_iky$0))))),
         struct
           (str_lfr: str_foo$0,
            str_taq: FALSE,
            str_vth: str_uob$0,
            str_gbc: str_vqp,
            str_nfu: INT,
            str_bze: str_kaa$0,
            str_mto: NATURAL1,
            str_cau: str_hkp)}
      IN
        ANY
          str_mlg
        WHERE
          (str_drr$0 : FALSE &
           (not(str_yyz$0 : NAT1) <=>
            !
              (str_ntp, str_uwx, str_ffz, str_dey, str_zhe, str_urv, str_zpe,
               str_uns, str_ink, str_lvq).
            (BOOL /<: BOOL))) =>
          #(str_mga, str_ckd, str_slr, str_yjb, str_lsl, str_gpu, str_tgk).
          (str_ueo <= str_phu <=> str_vdt$0 /<: str_fnx)
        THEN
          ANY
            str_usa, str_cfq, str_xha, str_gva, str_vtk, str_prw, str_zzx,
            str_eoo, str_ylf, str_slm, str_xyw
          WHERE
            #
              (str_icn, str_gso, str_imb, str_woh, str_gol, str_lyq, str_viy,
               str_ouq, str_nws, str_dhe).
            ({[str_fpo, str_dxe$0, str_ksv],
              rec
                (str_gcq: str_kpk,
                 str_ksw: INTEGER,
                 str_inj: str_ofk,
                 str_ful: str_jqi,
                 str_wye: str_qrm,
                 str_mta: MININT),
              str_cky,
              (bool(NAT1 <: str_yak) * str_dkv$0),
              str_zww,
              str_dgc$0,
              str_hyc} <<:
             str_btb)
          THEN
            LET
              str_yfc
            BE
              str_mio
              =
              [str_qhi$0,
               FALSE,
               (str_nnz$0
                  (rec
                     (str_pqt: {},
                      str_azl: str_uxr,
                      str_otq:
                      rec
                        (str_frb: FALSE,
                         str_snv: str_vsn,
                         str_dmm: FALSE,
                         str_kxd: str_aik$0,
                         str_hbj: str_wox,
                         str_yvv: str_pzn$0,
                         str_myq: str_hds$0,
                         str_stj: str_bvo$0),
                      str_zoa: {{}, str_iuk, str_kat$0, {}},
                      str_twj: str_okq,
                      str_bng: str_wvh$0,
                      str_bha: str_kte))),
               (str_mak$0 , (front(str_xck))),
               str_nrr$0,
               str_pkh$0]&
              str_yru
              =
              { str_roe, str_gii, str_wxr, str_gck, str_cyy, str_cpc, str_rcr
                |
                not
                  (INT <: str_gjj or
                   #
                     (str_opt, str_ttc, str_osv, str_bpa, str_zqi, str_pax,
                      str_uev, str_ewr, str_yqf).
                   (not(str_ikj < FALSE'str_toe))) }&
              str_nzd
              =
              str_kzg$0
                (SIGMA(str_box).
                 ([str_hxy$0] <<: str_umi|
                  { str_qny, str_aeq, str_ahk, str_ubm, str_vwf, str_tyt,
                    str_fmy, str_tzo, str_vkg, str_fsq, str_aey
                    |
                    #(str_cca, str_bgw, str_fch).(str_bwn$0 <: str_rcr) })
                   (INTEGER))&
              str_xab
              =
              bool
                (not
                   (str_pqw'str_npf <: str_bsk$0 <=>
                    #(str_qha, str_ewn, str_lil, str_dxb).
                    (#(str_ksq, str_ofg, str_hho, str_uvn, str_htp, str_mfg).
                     (str_qol$0 < INTEGER))))&
              str_ugr
              =
              rev
                ([[str_pmc,
                   STRING,
                   (str_qkd(str_nxm$0)),
                   str_qhn,
                   [str_hra$0,
                    {},
                    str_twh$0,
                    [INTEGER, STRING, (NATURAL <+ STRING), str_yjz$0],
                    str_kyr,
                    str_vqx,
                    INTEGER,
                    str_fyv],
                   str_ddg],
                  str_zbs])&
              str_wob
              =
              [INTER(str_puj, str_yof, str_mvd, str_zpg).
               (!(str_ipi, str_pxy, str_xpr, str_gvf).
                (INT > str_tqr$0 or str_aub > str_sei$0)|
                str_zzh$0
                ,
                struct
                  (str_hna: str_vts$0,
                   str_suj: [],
                   str_gza: str_cui,
                   str_adg: str_qjv$0,
                   str_jgt: TRUE,
                   str_daw:
                   [MININT, NAT1, str_rvg$0, BOOL, str_vkb$0, TRUE, str_bnc,
                    str_led],
                   str_bql: str_vku,
                   str_oef: BOOL))]
            IN
              str_hag, str_lwl, str_ylu, str_fpd, str_uqe
              ::
              left
                (rec
                   (str_fsx: str_mzh$0,
                    str_qpf: str_orq$0,
                    str_kte: MAXINT,
                    str_aub: NAT,
                    str_fpo: str_roa,
                    str_tye:
                    (size
                       (prj2
                          (rec
                             (str_qdy: str_snv$0,
                              str_vmx: str_gif$0,
                              str_bei: str_olv$0,
                              str_jrt: str_kod$0,
                              str_mtl: str_ccd,
                              str_ipn: str_kyv,
                              str_yqa: str_zyp,
                              str_qnk: MININT)
                           |->
                           SIGMA(str_fea, str_taz, str_vxa).
                           (str_vcb$0 /= NAT| str_ujc))))))
            END
          END
        END
      END
    ELSE
      IF
        #(str_skc, str_rxm, str_hff, str_mkr, str_mvn, str_fjc, str_mmv).
        (!(str_hjj, str_dvz, str_lxs, str_yyq, str_tas, str_qzv, str_tgc).
         (!(str_stc, str_crw, str_bpj).
          (FALSE(str_suj >->> str_ckz) = mirror(str_llb))))
      THEN
        VAR
          str_ugd, str_lky, str_adc, str_qnv, str_bmx
        IN
          str_fwn, str_nho, str_kvf, str_sgb, str_zit, str_mny, str_xea,
          str_pyq, str_onw, str_eoj :(
            not
              (!(str_lpr, str_yma, str_mxl, str_iyh, str_xdz).
               (rec(str_xoq: (str_omm$0 , str_uai), str_zxo: str_lcc) /=
                bool(not(FALSE >= str_wkm))))
          )
        END
      ELSIF
        #(str_uca, str_ryd, str_kry, str_pnv, str_opa, str_lzi).
        (#(str_pcm).(str_pgx$0 <: str_epo$0) &
         NAT <<:
         { str_lmf, str_pyz, str_iot, str_own
           |
           #(str_tkc, str_tlk, str_odt, str_doy, str_esm, str_ouo).
           (FALSE <: str_zhi$0) }
           'str_oad)
      THEN
        str_lrn, str_kjj, str_gor, str_owk
        :=
        ((rec(str_ieq: str_izy, str_sxt: str_eom$0)(str_psp))
           ({ str_wwn, str_wax, str_qsk, str_vlu, str_nyj, str_glh
              |
              not(INT /<<: str_rup$0) })) \/
        str_hyl$0'str_rtw
      ELSIF
        !(str_hbf, str_iis, str_tru, str_jeb, str_nip, str_okz).
        (str_yae /: str_knn$0 =>
         #
           (str_iao, str_lca, str_fus, str_ody, str_hmo, str_ryn, str_cdy,
            str_lju, str_zkj, str_fpt).
         (struct
            (str_fbl: (str_dut$0 |> str_ksv$0),
             str_ees: FALSE,
             str_xxa: str_ins,
             str_mmn: str_uab,
             str_cqd: str_raw$0,
             str_sde: str_eec,
             str_zgo: str_gsq$0) /<<:
          str_jxh)) =>
        str_aqq$0 /<<: str_dqo$0
      THEN
        str_tev, str_tjz, str_ztb, str_cda, str_hlp, str_knt
        ::
        [INTER(str_rgq, str_nut, str_xuj, str_qlo, str_mmq, str_odg, str_syc).
         (str_btx$0 >= str_zuj$0| str_tvd)
           'str_bio,
         { str_mkp, str_szr
           |
           not
             (#
                (str_rvj, str_zjr, str_gxr, str_syh, str_mxz, str_yhp,
                 str_eqw, str_gzv, str_aez, str_ayh).
              (!(str_keb, str_asz).(BOOL = str_qmv$0))) }]
      ELSIF
        not
          (#
             (str_gae, str_cti, str_kjn, str_tzy, str_qip, str_atp, str_nrh,
              str_jau).
           (#(str_okc, str_zrc, str_orc, str_itu, str_kuv).
            (str_kga <: str_fvb$0) &
            MININT /<<: str_jbc(MININT)))
      THEN
        skip
      ELSIF
        !
          (str_qsm, str_egg, str_jpy, str_eei, str_iok, str_qya, str_rxo,
           str_nzh).
        (!
           (str_hvw, str_bvp, str_xgq, str_rxj, str_cou, str_qpp, str_pxz,
            str_ijz, str_szj, str_yfo, str_xco).
         (str_mat > NAT1) <=>
         (str_odv$0 <= MININT &
          ([] > str_ama$0 or
           #
             (str_jnw, str_hnp, str_ijl, str_pas, str_pmb, str_ajl, str_amn,
              str_qdy, str_eqw, str_gmh, str_rgm).
           (str_vvn$0 : []))))
      THEN
        str_mhg, str_lyl, str_pgo, str_jwc, str_dgs, str_ffg, str_peb,
        str_ktc, str_cpk, str_nwi
        <--
        str_dwd
          ((inter
              (struct
                 (str_kel:
                  PI
                    (str_hqq, str_zif, str_jfu, str_iel, str_cts, str_rld,
                     str_lke, str_zgm).
                  (str_lze$0 <<: str_zqx$0| str_esm$0),
                  str_yei:
                  (pred
                     (struct
                        (str_cvz: str_mel$0,
                         str_tat: str_khq$0,
                         str_unu: str_nax))))
               |->
               str_bvt)),
           {str_ydt,
            (struct
               (str_lzh:
                rec
                  (str_nfw: NAT,
                   str_kul: str_yly,
                   str_flr: [],
                   str_vim: str_yhe,
                   str_yvc: str_cmi$0),
                str_otg: (sizet([BOOL, str_yiy])),
                str_vht: {str_xxq$0, str_rsx$0, INT, NATURAL1},
                str_eap: str_wwb,
                str_mxf: str_ili$0) **
             str_enh)},
           rec
             (str_sed: [str_jcq$0, str_pgs$0, str_urk$0],
              str_mkv:
              bool
                (not
                   (#(str_yln, str_rys, str_zfb).(TRUE /<: str_fts) or
                    STRING /= INT or
                    str_dux$0 <= NAT))))
      ELSE
        str_tlo'str_ucp
        :=
        PI(str_ufx, str_hes, str_hwd, str_crk, str_gam, str_okz, str_ths).
        (NATURAL1 /<: str_lgs$0|
         INTER(str_vrh, str_gab, str_bas, str_ipn, str_vja).
         (!(str_zxg).
          (!
             (str_dhu, str_nbm, str_xfg, str_hgf, str_pfv, str_vhp, str_rmr,
              str_iye, str_oit, str_jxc, str_dhs).
           (str_dcn$0 < BOOL => NATURAL <<: str_bqg))|
          str_jqh$0))
          'str_dsv
      END
    END
  END;

  str_ptq, str_ekj <-- str_ouu (str_vhn, str_gdv, str_yoc) =
  LET
    str_nug, str_iph, str_hnq, str_gne, str_ikp, str_hei, str_lis
  BE
    str_ste
    =
    bool
      (str_aym'str_vpu >=
       bool
         (#
            (str_izb, str_jdt, str_ulz, str_mfi, str_dmi, str_nvf, str_pzu,
             str_jcp, str_rqa, str_yfe).
          (#(str_htx, str_yjw, str_ocs, str_hdv).(str_swk >= {}))))&
    str_vnv
    =
    bool
      (str_tmb /= str_mix$0 <=>
       #
         (str_bor, str_qga, str_psg, str_nmd, str_gwk, str_jpp, str_eix,
          str_yrq, str_ojo).
       (not(str_lve$0 >= str_wfs$0)))
    |->
    rec(str_pjf: str_vyo, str_qbs: str_mud)'str_yzc&
    str_dfy
    =
    {str_tjz,
     (str_gzi
      ,
      {str_rkd$0,
       str_nfe,
       bool
         (!
            (str_zrq, str_koq, str_cfe, str_cyi, str_bzr, str_fle, str_mak,
             str_kfk, str_zpe).
          (str_vfs$0 /<<: str_iln)),
       str_jxs$0,
       INTEGER}),
     str_dxz,
     { str_kzx, str_wyp, str_jts, str_utu, str_wve, str_ccn, str_qzd,
       str_hef, str_osg, str_opa, str_hlz
       |
       not(str_kap$0 /<<: FALSE) },
     str_uax}&
    str_bxf
    =
    rec
      (str_vdi: str_azs$0,
       str_lxc: (MAXINT , MAXINT)'str_dga,
       str_ant: (NAT1 , (str_pxl$0(NAT1))),
       str_qfa: str_lfn$0,
       str_xcj:
       (rec
          (str_bod: str_hnq,
           str_juv: str_wmk,
           str_pyo: STRING,
           str_psp: {},
           str_zsa: str_izi,
           str_kam: str_wyk,
           str_rhx: FALSE)
        |->
        str_icp))
  IN
    ASSERT
      str_mrs$0 |-> str_ybn /<<: str_kyd$0 =>
      (#(str_uby, str_amj, str_wmg, str_szj, str_ywy).(str_xxz /<<: NAT) <=>
       str_cac <
       UNION
         (str_ekb, str_awf, str_mqo, str_vsz, str_yam, str_fdy, str_ciu,
          str_hya).
       (str_aae <<: str_swi$0| str_dbu$0))
    THEN
      BEGIN
        BEGIN
          ANY
            str_ofn, str_ruw
          WHERE
            not
              (!
                 (str_jlk, str_bky, str_zxr, str_vxr, str_bih, str_kus,
                  str_ugl, str_ttd, str_xtv, str_zwe).
               (str_hiu /: [] or
                (str_ylu$0 /<<: str_djf$0 => str_hlu /<: str_jep$0)) or
               not(not([] /<: NATURAL)))
          THEN
            str_gxq, str_hul, str_fkv, str_sor, str_yci
            <--
            str_nbx
              ((bool
                  (not(str_nbj$0'str_rpt /<<: rec(str_sbo: NATURAL1)'str_fgh))
                  (str_rxu)),
               UNION(str_vuu, str_gth, str_yem, str_zbg, str_ljl).
               (str_rxt /<: str_bzt$0 => MAXINT < str_eyo$0|
                INTER(str_rdw, str_oow, str_ssq, str_fhn, str_syg, str_gzo).
                (not
                   ({ str_lyh, str_uad, str_cwc, str_zqw, str_okf, str_vjl,
                      str_fpt
                      |
                      str_lov$0 <<: str_gmy$0 } :
                    str_cup)|
                 struct(str_lzf: INT))),
               (bool
                  (#(str_sto, str_uub, str_jze, str_pyo, str_plh).
                   (not(str_rix <: STRING => str_kur : str_sch$0))) mod
                (union(str_poh$0))),
               struct
                 (str_ywy:
                  rec
                    (str_ood:
                     rec
                       (str_jkf:
                        {str_quk,
                         str_lci,
                         str_ccs$0,
                         ({str_okw, str_mxo, str_qgk, str_xfg$0, str_uin$0,
                           str_zmf}
                          ,
                          str_xdh$0),
                         NAT,
                         str_ujq,
                         str_qtq,
                         NAT1}),
                     str_zqc: (str_okx |-> str_hym),
                     str_uek: str_lsi$0,
                     str_ppt: STRING),
                  str_lky: str_iol,
                  str_svd: NATURAL),
               (iseq1
                  (struct
                     (str_kgz: str_pua,
                      str_mqp: str_hrj,
                      str_pat: str_rdw$0,
                      str_esr:
                      [str_nfw,
                       INTER(str_kdr, str_ngn, str_jsy).
                       (str_yez$0 <= BOOL|
                        rec
                          (str_rnr:
                           %
                             (str_wlw, str_afu, str_uwm, str_lck, str_evl,
                              str_pfb, str_mia, str_yug, str_mtq, str_tgk,
                              str_jux).
                           (str_bxl$0 /<<: str_vgh| str_xtd$0)))],
                      str_vjt: str_vcd,
                      str_wbz: str_nee$0,
                      str_lpl: (NATURAL(str_vpu$0))))),
               bool
                 (not
                    (not
                       (!
                          (str_zyh, str_aft, str_wpn, str_pis, str_lky,
                           str_eja, str_ukq).
                        (not(not(not(str_erw /<<: str_zuo))))))),
               bool
                 (INTER(str_pdf, str_lyi).
                  (#
                     (str_joi, str_acz, str_kox, str_yjv, str_ent, str_ihf,
                      str_joq, str_jkw, str_vch).
                   (FALSE <<: str_ndu)|
                   str_bck$0'str_pec) >=
                  str_cud$0 /|\
                  SIGMA
                    (str_lqo, str_avh, str_squ, str_foy, str_pep, str_nor,
                     str_kfc, str_qfd).
                  (str_iir /= str_hgg| TRUE)),
               struct
                 (str_hri: NATURAL,
                  str_awu:
                  [rec
                     (str_ijq: str_zul,
                      str_els: str_git$0,
                      str_ytj: BOOL,
                      str_whg: str_mky$0,
                      str_olz: str_zop$0,
                      str_yuq: {},
                      str_wjj: str_tzh)],
                  str_wem: str_szu,
                  str_tmy:
                  bool
                    (#(str_nsy, str_muu, str_svp, str_pgo, str_gad, str_cnh).
                     (str_vhz$0 <: str_xly)),
                  str_vrc:
                  { str_gxr, str_mgm, str_fcq, str_keu, str_mxj, str_cka,
                    str_erj, str_wrz, str_ptb
                    |
                    FALSE /: str_ust }
                    'str_gxb),
               rec
                 (str_tjh: {str_kon$0, str_gdl, str_rfx$0, str_ars$0},
                  str_bno: str_laa$0,
                  str_nyr: [],
                  str_hcz: STRING,
                  str_qlw:
                  { str_dyx, str_zlb, str_bkw, str_yfx, str_zqi, str_qrd,
                    str_can, str_whg, str_khq, str_iqt
                    |
                    #(str_vsb, str_spy, str_vfb, str_qlk, str_hjv, str_ypt).
                    (INT < []) },
                  str_csb:
                  [TRUE,
                   bool(#(str_syr).(BOOL <: str_ecl)),
                   str_fuo$0,
                   str_yqk$0,
                   str_tkd],
                  str_zoc: str_sur))
          END ||
          WHILE
            not
              (not
                 (not(str_kig$0 /<: str_jvw$0) &
                  !
                    (str_aoz, str_weq, str_jen, str_mgb, str_uwf, str_qqx,
                     str_eot, str_pfd, str_bzz).
                  (NAT1 < str_unw$0)))
          DO
            str_ywq, str_url, str_cdp, str_zyj, str_bqr, str_ugh, str_vot,
            str_rvu, str_ern, str_gml :(
              !(str_sqd, str_bxa, str_scm, str_nsl, str_iyb).
              ([str_dcc, 9774, (BOOL |-> INT), INT] >=
               bool
                 ([NAT1, 7, str_gkx$0, str_uwk$0, str_vap$0, str_voi] /=
                  str_dey$0))
            )
          INVARIANT
            str_ckn$0 < str_ltp <=>
            [([MAXINT, str_mcq, str_zgq$0, str_geh$0, str_lqe$0][STRING]),
             str_lkx$0,
             str_dxg,
             FALSE,
             str_uad$0,
             NAT1,
             struct
               (str_ftr: str_wap$0,
                str_pua: str_saw$0,
                str_adm: str_mbq$0,
                str_bww: str_yqj$0,
                str_ttj: TRUE,
                str_umd: str_ofw$0,
                str_pai: str_ccd,
                str_hbo: MININT),
             MININT] <=
            struct(str_hie: str_men, str_gxk: str_lgl)
          VARIANT
            rec
              (str_ntg:
               struct
                 (str_qyi: INTEGER,
                  str_bei:
                  PI
                    (str_jki, str_nct, str_dff, str_eal, str_cjs, str_rpj,
                     str_jwi, str_ftl, str_bny).
                  (str_zkm /<<: str_aqt$0|
                   [str_fop, str_bwg, str_mtg, str_keq$0, str_wxm$0, str_smd])),
               str_wot: (str_vpg$0 -> str_fzf),
               str_bnq: str_duh$0'str_opu)
              'str_bbe
          END
        END ;
        skip
      END ||
      str_ier, str_rwb <-- str_mgc
    END
  END;

  str_bpe, str_tpm, str_qnf, str_kji, str_nhe
  <--
  str_oyp (str_jmu, str_clb, str_tts, str_mif, str_kmk)
  =
  CHOICE
    skip ||
    str_ecg'str_tka
    :=
    bool
      (not(not(str_eom > str_yfm$0)) =>
       btree(bool(str_yir$0 <: str_uld)) /: str_ebn)
  OR
    ANY
      str_vtg, str_upw, str_qyc, str_tbj, str_bar, str_cnw, str_vcl, str_jbl,
      str_ghk, str_euh
    WHERE
      not
        (!(str_zxm, str_nyf, str_etl, str_zou, str_azv).
         (#
            (str_bhu, str_som, str_cps, str_dwb, str_qnb, str_gos, str_mut,
             str_aee, str_ras).
          (!
             (str_xba, str_hmx, str_inv, str_nip, str_guk, str_idr, str_wxx,
              str_znb, str_gsk).
           (#
              (str_dwz, str_lle, str_fut, str_omq, str_ncd, str_cfe, str_jpm,
               str_nfo, str_mnn).
            (not(not(str_qia$0 < str_fau)))))))
    THEN
      CASE
        bool
          (!(str_xew, str_ptl).
           (!(str_cvz, str_ovp).
            (#
               (str_lai, str_bnc, str_cfm, str_jiq, str_ket, str_oij,
                str_aud, str_qzf, str_pns).
             (!
                (str_jaz, str_sws, str_vjs, str_qes, str_pfp, str_dzj,
                 str_lju, str_ewx, str_rvc, str_wik, str_hns).
              (str_kdd <= str_ybq) =>
              !
                (str_jnj, str_npb, str_mhs, str_tff, str_jrk, str_znf, str_wmj).
              (NATURAL > str_yzd)))))
        OF
        EITHER
          INTER
            (str_bcf, str_xyb, str_hxv, str_gsm, str_aja, str_mgy, str_ydy,
             str_xxt, str_lad, str_cgd, str_qit).
          (not
             (#
                (str_tro, str_oed, str_ggk, str_pjs, str_tel, str_kcn,
                 str_dyj, str_ppo).
              (MININT /= STRING =>
               #
                 (str_spi, str_wga, str_cge, str_hxi, str_bpc, str_efk,
                  str_dzo, str_aup, str_rpx).
               (str_kms >= str_uhz$0 |-> str_lnp)))|
           str_oek)
        THEN
          str_iza, str_mty
          <--
          str_rvs
            ((rec
                (str_jxp: str_arn,
                 str_llp: str_iwy,
                 str_gza: str_suy$0,
                 str_qks: STRING,
                 str_upx: str_gqf$0,
                 str_tsu: str_ito,
                 str_ybb: str_kua$0)
                (struct
                   (str_gqt: NAT,
                    str_xdb: str_lmc$0,
                    str_lkd: {str_ors}'str_wuf,
                    str_pbq: (seq1(INT)),
                    str_nvk: NAT,
                    str_kfl:
                    struct
                      (str_qpw: [],
                       str_cpe: str_wuu$0,
                       str_yyq: INT,
                       str_gqj: str_hag$0)))),
             INTER
               (str_icf, str_oee, str_pou, str_yry, str_yue, str_wio,
                str_riw, str_mji, str_rgo).
             (NAT1 > str_zno$0|
              SIGMA(str_hqf, str_vao, str_tjs, str_euv, str_epn).
              (INT > [str_ktk$0, str_cmt$0](str_ewy$0)|
               MININT \/ (max(str_htz)))))
        OR
          (struct
             (str_fzf: INTEGER,
              str_tlw: str_muo,
              str_ygn: (closure(str_ezi$0)),
              str_aaj: str_wru,
              str_tgg: str_dou,
              str_yuu: str_zor$0,
              str_twd: str_dcw$0) +->
           {[str_wxr$0,
             {INT, 1},
             INTEGER,
             NAT1,
             str_jna$0,
             str_pps,
             NATURAL,
             str_bxb]})
            (str_tyg)
        THEN
          ANY
            str_udm, str_dqi, str_htr
          WHERE
            (not(str_wdq$0 /<<: str_kkm$0) <=>
             !(str_laa).
             (#(str_yxu, str_kvg, str_joc, str_gpy, str_ikd, str_rob).
              (BOOL = str_kam$0))) or
            not
              (#
                 (str_ooc, str_hku, str_apt, str_qbj, str_orb, str_eco,
                  str_gof, str_jgr).
               (str_pop$0 /<<: NAT1))
          THEN
            str_ifb, str_vre, str_cbv, str_exn, str_qev, str_svf, str_pjg,
            str_rcb, str_edx, str_fem, str_zki
            :=
            %(str_uve).
            (MAXINT : str_gup$0|
             ((MININT >-> [NAT, str_ayi$0, NAT, str_qoq]) -> str_lxo)
             ,
             [1, str_yid$0, str_svc$0, TRUE, (str_wet$0 <<| []), str_amo$0])
          END
        ELSE
          WHILE
            !(str_rst, str_nck, str_alc).
            (!
               (str_amu, str_nnb, str_vzj, str_fln, str_rkn, str_wpm,
                str_scq, str_jwd).
             (not
                (#
                   (str_bwp, str_nvt, str_xut, str_usx, str_egy, str_zsx,
                    str_ckr, str_lzw, str_ftt, str_aep).
                 (str_xjp /= str_usl)))) &
            bool(TRUE >= str_lip) /<: NATURAL1
          DO
            LET
              str_hek, str_lyf, str_are, str_wtx, str_jex
            BE
              str_sns
              =
              { str_wgc, str_rag, str_pqj, str_oho, str_xge, str_czw
                |
                !
                  (str_jfk, str_mdu, str_qzy, str_bpg, str_wvw, str_qtj,
                   str_hww).
                (not(!(str_xsq).(NATURAL = NAT1'str_jen))) }
                'str_hlu&
              str_byt
              =
              card
                ({(str_hig$0 >->>
                   bool
                     (str_grj : str_erl$0 =>
                      #(str_bbn, str_iei, str_wrw).(str_edg$0 /: str_jwp))),
                  str_cdn,
                  NATURAL,
                  str_dmx,
                  str_nqk,
                  str_kgk$0,
                  str_csu$0})&
              str_qjr
              =
              bool
                (not
                   (bool(str_dkf(str_spd$0) : NAT) >=
                    %(str_acx). (str_zoi$0 >= str_tfz| str_mpy)))&
              str_aqc
              =
              { str_zih, str_gkm, str_pmo, str_ohn
                |
                str_ryd$0 >= BOOL & TRUE /= str_wsr$0 }
                'str_knq
              |->
              (perm(MININT <+ NATURAL))'str_cua&
              str_gsc
              =
              {str_pfs$0,
               str_dhj$0,
               (str_wcr$0~),
               { str_dtc, str_fwo, str_yhd, str_afk, str_jnr, str_exn
                 |
                 !
                   (str_cwa, str_bmi, str_yto, str_jly, str_zkv, str_gqw,
                    str_vzr, str_sva, str_jzb, str_rsz, str_oxa).
                 (str_pao$0 <= str_htw$0) or
                 238 /<<: {} }}
              |->
              (str_jgh \/ str_bvs$0)&
              str_cio
              =
              str_pdj$0
                [[(rec
                     (str_dfe: INTEGER,
                      str_usd: str_ftd,
                      str_prk: str_zwf,
                      str_tfg: STRING,
                      str_szb: { str_eqj | str_cqq <= str_ndq'str_vsx },
                      str_ltr: str_ayk$0)
                   ,
                   BOOL)]]
            IN
              str_qyn, str_egx, str_lex, str_bwb, str_tnd
              <--
              str_cot
                (({ str_jaj | not(min(MAXINT) >= str_amk) }(NATURAL1))
                   'str_uqk
                   'str_ead,
                 { str_geh, str_mux, str_gyx, str_ueo, str_dkr, str_lpj,
                   str_xtg, str_jow
                   |
                   !(str_ldo, str_nuo, str_ify, str_xro).
                   (TRUE /:
                    [UNION(str_uyc, str_eoq, str_rdy, str_tpv).
                     ({} /= str_zcr| NAT),
                     str_psr$0,
                     rec
                       (str_uqn: str_zmo$0,
                        str_yfa: str_kuz$0,
                        str_yux: str_bxc$0,
                        str_uln: TRUE,
                        str_dio: 1,
                        str_ref: NATURAL1,
                        str_suv: {},
                        str_stj: STRING),
                     FALSE,
                     str_xzk$0,
                     str_jrm]
                      'str_mzq) },
                 (UNION
                    (str_vbp, str_fqq, str_fri, str_oct, str_pmd, str_oeu,
                     str_twv, str_obg, str_fed, str_lkf, str_vjq).
                  (str_evx$0 : FALSE| FIN1(str_ker$0'str_emp(str_urn)))
                  ,
                  {FALSE}'str_agk),
                 [bool(NATURAL1 = str_kgx),
                  {str_gsr,
                   {(str_zwn$0 >-> str_hjw),
                    {},
                    bool(str_lui$0 >= STRING),
                    str_mvb$0,
                    PI(str_ggd, str_gyg, str_smb, str_yzg, str_oea).
                    (str_pwz$0 : str_juk| NAT)},
                   str_ich,
                   str_qfx$0,
                   INTEGER,
                   str_ost,
                   {},
                   MININT},
                  INT,
                  BOOL,
                  TRUE,
                  str_lxz$0],
                 bool
                   (not
                      (!
                         (str_swa, str_nxv, str_ziz, str_dao, str_qsm,
                          str_tkb, str_tfi).
                       (not
                          ({ str_dkm, str_vrg, str_gcw, str_wfq, str_iuy,
                             str_kgw
                             |
                             str_qth /<: 59 & NAT /: INT } =
                           str_uvl$0)))),
                 (bin
                    ({NAT1,
                      ({} , str_ulp),
                      (prj1(bool(str_fgb /= {} & str_lil$0 < str_icn)))
                        'str_ufk})),
                 UNION(str_bvp, str_lnr, str_fxp, str_ppl, str_chb, str_xtf).
                 (rel
                    ({ str_kbl, str_rmo, str_pkb, str_xux, str_usb, str_whi,
                       str_uwt, str_ssp
                       |
                       not(4 /: str_tfo$0) }) >=
                  str_ryy|
                  rec
                    (str_eye: str_byc,
                     str_agq: (rel(MAXINT)),
                     str_ekg: str_bru)),
                 PI
                   (str_mea, str_qyr, str_hpj, str_uwc, str_rot, str_juq,
                    str_zsw, str_rvr, str_ddu, str_eso, str_bgd).
                 (!
                    (str_zxn, str_wgv, str_yxo, str_vqx, str_dhu, str_grh,
                     str_bpc, str_ozq, str_lkp, str_del, str_grg).
                  (!
                     (str_icd, str_oiq, str_wnp, str_nxg, str_xtm, str_ozb,
                      str_vfg, str_fny, str_mkg).
                   (not
                      (#(str_lew, str_htj, str_zgf, str_msa, str_fin).
                       (not(str_uwh /: NAT1)))))|
                  UNION(str_erf). (MAXINT /: str_kti| NAT)),
                 bool
                   ({str_pyk}[BOOL] >=
                    rec
                      (str_voc: str_xhv,
                       str_biy: (str_abp |-> str_zln),
                       str_xko: str_qja$0'str_ynx)),
                 [[STRING, FALSE, str_nvu, str_uhg$0, str_abt, str_vml],
                  rec
                    (str_lhy: NATURAL,
                     str_npq:
                     rec
                       (str_umi: (POW1(str_tob$0)),
                        str_rdo: str_ads,
                        str_hes: str_dhg$0,
                        str_uve: INT,
                        str_tcm: ((str_iyy |-> str_qow) - TRUE),
                        str_qpm: str_nxz$0,
                        str_myl: FALSE)),
                  INTEGER])
            END
          INVARIANT
            #(str_ibm, str_ckb).
            (bool(!(str_zli, str_vkr, str_wkb).(str_bru$0 /: [])) >=
             { str_qwy | not(str_ujv > {} & str_qbj$0 > str_yiw$0) })
          VARIANT
            struct
              (str_mgj:
               struct
                 (str_xzk: str_czv,
                  str_qpe: BOOL,
                  str_hlu: str_kfj$0,
                  str_whi: str_neg,
                  str_bvq: str_kyy,
                  str_sur: str_uqs),
               str_fhy: str_jav$0'str_hje)
              (struct
                 (str_brd:
                  {str_xbt, str_cym$0, { str_wpl | str_uos$0 /<<: str_gib }},
                  str_ris: str_sth,
                  str_iun: str_kji$0))
          END
        END
      END
    END
  OR
    skip
  OR
    str_rhc'str_yyn
    :=
    PI(str_rve, str_knv, str_pmk, str_ead, str_lyw, str_bzb).
    (not(not(INTEGER < str_ssz$0 |>> str_gkj))| str_ttx$0(str_klh$0'str_sxm))
  END;

  str_avx
    (str_tmi, str_mjb, str_cvv, str_rwq, str_uzd, str_qez, str_qsi, str_dgx)
  =
  IF
    #(str_ttx, str_vrh, str_xde).
    (!(str_fwo, str_owi, str_jdy, str_ach, str_qsg, str_sib, str_uho).
     (union(str_dfq$0) <= str_oap$0(card(sizet(MAXINT)))))
  THEN
    str_qxe'str_esz
    :=
    {UNION
       (str_tau, str_dwz, str_mra, str_tvg, str_pms, str_jmk, str_ixl,
        str_pyn, str_lxo).
     (!(str_spe, str_qib).(str_iak /<<: str_kfb$0)| str_uml),
     BOOL,
     str_wus$0,
     (str_zox$0 * (str_phr , INTEGER)),
     (bool(str_hru$0 > str_zrt$0)(str_oqq)),
     str_jdo,
     str_yge}
  ELSIF
    !(str_tdo, str_aez, str_wwg, str_cws, str_lzh, str_zcc).
    (!(str_ktn, str_tyh).
     ({} /= str_xrp$0 &
      #
        (str_plt, str_nou, str_hgs, str_pln, str_eqe, str_phd, str_orn,
         str_zux, str_sol, str_aoh).
      (not(str_tpy <: str_lqo <=> str_zkb : str_jke$0))))
  THEN
    ASSERT
      str_fzx$0 , str_gyh /:
      rec
        (str_epv:
         (bool
            (str_sht <<:
             [str_lyl$0, str_axv$0, str_hyz, MININT, str_clb, str_zeq$0, INT])
            (str_ker$0)))
    THEN
      str_ppq :(
        [str_kwj,
         str_hah$0,
         { str_zhw | not(not(MAXINT > str_tqb => NATURAL = INT)) },
         str_zxn] /=
        bool(str_att$0 >= str_jjx$0)
      )
    END
  ELSIF
    !(str_rnw, str_xhs).
    (not
       (not
          (!(str_bcw, str_zxd, str_dmq, str_cdh, str_oiz, str_otm).
           (#(str_bjt, str_sip, str_nay, str_ejv, str_jjm, str_xqr, str_ubu).
            (not(not(MININT >= str_pie)))))))
  THEN
    IF
      !(str_idm, str_ixp, str_rbo, str_yod, str_yfv, str_rtc, str_pbc).
      (not
         (!(str_nyi, str_jxp).
          (!
             (str_pty, str_zaw, str_ifm, str_xvp, str_awx, str_xog, str_prn,
              str_omc, str_iza, str_ete, str_oqd).
           (str_itm >
            UNION
              (str_ivs, str_zsd, str_hla, str_mqw, str_lqc, str_psm, str_fst).
            (BOOL /<<: str_luw| str_nun)
              (str_hnf)))))
    THEN
      VAR
        str_cwu, str_efv, str_liz, str_ibu, str_vqo, str_qmv, str_vwe,
        str_mhl, str_jea, str_upe
      IN
        str_riy, str_uxx, str_xqi, str_tvq, str_qiy, str_ivp, str_ttm,
        str_cwh
        :=
        ([[[], str_eqx, [], str_dqa, str_hjh, (str_akk$0 + str_bsz), BOOL],
          str_ipe$0,
          str_few,
          (son(NAT)),
          str_ugq$0] <+
         str_zuh)
          'str_bmt
          'str_jxo
      END
    END
  ELSIF
    !
      (str_ddt, str_rpm, str_hay, str_rpq, str_xtb, str_lrc, str_gla,
       str_mvr, str_lzj, str_jny, str_iwo).
    (#(str_xxr, str_zma, str_vlp).(not(str_qmm /= 0))) &
    (not(str_jtk$0 <= str_yvj) =>
     (str_tzy /= str_sol$0 <=> str_owp <= str_twr$0))
  THEN
    ANY
      str_hss, str_osj
    WHERE
      #(str_dhp, str_yhe, str_amk).
      (!(str_nqy, str_rgj, str_hkd).
       (#(str_dby, str_aim, str_qof).
        (#(str_krl, str_qtm, str_ueq, str_qqj).(str_xiq$0 <: [])) =>
        !
          (str_gxk, str_qho, str_xak, str_wqt, str_aoy, str_pfn, str_qtg,
           str_awi).
        (NATURAL1 /: str_lyg & str_wgb = str_rrj)))
    THEN
      str_cqv'str_fdr
      :=
      {[UNION
          (str_kcq, str_xlu, str_zuw, str_ofp, str_fir, str_rhi, str_szr,
           str_skd).
        (str_zox$0 : STRING| str_nqe <| NATURAL1)],
       bool
         (!
            (str_sld, str_ybh, str_jpv, str_agq, str_guc, str_nvu, str_psh,
             str_nhh).
          (#
             (str_gli, str_hvq, str_glx, str_ypg, str_lha, str_tmr, str_hzk,
              str_dri).
           (str_yex : str_lay$0)))} ||
      BEGIN
        str_adu 
          (
            (card
               ([struct
                   (str_tyg: str_krh,
                    str_oot: INTEGER,
                    str_vah: str_wkh$0,
                    str_xpe: MININT,
                    str_ewj: str_dml,
                    str_ihk: NAT1),
                 str_jck,
                 { str_knl | str_qfw$0 /: BOOL => INT > str_ybt },
                 bool(BOOL < INTEGER)]))
              'str_gis
          )
          (
            bin
              (bool
                 (!
                    (str_imx, str_hgt, str_bay, str_wif, str_fan, str_ink,
                     str_ure, str_yal, str_pci, str_gwh, str_hho).
                  (not
                     (MAXINT /= TRUE =>
                      #
                        (str_kvb, str_oiz, str_xtk, str_kdq, str_cab,
                         str_ygz, str_eof, str_jrl, str_shm).
                      (str_ieo = str_iyf$0)) &
                   str_dzu$0 : {})))
          )
          (
            struct
              (str_qes: str_cin,
               str_lnj: str_jhn,
               str_kqv:
               INTER(str_kwa, str_tgs, str_kjy, str_wat, str_pxf).
               (!(str_zsc, str_tzc, str_nxf, str_wxa, str_kyu, str_ijp).
                (str_dxv = str_ewy$0)|
                { str_ptt, str_duw, str_qfc, str_oid, str_qfq, str_vhx,
                  str_vlb, str_qld, str_izn, str_yfi, str_cqc
                  |
                  #
                    (str_vbs, str_mcc, str_gma, str_rzu, str_urv, str_kol,
                     str_byc, str_unw).
                  (#
                     (str_ukd, str_pnf, str_wol, str_vsd, str_gqd, str_dbj,
                      str_ixq, str_mge, str_yee).
                   (MAXINT /<: str_mhc$0 <=> str_gjx = str_lqj)) }),
               str_het: STRING,
               str_nqa: str_gxn)
          )
          (
            struct
              (str_dmf:
               (sons
                  (STRING
                   ,
                   ((union(NATURAL1))
                      (rec
                         (str_kqa: str_vfn$0,
                          str_inj: NATURAL,
                          str_rlb: str_rqk,
                          str_hfj: FALSE,
                          str_lkt: MAXINT,
                          str_llw: str_msv,
                          str_qxd: str_any$0,
                          str_vbh: STRING)))
                     'str_wvi)))
          )
          (
            [str_wyw]
            |->
            rec
              (str_uwe: str_sbu,
               str_cfi: str_mzj$0,
               str_qci: str_ibh,
               str_vfv: bool(str_qee /<<: INTEGER'str_dkc'str_fdg),
               str_gxv: str_qdu$0,
               str_dwl: NAT1,
               str_ohp: str_tfu$0)
          )
        
        :=
        [str_tkw$0,
         (NATURAL(str_arz)),
         str_emk,
         str_rvu,
         str_mbd,
         str_vzb$0,
         (rev(str_khy$0)),
         str_hnc] -
        rec
          (str_jxj: str_mva$0,
           str_byu: (size(str_gqf$0)),
           str_uui: str_yqr$0,
           str_ymi: MAXINT,
           str_rrm: (str_zzt(BOOL))) ||
        str_ghn'str_dtd
        :=
        const
          (struct
             (str_xth: str_nss$0,
              str_hag: UNION(str_fzr). (MAXINT /<: str_zst| str_txf$0),
              str_sqv:
              [rec
                 (str_hia: TRUE,
                  str_xfc: str_zld$0,
                  str_aan: str_wul$0,
                  str_pfe: (str_eqs(str_vke$0)),
                  str_vuq: str_zdr$0,
                  str_iut: MAXINT,
                  str_sxn: str_quo)]
                'str_rtp,
              str_omp: str_uvv$0,
              str_dgp: str_oug$0,
              str_hhx: str_lbe$0,
              str_xnt: FALSE,
              str_dzu: str_jnu))
      END
    END
  ELSIF
    not
      ((str_svv < NATURAL1 <=>
        ([] /<: str_ofl$0 <=>
         #(str_vqs, str_kkg, str_hau).(str_xpp /: NATURAL1))) &
       (NAT : str_bex$0 <=> str_brz /= str_nai))
  THEN
    str_vwl, str_nem
    <--
    str_uja
      ((rec
          (str_qad: bool(MAXINT /: str_par$0),
           str_jhz: [],
           str_snc:
           (str_fdv
            |->
            rec
              (str_vfo: str_wjl,
               str_qrk: str_yzs$0,
               str_nag: str_uim$0,
               str_lvy: str_gok$0,
               str_nhj: str_soi,
               str_gob: STRING,
               str_tif: str_hwl,
               str_ovj: str_gwq)))
          (rec
             (str_wno: str_jvt$0,
              str_exz: STRING,
              str_pty: NAT,
              str_idy: str_cez$0,
              str_xrs: str_nvx,
              str_pju: str_cpn,
              str_bbd: str_owx$0))),
       {NAT1,
        SIGMA(str_vus, str_iga, str_phq, str_yfh, str_wyb, str_ehr, str_rpq).
        (str_thc$0 >= {} & str_hdp /<<: STRING| NAT),
        NAT1,
        str_bhx$0'str_uxh'str_mbj,
        { str_zbb, str_fap, str_whz, str_usc
          |
          str_udm >= str_nbz$0 & NAT <<: str_bil },
        str_eox$0,
        str_vtp$0,
        str_moi$0},
       rec
         (str_ndo: str_wfs,
          str_lwk: str_mgw,
          str_miu: NATURAL,
          str_zxh: NAT,
          str_jya: str_rru,
          str_bvx: str_kpx$0,
          str_dzt:
          struct
            (str_nad:
             SIGMA
               (str_oec, str_bsx, str_mhj, str_hkv, str_eoe, str_ues,
                str_fky, str_faj).
             (str_djp$0 > str_uwt$0| str_hks),
             str_lbc:
             rec
               (str_mzj: str_gqo,
                str_fgi:
                rec
                  (str_goo: str_ida$0,
                   str_ppd: str_cor,
                   str_ypu: str_nkj,
                   str_ipz: NAT1),
                str_wkg: str_meu,
                str_tnf: str_pxw$0,
                str_yuo: str_djl,
                str_pxn: str_nhf$0,
                str_uuz: str_jgf$0)
               'str_rdl,
             str_vmv: {BOOL})),
       {rec
          (str_vcl: TRUE,
           str_aos: str_wfb$0,
           str_guu: str_ipv$0,
           str_cjd: (str_fma$0 , str_hyr),
           str_lyh: bool(STRING <: str_jds$0),
           str_sey: NATURAL,
           str_rte: TRUE),
        SIGMA(str_uqk, str_wnh, str_wit).
        (str_kjs$0 /<: str_uqg| str_yie(str_dnw)),
        (str_wet$0 ^ TRUE)},
       (rec
          (str_fhj: NATURAL,
           str_mvr: str_uvk,
           str_frd: str_oxm,
           str_zqu: { str_viy, str_ckt, str_kdl | str_sia$0 /<<: str_yfx$0 },
           str_yda: str_ddc) <->
        (str_oqi$0
           ({INT,
             STRING,
             BOOL,
             MAXINT,
             bool
               (#
                  (str_gdy, str_wxs, str_kbf, str_lzh, str_oqe, str_rsy,
                   str_oyx).
                (str_wsv > MAXINT)),
             STRING}))),
       (str_xlw
          ({NATURAL,
            [FALSE, str_noz$0, str_ppr, str_yfo],
            (bool(FALSE /: FALSE) >< str_jpc),
            (struct(str_hsf: str_ntk, str_brh: str_ctk$0, str_edu: str_efd$0)
             |->
             str_ycb$0)})))
  ELSIF
    not
      (%(str_ifd, str_zom, str_uwl).
       (#(str_bab, str_fis, str_gfw, str_ipu).(str_czn >= {})|
        SIGMA(str_hac, str_zap, str_zjt, str_bvx, str_hwe, str_hvh, str_omj).
        (str_xfu$0 /<: NATURAL| bool(MININT /= str_cwm))) /<<:
       bool(str_ojn /: str_kos))
  THEN
    str_ulo, str_esh, str_kci, str_crf, str_pgf, str_rxb, str_tzq
    <--
    str_guc
      ((str_lga$0 <->
        [struct
           (str_krp: str_ajz,
            str_mys: [STRING, str_uyx, BOOL, str_aao, str_lwr$0, {}]),
         PI(str_von, str_dzs, str_zpv).
         (!(str_vqm, str_yac, str_gpt, str_ufd, str_iff).
          (str_vwu$0 /<<: MAXINT)|
          str_cbb)]))
  ELSIF
    not
      (not
         (#(str_sod).
          (struct(str_gxw: str_xpf$0, str_rkh: str_wpg, str_ekm: str_fac$0) <
           rec
             (str_klm: str_fxy$0,
              str_qyg:
              [str_wtr, NATURAL1, NATURAL, NAT, INTEGER, str_vib$0, str_bmq,
               "str_wli"],
              str_ewx: str_kvz,
              str_qev: str_jxw$0,
              str_gat: str_flu$0,
              str_xho: str_rih,
              str_gii: MAXINT))))
  THEN
    skip
  END

LOCAL_OPERATIONS
  str_btr (str_xnr, str_ldf, str_sej, str_xhe) =
  CASE
    (UNION(str_kpv, str_zyp, str_ina, str_aeq, str_ylq, str_ohb).
     (str_imp$0 > str_ldb| str_zde$0)
       ~)
    |->
    bool
      (!
         (str_otn, str_gmf, str_dqm, str_fto, str_igo, str_mtu, str_eno,
          str_sdn, str_qcv).
       (not(str_wam$0 >= str_ggs)) =>
       str_gqx$0 <: str_byf)
    OF
    EITHER
      { str_pbl, str_vdi, str_wbv, str_lpc, str_its, str_hik, str_rzx,
        str_vjq
        |
        not
          (INT <- str_hdl >=
           INTER(str_lxu).
           (#
              (str_tmi, str_vpb, str_puw, str_obi, str_lmv, str_voo, str_fur,
               str_vzb).
            (str_cac$0 = MAXINT)|
            str_adq)
             'str_uvg) }
    THEN
      SELECT
        !
          (str_ovj, str_miy, str_sfk, str_rbd, str_gno, str_vxp, str_fxh,
           str_hqa, str_qtm).
        (#(str_hnq, str_akf, str_nkn, str_xcg, str_uhy).
         (!(str_zjq, str_npu, str_ovz, str_rrq).
          (!
             (str_mds, str_rjb, str_yuo, str_ymb, str_xno, str_zpu, str_uxb,
              str_ndv, str_ywf).
           (not
              (#
                 (str_tpd, str_uil, str_lsf, str_qfw, str_fvs, str_idh,
                  str_jlu).
               (NAT1 /<<: []) or
               str_olo$0 <: NAT)))))
      THEN
        str_wab'str_rpo
        :=
        [((MAXINT(str_jfi , INTEGER))
            ([str_uyu,
              rec
                (str_lai: str_gvo,
                 str_ndk: str_xlb$0,
                 str_pex: str_nep,
                 str_jba: str_qzr,
                 str_asb: str_nnk,
                 str_odj: str_ggp$0,
                 str_xfu: str_pjb$0,
                 str_izo: str_beo$0),
              (str_fcd$0(str_dza$0)),
              str_jib$0,
              str_unq$0]))]
      WHEN
        {NATURAL, TRUE, FALSE, INT}'str_dok <:
        (str_txu$0
         |->
         [str_zog$0, str_acl$0, str_nsu$0, str_fga, MININT, str_vsa, INT]) mod
        { str_vps, str_dlq, str_zxi | str_xlr$0 /<: str_vpn$0 }
      THEN
        str_tcq'str_pay
        :=
        { str_lwm, str_xak, str_dfm, str_qrc, str_fgz, str_sut, str_ilm,
          str_vve, str_yed, str_vtl, str_jey
          |
          [str_pen$0, bool(NAT /<: {}), str_ijc]'str_frd /=
          { str_ygd, str_irn, str_hct | str_its$0 <= str_gtt$0 } }
      WHEN
        !(str_ntm, str_kis).
        (str_szk > struct(str_qmv: str_hpj, str_aca: str_hhr$0)) &
        not(bool(str_wic$0 = str_qqw$0) < str_qls)
      THEN
        SELECT
          !(str_cih, str_ima, str_teu, str_xva, str_sop).
          (str_wyo$0 /: str_jxk) =>
          (str_qzd /<: STRING or
           !(str_rbp, str_bpp, str_yty, str_csg, str_urh).
           (#(str_shd, str_vwp, str_zyq, str_lbf, str_htc, str_fya, str_nal).
            (str_hrq$0 : str_cra) =>
            (str_tsz <: str_mve$0 or str_qpk$0 <<: str_jyz)))
        THEN
          str_qoy, str_sly, str_nxl, str_yww, str_fou, str_nmv, str_htm,
          str_vfn, str_cnp, str_xfx :(
            !(str_gyy).
            (#
               (str_mnm, str_qns, str_dwo, str_efl, str_dww, str_ksk,
                str_bvw, str_elj, str_qic, str_idn).
             (#(str_lry, str_iad).
              (!(str_hbr, str_mkg, str_yez, str_fke, str_tpi).
               (#
                  (str_bzv, str_ttb, str_qmt, str_wtw, str_hze, str_zln,
                   str_yfq).
                (bool(BOOL /<: str_sng$0) < TRUE)))))
          )
        WHEN
          !(str_sor, str_gnf, str_pnr, str_pko, str_imt).
          ({str_hsb, FALSE, str_ybz} :
           struct(str_kfr: (rel(str_ofp$0))) |-> str_yts'str_wjg)
        THEN
          str_duk 
            (
              { str_xkr, str_lpj, str_wqk, str_ahs, str_ywd, str_yoi
                |
                { str_fdv, str_ivy, str_umq, str_ykr, str_gfo, str_vgo,
                  str_dop, str_mni
                  |
                  str_ses$0 <<: str_fdx$0 or str_kje$0 >= [] } /:
                [(str_vpk$0(str_twg))]'str_czg }
            )
            (
              struct
                (str_oyp: str_gbe,
                 str_zlh: str_dbs$0,
                 str_sqh: str_mue$0,
                 str_cos: str_tnn,
                 str_iwa: bool(str_pcg /<<: MAXINT))
                (str_spr ->
                 (struct
                    (str_cpq: str_mni$0,
                     str_vdt: str_uip$0,
                     str_bji: FALSE,
                     str_nbi: str_miw,
                     str_ubd: str_gln$0,
                     str_mkf: str_ulc)
                  |->
                  str_lmt))
            )
            (
              { str_imv, str_hyu, str_lxd, str_ykw, str_ojs, str_cna,
                str_qnj, str_tfu, str_psw, str_nss, str_egj
                |
                struct
                  (str_zft:
                   { str_jem, str_uat, str_iij, str_sls, str_ysr, str_zfp,
                     str_yce, str_pvg, str_vwc, str_wyu, str_ycg
                     |
                     #(str_ioi, str_zlr, str_hms, str_pug, str_map, str_elv).
                     (str_vik$0 >= MININT) },
                   str_crt: "str_vti",
                   str_djw: str_ctb$0,
                   str_ere:
                   %
                     (str_ejq, str_jnv, str_gmz, str_gdj, str_ylm, str_fqy,
                      str_fnt).
                   (str_kpr /<: str_hpb$0| {})
                     'str_xth,
                   str_zvr: str_psd,
                   str_jup: STRING,
                   str_gmw: str_zyj$0) /<<:
                MAXINT }
            )
          
          :=
          rec
            (str_arz: rec(str_lhb: BOOL),
             str_dap:
             (succ
                ((closure1
                    (%(str_osj, str_ijh).
                     (NAT > NAT1|
                      { str_jkt, str_hjd, str_bpp, str_tox, str_rxe, str_rnq,
                        str_cpe
                        |
                        MAXINT : {} })))
                 ,
                 str_eyr$0)))
        WHEN
          !(str_ssi, str_zfw, str_bsi).
          (not
             (#
                (str_qhb, str_zkz, str_iyi, str_hzq, str_arv, str_hxx,
                 str_qmj, str_fir, str_oxk, str_tgh).
              (#
                 (str_zln, str_sgq, str_tyc, str_axb, str_qkh, str_zyu,
                  str_rnr, str_fmg, str_rsk).
               (!(str_pvq, str_biu, str_mty, str_clm, str_hdh).
                (!
                   (str_vxk, str_qmf, str_yqu, str_nah, str_mgm, str_smh,
                    str_bla, str_ojt, str_vrn, str_tbi).
                 (#(str_vox, str_ind, str_wcr, str_gfr, str_zup, str_xwr).
                  (str_njb$0 > str_jba$0)))))))
        THEN
          str_lqc, str_wnp, str_otm, str_ban :(
            #(str_zai, str_bgg, str_ula, str_hpi, str_pao, str_bah).
            (!(str_twd, str_vir, str_jgl, str_qgv, str_qvs, str_pua).
             (#
                (str_viw, str_yur, str_jhi, str_mkn, str_puk, str_oyg,
                 str_vom, str_oom, str_etu, str_cva, str_ged).
              (not(STRING <<: str_vhi) <=> str_zdg$0 , str_sqh <= NATURAL)))
          )
        WHEN
          #(str_cjn, str_rhd, str_iij, str_lbd, str_pgx, str_iau, str_gvv).
          (#(str_dvn).
           (#
              (str_qrj, str_sgw, str_ldw, str_abo, str_fac, str_nvf, str_kdm,
               str_wie, str_vqi, str_xht).
            (!(str_ahu, str_ynv, str_wkj, str_fvf).
             (str_qui <= INT =>
              #(str_nvv, str_kps, str_gbp, str_dct).
              (str_ifj = INTEGER <=> NAT1 >= str_ppf$0)))))
        THEN
          str_dqr 
            (
              struct
                (str_kas:
                 ((prj2(min(str_fhd$0)))
                  ,
                  [FALSE,
                   SIGMA
                     (str_esb, str_olf, str_cjc, str_zwb, str_sdc, str_cte,
                      str_qxk).
                   (NATURAL >= str_xgd| NATURAL1),
                   str_kxr,
                   str_ulj$0,
                   (conc(str_ewd$0))]))
            )
            (
              {str_avf,
               str_ivg,
               INT,
               BOOL,
               (STRING(str_dcb$0)),
               MAXINT,
               str_oku,
               { str_bbb, str_bon, str_cxw, str_oky, str_sti, str_abk,
                 str_wjf, str_xxs, str_uoh
                 |
                 str_fmp$0 <= str_rpe or str_lry$0 /<<: str_ggc }} *
              (closure
                 (struct
                    (str_pvq: str_osf,
                     str_lfu: str_maz$0,
                     str_ksi: str_tqr,
                     str_wtj: str_ehb,
                     str_bli: str_tvn,
                     str_aii: str_pcu)))
            )
            (
              { str_uis, str_kms
                |
                str_brc <<: FALSE &
                #
                  (str_zwg, str_bex, str_dgf, str_tsr, str_oky, str_lku,
                   str_mcp).
                (#(str_uwo, str_vlf, str_xfo, str_jbf).
                 (str_eus$0 <<: INTEGER'str_oag <=> str_yei$0 >= str_iga$0)) }
            )
            (
              struct
                (str_hbl: [],
                 str_ekr:
                 {((str_cjg >->
                    struct
                      (str_sdy: str_wml$0,
                       str_dky: [],
                       str_jia: TRUE,
                       str_gvd: 0,
                       str_imp: str_taa$0,
                       str_ias: INTEGER,
                       str_zsn: str_svn$0)) <-
                   {%(str_qnf, str_xcl, str_vie, str_sab).
                    (FALSE /<<: "str_zbo"| str_ocv$0)})},
                 str_awi: STRING,
                 str_bao: MININT,
                 str_eno: FALSE)
            )
            (
              PI(str_ogb).
              (not(INTEGER = str_yrz) & (str_ogj$0 = str_gvn & NAT /<: BOOL)|
               { str_jiy, str_ood, str_cup, str_nbj, str_eho, str_zwp
                 |
                 str_sxx < str_gyd })
                'str_nbw
            )
          
          :=
          SIGMA
            (str_ptx, str_tjl, str_rxa, str_vwj, str_qcb, str_zph, str_bxb,
             str_pwx, str_eod, str_hkg, str_arr).
          (#(str_gvj, str_xam, str_tgc, str_hfu, str_lvz, str_sdl).
           (NAT /= str_fqa$0)|
           rec
             (str_hjf: str_elq$0,
              str_mam: {str_hrv, (size(str_oyk)), str_udu$0},
              str_gzr: MININT,
              str_imt: str_bsv,
              str_knx: (str_eey$0 <| NAT1),
              str_joo: str_tez$0))
            'str_cyu
        WHEN
          NAT1 <<: str_kwt =>
          struct
            (str_rwb: (str_blj$0(str_bqt$0)),
             str_xlx: NAT1,
             str_aoc: INT,
             str_cjp: str_pwn,
             str_zzo: MAXINT,
             str_xtn: str_jpp) /<<:
          PI(str_kfx, str_gxg).
          ((INT <<: str_ntw or str_skc$0 /<: str_toe$0) <=>
           str_llq$0 >= str_idz|
           str_xqx$0)
        THEN
          str_rvy 
            (
              bool
                (#
                   (str_qgj, str_fid, str_poj, str_iph, str_dli, str_ihk,
                    str_wzx, str_uei).
                 (!(str_ltz, str_nrd, str_zby, str_jxy).
                  (!
                     (str_wud, str_uhk, str_kfo, str_pof, str_xot, str_zyv,
                      str_iae, str_daa, str_eoa, str_igm, str_ntr).
                   (FALSE /<<: {} => not(not(INT /<<: str_ihs$0))))))
            )
            (
              {INT,
               []'str_vya,
               str_dag,
               bool
                 (!(str_edu).
                  (not
                     (#(str_hsk).
                      (#(str_vgo, str_xpn, str_cvl, str_mdk).
                       (str_std < str_xvo)))))}
            )
            (
              { str_ppv
                |
                not
                  (str_lfn$0 >= str_lba or
                   str_nka$0 <:
                   (front(str_lgy)) , struct(str_fsd: 2, str_yec: NAT)) }
            )
            (
              PI(str_gsh).
              (str_gbg >= NATURAL1|
               struct
                 (str_hum: STRING,
                  str_cwj: str_hpn$0,
                  str_yyd: str_ppz$0,
                  str_dve: str_zlg$0,
                  str_vey: {str_eke$0, INTEGER},
                  str_qll:
                  bool(str_ggu$0 <<: STRING , str_mzq => str_dnq > NAT1),
                  str_pdi: str_bss,
                  str_fbl: str_cvb))
            )
            (
              rec
                (str_kim: NATURAL,
                 str_lpo:
                 rec
                   (str_ymv: str_trd,
                    str_ait: str_xhm$0,
                    str_pje: str_tps$0,
                    str_vig: NAT1,
                    str_ayk: str_ulm),
                 str_rjr: [],
                 str_pdm: str_ttc'str_ojw)
                'str_vpq /
              [str_vuh$0,
               str_fje,
               NATURAL,
               { str_eil, str_xdv, str_mkg, str_fek, str_lpu
                 |
                 NAT1 /: str_gxg$0 }]
            )
            (
              ({str_qgx,
                str_ebn$0,
                (str_mne , [str_dfp$0, str_dov$0, str_awn$0, TRUE]),
                str_xuv$0}
                 (MININT'str_vno)) ^
              (str_esp$0 , str_fwz)
            )
          
          :=
          (str_nzw , {[], str_mte, str_aoe$0, "str_gay"})
          ,
          [SIGMA
             (str_olz, str_cow, str_jyl, str_tnd, str_wpy, str_bns, str_vhb,
              str_bav).
           (MININT /: str_sgg| str_slw),
           {str_kcc$0,
            [],
            struct
              (str_ixs: str_rkf,
               str_fyd: str_mgc,
               str_rds: str_irg,
               str_wtp: str_cqn,
               str_nus: [],
               str_min: NAT1),
            str_ogr$0,
            str_xhw},
           str_pnb$0]
        WHEN
          [str_cmy'str_tsl, str_djx, NAT, str_sta$0, (str_buv(str_gcf))] =
          { str_yqs, str_sqf, str_csy, str_ywu, str_tus, str_lnb, str_utn,
            str_cnd, str_flo
            |
            #
              (str_jgw, str_ust, str_iyy, str_nhu, str_rpf, str_zxs, str_ptc,
               str_rvp).
            (#
               (str_bex, str_nor, str_ceh, str_lqw, str_chw, str_ikg,
                str_cwl, str_ntc, str_zws, str_tdl, str_uqv).
             (str_bks /<<: str_nem)) }
        THEN
          str_idi 
            (
              INTER(str_lrz, str_sxx, str_vqn).
              (#(str_fzu, str_jdk, str_ewl).(str_hih : MININT)|
               {[INT, str_afj, str_tdh$0, str_zjb],
                str_hxm,
                str_fcl,
                (tree
                   ([str_qwi$0,
                     BOOL,
                     rec
                       (str_zji: str_xlv$0,
                        str_sqs: str_kvc,
                        str_whz: str_mlr),
                     str_leg$0])),
                str_emi,
                str_det,
                NATURAL})
            )
            (
              {str_wkk$0,
               [],
               STRING,
               bool(NATURAL1 >= STRING),
               str_psh$0,
               NAT1,
               (MAXINT >->>
                { str_sam, str_xhb, str_psn, str_yvw, str_ykl, str_lyc
                  |
                  !
                    (str_asq, str_oyq, str_xpg, str_fay, str_viq, str_clp,
                     str_art, str_yci, str_jhj, str_pxq, str_uat).
                  ("str_rge" <= str_ieh or FALSE <<: str_ewa) }),
               rec
                 (str_xqh: MAXINT,
                  str_lzl: STRING,
                  str_xwa: str_ptw,
                  str_eof: str_obt)}
            )
            (
              pred
                (UNION
                   (str_skx, str_yva, str_nqg, str_lwl, str_lky, str_zwo,
                    str_jrj).
                 (str_arc <= str_tyq$0 &
                  !(str_xss, str_hlv, str_eal).
                  (bool(str_zzm$0 <<: NATURAL) <: INTEGER)|
                  str_utt))
            )
            (
              ({STRING, INT, str_xmn$0, str_nof$0, str_kmc$0, str_lcv}
                 ({ str_wud, str_npq, str_liy, str_nyx, str_xtr, str_mtj,
                    str_irn, str_fky, str_hms, str_ybx, str_rso
                    |
                    str_ktr < str_hbu$0 }))
              |->
              rec
                (str_zuk:
                 rec(str_die: struct(str_yyi: TRUE, str_yob: str_vig)),
                 str_hzw: str_nqj$0)
            )
            (
              (bool
                 (TRUE /: TRUE or (str_fkm /: str_ufw$0 or STRING < str_acg)) **
               bool
                 (!
                    (str_egu, str_cxp, str_ele, str_hdz, str_cdt, str_hiq,
                     str_rck).
                  (NAT /<: str_ziq)))
                'str_bnu
            )
            (
              { str_odj, str_nga, str_eww, str_ios, str_xpg, str_rsi,
                str_fka, str_fon
                |
                #(str_zzj, str_muj, str_iui, str_nit).(str_uts$0 = str_hfe$0) =>
                #(str_itw, str_god, str_cip, str_vfn, str_zni).
                (!(str_edn, str_ugz).
                 (not(str_puw < str_oul => str_pfy$0 = str_nml))) }
            )
            (
              rec
                (str_nri:
                 rec
                   (str_ylc: NAT,
                    str_hco: str_zjk$0,
                    str_wfe: str_tjw,
                    str_hxd: INT),
                 str_xuf:
                 ((str_ain , TRUE'str_zcw)((NAT1 |-> str_zym$0)'str_bzg)),
                 str_tpr: str_oxw$0,
                 str_eus: INT,
                 str_vjp: MAXINT,
                 str_juf: str_ftd$0,
                 str_qwv: str_enk$0,
                 str_ueu: str_owy$0)
            )
          
          :=
          [BOOL,
           NAT,
           str_via,
           rec(str_ttc: (str_ayb$0 /\ str_ezg)),
           UNION
             (str_mhz, str_bbq, str_vlw, str_tzp, str_vdf, str_dgl, str_wtz,
              str_xjb, str_mst, str_zdd, str_kyr).
           (str_wfq > str_wtr or STRING : MININT|
            UNION
              (str_oft, str_xwj, str_spm, str_ier, str_ngd, str_ytp, str_bmf,
               str_itb).
            ([] >= str_hmk or str_vje <<: []| FALSE))]
        WHEN
          not
            (#(str_rhp, str_dwa, str_fmk).
             (bool(str_hmf$0 : str_ush$0 or MININT > str_vmy) /<:
              str_asu$0(INTEGER))) &
          str_vam /<<: str_arf
        THEN
          skip
        WHEN
          [str_xat, str_tfz$0, str_imz$0, FALSE, STRING] |-> str_yna$0 >
          [str_xuw$0,
           str_oqm$0,
           str_lds,
           TRUE,
           {},
           str_thr$0,
           str_hot$0,
           bool(MININT = str_ocm)]
            'str_fvz
        THEN
          ANY
            str_ozd, str_bcj, str_mnq, str_qhi, str_tsh, str_rem, str_brs,
            str_spr, str_vbj, str_mlf
          WHERE
            #
              (str_mxv, str_tjn, str_ucb, str_ryk, str_age, str_gnc, str_olz,
               str_dlk, str_vfo, str_lvh).
            (#
               (str_vzk, str_pma, str_tdb, str_lbv, str_nut, str_kzn,
                str_nse, str_gol).
             (not
                (#(str_lwx).
                 (#(str_qxf, str_ubl, str_gms, str_xey, str_cyt, str_tqn).
                  (not(not(str_pjb = str_xrr$0)))))))
          THEN
            CASE
              bool
                ([([] |-> str_gtn$0), STRING, str_oaf, INTEGER, BOOL, []] /<<:
                 { str_ybz, str_wcw, str_kub
                   |
                   !(str_ksx, str_mrp, str_zal, str_mdy, str_jhp, str_fjm).
                   (#
                      (str_djd, str_rqp, str_zdg, str_axk, str_wjx, str_ebk,
                       str_szb, str_yvc).
                    (INT /<<: str_gfu)) })
              OF
              EITHER
                [[str_yzv$0, str_pnz],
                 rec
                   (str_hgl: str_vrj,
                    str_yxy: str_ubb,
                    str_pxl:
                    { str_uca, str_jgn, str_pyi, str_alf | str_jco$0 < MAXINT }),
                 str_vjb,
                 NAT1'str_kdu,
                 str_vfg]
                  (%
                     (str_fyx, str_dto, str_hui, str_ygz, str_jzh, str_fbc,
                      str_sat, str_ynl).
                   (str_rvl /= str_lcn$0| MININT))
              THEN
                str_zgs, str_swp :(
                  !
                    (str_idd, str_dvm, str_lrb, str_cbn, str_ogj, str_yyr,
                     str_gbz, str_pdt).
                  (#
                     (str_pct, str_cab, str_cuh, str_inc, str_imy, str_mrs,
                      str_gni, str_cbj).
                   (!(str_xbi, str_bpd, str_yfs).
                    (struct
                       (str_gxr: str_gru,
                        str_erb: NATURAL1,
                        str_dkg: INT,
                        str_ala: INT,
                        str_msk: str_lur$0,
                        str_alb: str_tsz$0,
                        str_ibe: str_jsu$0) >=
                     bool(not(str_ezr$0 /<<: INT)))))
                )
              OR
                struct
                  (str_hzt: STRING,
                   str_jkw:
                   %(str_xqa, str_rgd). (TRUE > str_wta$0| str_hat$0),
                   str_mww:
                   { str_yhc, str_dcy, str_jvk
                     |
                     #
                       (str_eki, str_jif, str_dxd, str_rzw, str_mta, str_wpk,
                        str_cgz, str_vaj, str_stl, str_oox, str_nfi).
                     (str_sxd$0 /: str_qdm$0 or
                      !(str_nyd, str_wnf, str_tdv, str_ohs, str_vgx, str_khs).
                      (str_msu$0 /<<: {})) },
                   str_eyq:
                   [{}, NATURAL, str_sdk$0, str_iad$0, str_vew, str_svd$0])
              THEN
                skip
              OR
                struct
                  (str_hzt: bool(INTEGER > str_bgt$0),
                   str_bgf: str_ijb,
                   str_rma:
                   struct
                     (str_odj: str_sie,
                      str_ttq: str_gti$0,
                      str_ukp: str_hkg$0,
                      str_tyu: TRUE,
                      str_ldx: INT,
                      str_qqz: str_zyi$0,
                      str_xbe: TRUE,
                      str_npa: STRING),
                   str_zok: str_ral$0,
                   str_huz:
                   rec
                     (str_nmb: str_gzs'str_hmg,
                      str_qcs: FALSE,
                      str_fwr: INTEGER,
                      str_yuu: str_lcj,
                      str_owj: {},
                      str_ebo: str_mut$0,
                      str_fbz: STRING),
                   str_cgr: str_lar,
                   str_ksi: (str_rqu$0(str_slh .. str_ffs$0)))
              THEN
                skip
              OR
                ((str_zcd
                    ({ str_pgp, str_qou, str_wgh, str_uvp, str_qut, str_ajn,
                       str_lsj, str_xul, str_slr
                       |
                       INTEGER <: str_kfw }))
                   (INTER
                      (str_gbk, str_doj, str_apn, str_yue, str_bkd, str_rad,
                       str_nfw).
                    (MININT = str_spn| str_dnh))) <-
                [STRING,
                 str_svh$0,
                 NATURAL1,
                 [str_epy, str_oft, str_vlm$0, str_nta$0, str_ogn$0]]
              THEN
                str_uqq, str_erm, str_gys, str_ehw, str_oft
                :=
                [TRUE, {}, str_mgb, NATURAL] <->
                ({ str_oir
                   |
                   #(str_jir, str_kdn, str_jyv, str_jce, str_rwq, str_lcg).
                   (str_qqr = 5) }
                 |->
                 { str_pwz, str_yzj
                   |
                   !(str_exw, str_jrn, str_she, str_szz, str_fsm, str_ulb).
                   (FALSE /<: str_cbh) })
              OR
                { str_xpb, str_zjk
                  |
                  !(str_fav, str_qcv, str_llv, str_tpd, str_kis, str_cjc).
                  (BOOL < FALSE => !(str_vtw).(str_dfx$0 >= FALSE)) or
                  (INT = str_nzq or
                   (str_egr /<: NAT <=> str_obb$0 <<: NATURAL)) }
              THEN
                str_wba 
                  (
                    infix
                      ((conc([str_dii$0])) <|
                       {(str_cir$0(str_jid)), (INTEGER <| str_pww), str_rjl})
                  )
                  (
                    subtree
                      ({ str_jqm, str_flw, str_mlt, str_cvl, str_dqy, str_pin
                         |
                         str_csa$0 > str_pgl$0 <=>
                         (#
                            (str_tse, str_hhp, str_wbx, str_ajj, str_jbv,
                             str_mam, str_xzz, str_kxe, str_oxy, str_gni).
                          (str_ynd$0 >= str_kck$0 <=> [] : str_fsy) =>
                          !
                            (str_vbx, str_prc, str_vis, str_jca, str_tkm,
                             str_icp, str_ysd, str_zxg, str_anq, str_ost,
                             str_vit).
                          (str_fyz = str_aoz)) })
                  )
                  (
                    (str_ele
                       (INTER
                          (str_liy, str_dqj, str_evk, str_jal, str_wnh,
                           str_csm, str_zxq, str_zsm, str_jko, str_oau,
                           str_ufc).
                        (str_jru$0 /: str_kqv$0|
                         struct
                           (str_xyt: 22,
                            str_kyi: str_jvu,
                            str_uab: MININT,
                            str_wyq:
                            ({NATURAL1, str_xji, str_wxl, INTEGER}(str_hdc$0)),
                            str_ukn:
                            [str_hcv, {}, str_eam$0, str_zlv$0, BOOL],
                            str_abq: str_nqn)))) |>>
                    str_hkw$0
                  )
                  (
                    STRING
                      ([NATURAL1,
                        str_zrz$0,
                        rec
                          (str_nbu:
                           { str_epa, str_lna, str_fvu, str_plx, str_oxe,
                             str_wyv, str_edn, str_wrt
                             |
                             str_ggr < str_gjt },
                           str_cpo:
                           rec
                             (str_izo: str_cur,
                              str_fdh: str_ysy,
                              str_zlq: str_lrs$0,
                              str_uee: STRING,
                              str_yve: {str_bej},
                              str_lae: str_qmd$0)
                             'str_smc,
                           str_qal: str_brm,
                           str_rwn: str_sec$0)])
                  )
                  (
                    conc
                      ([struct
                          (str_aao: str_yvs$0,
                           str_fqu: str_mlq$0,
                           str_vcf:
                           (bool(FALSE <: NATURAL1)(bool(str_jds$0 < TRUE))))])
                  )
                  (
                    [str_vlk$0,
                     rec
                       (str_wej: (str_ffb |>> MAXINT),
                        str_ljc:
                        ([INTER
                            (str_rec, str_zgr, str_dxd, str_vtt, str_skp,
                             str_ief, str_esn, str_dnw, str_ozq, str_tmj,
                             str_bir).
                          (str_tdb /: str_lqh$0| str_qoe$0)]
                           (str_ryb , TRUE))),
                     str_mgg]
                  )
                  (
                    UNION
                      (str_fsi, str_raz, str_quh, str_zgr, str_hmf, str_aii,
                       str_hdp, str_yhq, str_kry).
                    ({str_gbl, rec(str_zwh: str_whf)} /<<: str_fdl$0'str_jqz|
                     bool(str_fib <<: BOOL) / str_tnh)
                  )
                  (
                    seq1
                      ({ str_hte, str_jcf, str_jdb, str_ehm
                         |
                         not
                           (!(str_ksh, str_eyo, str_bys, str_rnw).
                            ([] /= arity(str_fxb$0))) <=>
                         str_aya <= str_xub })
                  )
                  (
                    {(rec(str_dnl: (perm(NATURAL1)), str_vmc: str_oje$0) ..
                      rec
                        (str_cib:
                         %
                           (str_edo, str_nxz, str_tbr, str_nck, str_wwz,
                            str_hkp).
                         (str_qlr$0 /: MININT| MININT),
                         str_szr: (INT |-> str_wdx)))}
                  )
                
                :=
                rec
                  (str_jvt:
                   (id
                      (bool
                         (not
                            (#(str_frp, str_dvm, str_uun, str_qrb, str_bgw).
                             (NAT1 /: str_fug)) or
                          str_vnq$0 = str_tjf$0))),
                   str_imk: NAT1)
              OR
                struct
                  (str_azz: MININT,
                   str_fyg: (str_trr(str_mph$0)),
                   str_vpr: ((str_scm$0 || [str_pur$0])),
                   str_agi: (struct(str_hpd: MININT) |-> str_bxx),
                   str_qgo: (str_dcv$0 \/ FALSE))
              THEN
                str_ywx, str_lla, str_fdz, str_tty, str_vsd, str_knq,
                str_zks, str_gsn, str_dvm
                ::
                rec
                  (str_qpm:
                   {str_fcb,
                    str_rin,
                    str_ubp$0,
                    {},
                    { str_vca, str_azx
                      |
                      !(str_rxu, str_zoi, str_iym, str_nrk, str_gbr).
                      (str_fjv < str_try$0) },
                    (str_yzw
                     ,
                     %(str_yry, str_tnx, str_sny, str_qav, str_ucn, str_vnt).
                     (str_wzk /= str_udo| str_sxe$0 >< str_mat$0))},
                   str_afs: str_mjh$0,
                   str_ruq: str_iio)
              OR
                bool
                  (!(str_wvi, str_ssz, str_uzy, str_vsk, str_oyy, str_zlr).
                   (#
                      (str_rkr, str_vnr, str_hjf, str_tqn, str_mdt, str_dvh,
                       str_lky, str_wlg).
                    (#
                       (str_pjv, str_krt, str_qmx, str_wpv, str_wjr, str_vhd,
                        str_zpa, str_vbj, str_rqm).
                     (!(str_jsl, str_wpk, str_xww, str_lbr, str_uzs, str_wjv).
                      (not(str_wik$0 /= str_knz$0)) or
                      str_ttj > str_ggk))))
              THEN
                str_new 
                  (
                    str_zbr$0
                    |->
                    { str_lpf
                      |
                      #(str_plh).
                      (str_nki'str_pll <
                       bool(str_tsh$0 >= str_xhj or [] /: str_ctv$0)) }
                  )
                  (
                    (union
                       ({NATURAL, TRUE, [], str_zhr, NAT, str_awq, str_ozs$0}
                        |->
                        {str_the,
                         str_pxn,
                         str_knx$0,
                         struct(str_hvt: str_nfm, str_pmz: str_pvx$0)}
                          'str_brf))
                    ,
                    str_skv$0
                  )
                  (
                    rec
                      (str_maw: {},
                       str_dmf:
                       {str_orq$0, str_bak$0, MAXINT, NAT, {}, str_ikn$0, INT},
                       str_cqs: (str_soi$0(INTEGER(str_nin$0))),
                       str_iri: str_fgd,
                       str_qad:
                       struct
                         (str_hmz: str_jab,
                          str_goi: str_kwh,
                          str_dop: (rank(MININT(str_cak$0))),
                          str_yoa: str_lna$0))
                  )
                  (
                    INTER(str_wjg). (str_qvv$0 <= str_yij| str_isv)
                    |->
                    {rec
                       (str_dtq: NAT,
                        str_uui: NAT1,
                        str_zqx: INT,
                        str_pnb: str_uut$0,
                        str_nmd: str_gap,
                        str_gbn: str_qnr),
                     { str_jor, str_juu, str_xuo, str_oly
                       |
                       #
                         (str_qqg, str_vqx, str_bpe, str_qqb, str_uqf,
                          str_ypy, str_bkb).
                       (STRING = INT) },
                     str_dyh,
                     NATURAL'str_dyk}
                  )
                  (
                    struct
                      (str_upe: str_pen$0,
                       str_xxi:
                       ([INTEGER,
                         str_ega,
                         { str_gcx, str_qmb, str_dfc, str_vhz, str_asr,
                           str_cpo, str_pok, str_dlo
                           |
                           str_oft$0 > MAXINT },
                         str_ieu,
                         BOOL,
                         str_qph$0,
                         { str_flz, str_vmn, str_kzl, str_lza, str_iuo,
                           str_fuw, str_ukp, str_sew
                           |
                           str_sge$0 |-> INTEGER /: str_nbg$0 },
                         str_ivd]
                          (str_twp)))
                  )
                  (
                    struct
                      (str_fge:
                       bool([] /<<: NAT1 => MAXINT <<: str_npm$0)'str_ajg,
                       str_nkv:
                       ([]
                        |->
                        { str_fim, str_pre, str_ixc | str_xjs < STRING }),
                       str_oqe: str_ojv,
                       str_abk: 0) mod
                    NAT
                  )
                  (
                    {str_sfx$0,
                     SIGMA
                       (str_kxy, str_qhi, str_eup, str_fdl, str_yrr, str_odg,
                        str_cco, str_nrp, str_jjy, str_rrs).
                     (INTEGER /<: str_ndq| str_nik$0)}
                      (rec
                         (str_rbb: str_cqy,
                          str_plx: str_qbt$0,
                          str_fld: str_xpf,
                          str_fyr:
                          [NAT, MAXINT, (ran(NATURAL |-> str_iae$0))],
                          str_guu: str_clt,
                          str_pvr: NAT,
                          str_upj: INT))
                  )
                  (
                    {(bool(str_gpb$0 /= str_lov) /|\
                      [str_map$0, str_gqp, str_omk$0, str_jxp]),
                     TRUE,
                     (str_svk |-> (NAT |-> str_ert$0)'str_ccp)}
                  )
                
                :=
                UNION
                  (str_jmr, str_uhi, str_pup, str_wxh, str_hhw, str_xtj,
                   str_hvu, str_jde, str_ygl).
                (not
                   ([str_tbl$0, str_rwx$0, str_bhp, str_wbb$0, [], str_yhy$0] /<<:
                    NAT <<| str_iuw)|
                 rec
                   (str_svf: str_lmr,
                    str_fjm: str_xvc$0,
                    str_cis: str_cyt,
                    str_kjv: str_jyz,
                    str_wge: (str_nvh |>> "str_lbb"),
                    str_dkf: NAT,
                    str_aef: str_rke$0))
              OR
                bool
                  (not
                     (!
                        (str_ldl, str_pne, str_npe, str_jeq, str_kvx,
                         str_ebv, str_ekp, str_myv, str_ety, str_tlk, str_bhu).
                      (not
                         (!
                            (str_gle, str_wqp, str_awe, str_toz, str_vtw,
                             str_mso, str_ryv, str_tze, str_oac, str_vvw,
                             str_qhe).
                          ({} <: NAT) or
                          (str_zyl$0 /: NAT <=> str_acl$0 /: str_svt$0)))))
              THEN
                str_hcd'str_cgn
                :=
                UNION
                  (str_bjr, str_brc, str_uiu, str_ebt, str_zws, str_jus,
                   str_ofc, str_kgs, str_xrs, str_ijf).
                (!(str_qal, str_qma, str_tph, str_ciu).
                 (#(str_yvz, str_jpv).
                  (#(str_yal, str_rra).(str_kjv$0 /: NAT)))|
                 [FALSE,
                  FALSE,
                  str_qow,
                  (seq1(str_rtn$0)),
                  MAXINT,
                  str_ylu,
                  FALSE]
                   'str_idb)
              ELSE
                str_mlq, str_wsn, str_rsv, str_dqf
                <--
                str_wad
                  ((str_lkg
                    |->
                    (str_fao
                     |->
                     (rec
                        (str_vxl:
                         (NATURAL1 |>> { str_pnk | str_rfu$0 = str_aus }),
                         str_bhu: (NAT1(str_ror)))
                        ("str_wul")))),
                   (str_tue
                    |->
                    (((str_snn$0 ^ MININT)[NATURAL1])
                     |->
                     (arity([bool(str_sud$0 = str_jcc$0)])))),
                   bool
                     (str_kof >
                      bin
                        ({ str_bjh, str_phb
                           |
                           #(str_tdc).
                           (!
                              (str_xgd, str_ido, str_ijt, str_tmh, str_jta,
                               str_rhu, str_pno, str_kma, str_hxx).
                            (not(TRUE < STRING))) })),
                   bool
                     ([str_lqn$0,
                       str_pmr$0,
                       STRING,
                       { str_xok, str_gbh | str_ikj$0 /= str_cxi$0 },
                       str_gbm$0]
                        (UNION
                           (str_xqo, str_wrb, str_pms, str_gsw, str_xpv,
                            str_kbb, str_nyl, str_kce, str_dts, str_iga).
                         (str_oha >= MININT| str_phy$0)) <
                      str_gip$0),
                   ({str_irf,
                     NAT,
                     %
                       (str_iqx, str_ecz, str_bci, str_jnk, str_kja, str_vso,
                        str_fje, str_kdg, str_xvs).
                     (INTEGER /<<: STRING| BOOL),
                     str_pjz'str_wyy,
                     MININT,
                     str_qkx} <<|
                    [rec
                       (str_xfh: str_zku$0,
                        str_svh: str_zql,
                        str_fmb: str_exo$0,
                        str_qss: MININT,
                        str_ari:
                        [str_vug, str_mxe, str_dyh, NATURAL1, str_unp$0,
                         NATURAL1, str_vhr]),
                     str_ojl$0,
                     INT]),
                   (bool
                      (NAT <=
                       struct
                         (str_lrc: str_nxo$0,
                          str_abd: (closure1({})),
                          str_ell: str_tuh,
                          str_qdz: BOOL,
                          str_isk: MININT,
                          str_gdx:
                          struct
                            (str_tko: str_xqa$0,
                             str_acc: NAT,
                             str_ecc: str_uqx,
                             str_shw: NATURAL1,
                             str_myv: str_sau$0,
                             str_ist: MAXINT)))
                    |->
                    %(str_jhu). (str_ucb$0 : INT| MAXINT)),
                   ([str_jbw, bool([str_ncq$0, MAXINT, str_tky] <<: str_uje)]
                    |->
                    UNION
                      (str_nwv, str_tkm, str_nmj, str_jcc, str_gfs, str_hlj).
                    (str_llm > str_jbm| str_urt))
                     'str_qev,
                   { str_hri, str_kmc, str_yyi
                     |
                     {INTEGER,
                      str_ntt$0,
                      struct
                        (str_jcd: str_edx, str_mxd: {}, str_bpg: str_ykh$0),
                      str_lmd} >
                     PI(str_ddh, str_zby, str_diy, str_moc).
                     (str_hwu$0 /= BOOL & MAXINT /= str_fjt$0|
                      rec(str_qyw: str_fhc)) })
              END
            END
          END
        END
      WHEN
        #
          (str_xib, str_gwk, str_ekj, str_pks, str_jbi, str_iws, str_pha,
           str_ryx).
        (not
           (#(str_etf, str_sby, str_gfa, str_zfm, str_kmf).
            (#(str_acs, str_zwe, str_toi, str_zba, str_miz, str_daa).
             (!
                (str_htq, str_nus, str_vsp, str_fdz, str_vog, str_tsu,
                 str_pfb, str_irx, str_ghq, str_ymx, str_prz).
              (not(str_tgs$0 <: TRUE))) <=>
             str_bpw : str_dwq)))
      THEN
        str_jom, str_hcr, str_ean, str_rzz :(
          #
            (str_lue, str_axc, str_qkx, str_hxm, str_zld, str_phz, str_bkv,
             str_jrk).
          (#(str_xzk, str_xna).
           (not(not(const({STRING, str_ulq$0, str_xbq}) >= INTEGER))))
        )
      WHEN
        #(str_twa, str_opf, str_mma).
        (!(str_uhe, str_ges, str_zsu, str_rlc).
         (struct
            (str_wqw:
             (MININT
                (rec
                   (str_rht: str_ncd,
                    str_bft: NATURAL,
                    str_wkn: NATURAL,
                    str_zzd: str_mnt$0,
                    str_aze: MAXINT))),
             str_ijn: NAT1) /<<:
          str_oni$0'str_zqp))
      THEN
        str_zpl, str_qpp, str_kqj, str_ghp <-- str_jah
      WHEN
        #
          (str_vel, str_slf, str_rrm, str_jbz, str_mqt, str_nrw, str_tez,
           str_hfj, str_wql, str_han).
        (#(str_oup).
         (!
            (str_pzt, str_eva, str_yyu, str_tty, str_lkz, str_red, str_tgf,
             str_pzj).
          (struct
             (str_lnr:
              PI
                (str_gak, str_odz, str_cnq, str_rnt, str_uuk, str_ucb,
                 str_zxn, str_neg, str_syk, str_wmc, str_cmh).
              (str_uwy$0 /<<: BOOL| str_njb),
              str_ueb: str_orh$0,
              str_nyu: str_qbc$0) /=
           bool(str_qtu /: str_ztq))))
      THEN
        str_art, str_jzp
        ::
        { str_pgr, str_hqb
          |
          #
            (str_vip, str_cje, str_gyv, str_yfz, str_ffc, str_ykl, str_ean,
             str_xvl, str_ybc).
          (str_htg <= {}) <=>
          (#
             (str_prf, str_zse, str_bea, str_qlg, str_vop, str_ywd, str_xzx,
              str_oot).
           (str_boq >= str_rdc) &
           !(str_jlq).(str_mgz$0 /<: str_ymo)) }
      WHEN
        (#
           (str_vbm, str_yrr, str_ylc, str_dax, str_uut, str_oah, str_trv,
            str_jky, str_ixh, str_dph).
         (str_pjx$0 >= str_zcm) =>
         not(INT >= NATURAL)) =>
        #(str_irl).
        (!(str_ngk, str_pez, str_usf, str_uor, str_xhb, str_een, str_bgs).
         (not(str_uph$0 < str_fpo$0)))
      THEN
        str_ehw, str_hmi :(
          !(str_vuh, str_pyq, str_ryx, str_ksu, str_tsb, str_ecf).
          (#
             (str_hvl, str_ptv, str_hto, str_ukm, str_etv, str_hww, str_drk,
              str_asp, str_ekl, str_xzb, str_til).
           (STRING /: MININT or
            #(str_kwl).
            (#(str_jvl).
             (!
                (str_hui, str_nef, str_zzi, str_tnz, str_tnt, str_pkn,
                 str_bym, str_pau).
              (str_lxd$0 : str_ybx$0 => {} = str_cuu$0)))))
        )
      ELSE
        skip
      END
    OR
      UNION(str_upw, str_fph, str_tth, str_yyk).
      (str_jqf /= {}| str_ncp$0'str_fhk)
        (btree({[UNION(str_rit, str_isk). (str_nhr /<: str_xrg| str_hzr$0)]}))
    THEN
      ANY
        str_qid, str_pfe
      WHERE
        #(str_qpx, str_ods).
        (#(str_wqk, str_jdg, str_civ, str_ffu, str_qcy, str_ebc, str_lcw).
         (str_fxz(INTER(str_vhn). (str_wow$0 : str_dyb| MAXINT)) <=
          fnc
            ([BOOL, str_ikm, str_kgy$0, str_ebs$0, str_wzz$0, str_ewz$0,
              str_rpy])))
      THEN
        ANY
          str_ipm, str_fmq, str_ybg, str_aiv, str_yjx
        WHERE
          not
            (not
               (!
                  (str_dft, str_sht, str_vjo, str_kzj, str_xfl, str_sxt,
                   str_dod).
                ({str_euy,
                  BOOL,
                  str_gjy$0,
                  str_wvf,
                  str_bto,
                  str_yua,
                  rec(str_oje: str_dnr)} >=
                 bool(str_tpj /: str_cuf$0))))
        THEN
          str_tpr'str_dgm
          :=
          {((str_uch$0 <<| INT) , rec(str_bbt: NAT1, str_lze: str_myu)),
           %
             (str_ohe, str_vja, str_kfy, str_ftd, str_fbw, str_uij, str_zbb,
              str_iqf, str_azq, str_aab, str_yix).
           (str_bqz$0 >= NATURAL1|
            struct
              (str_zbt: str_xql$0,
               str_egi: str_cbg$0,
               str_xny: "str_bap",
               str_ptk: str_stp$0,
               str_yks: {},
               str_svx: INT,
               str_kwl: str_wzz,
               str_hpe: str_sqb$0))}
            (NATURAL1)
        END
      END
    END
  END;

  str_sxd, str_oea, str_qyb, str_esk
  <--
  str_ain
    (str_rua, str_rjg, str_qsz, str_pxm, str_crh, str_gdo, str_idy, str_yjv,
     str_pmz, str_ngg)
  =
  ANY
    str_lcl, str_rub
  WHERE
    str_nvx$0 <<: 4 <=>
    not
      ((MAXINT /<<: {} or
        ({} <= FALSE & #(str_ipa, str_exe).(not({} /<<: NAT1)))) =>
       str_ery = str_izp$0)
  THEN
    CASE
      [struct
         (str_oma: bool(str_uub <: "str_phl"),
          str_wgm:
          INTER
            (str_hcm, str_etc, str_lym, str_one, str_bep, str_lru, str_vou,
             str_vle, str_ywz, str_arf, str_xrf).
          (str_wlm$0 /: NATURAL1| str_thn$0),
          str_dli: str_ayz$0,
          str_qlt: str_xeu),
       SIGMA(str_qls, str_yyc, str_dys, str_ags).
       (#
          (str_gle, str_ogx, str_avh, str_vsu, str_gwc, str_auc, str_pbp,
           str_enm).
        (str_pmf$0 >= str_dcc$0)|
        str_uke$0)]
      |->
      str_ven
      OF
      EITHER
        { str_lmz, str_szd, str_zox, str_dfz, str_rcr, str_plv, str_nka
          |
          #(str_eji, str_rky, str_dps, str_zaw).
          (#
             (str_lnu, str_fmq, str_isg, str_ufv, str_wvq, str_ynt, str_tza,
              str_lwy, str_vgo, str_bbr, str_zkr).
           (#(str_zqw, str_dmo).
            (#
               (str_zez, str_tcp, str_xsy, str_zgo, str_lfo, str_sxk,
                str_eyp, str_dyd, str_sji, str_crq).
             (str_aod <: str_bgv$0) &
             not(str_yor = str_yex$0)))) }
      THEN
        str_uzo 
          (
            [%
               (str_eun, str_atg, str_dlx, str_pll, str_lxg, str_fly,
                str_gql, str_aah).
             (str_ujb$0 > str_kjr$0|
              tail
                (struct
                   (str_qcx: NAT1,
                    str_sdx:
                    struct
                      (str_zbv:
                       PI
                         (str_rmm, str_apv, str_xwp, str_fsj, str_vtq,
                          str_ccd, str_kxz, str_syz, str_sbz).
                       (INTEGER : str_ilu$0| STRING),
                       str_vtb: str_hil$0,
                       str_obu: str_kvc,
                       str_rnl: NATURAL,
                       str_gqq: BOOL),
                    str_iyt: str_xja)
                   'str_ofo))]
          )
        
        :=
        rec
          (str_qqh:
           (str_rkk
            ,
            { str_xux, str_izo, str_hsa, str_wwf | str_noy <<: INT })
             'str_hce,
           str_fdh:
           (bool
              (!
                 (str_rwd, str_wdq, str_ryj, str_bja, str_zmy, str_fuf,
                  str_xmn, str_poc).
               (str_nck$0 < {}))
              ~))
      OR
        [str_ryo$0,
         (FALSE |-> {(str_vju , str_pdo), str_xvg$0, str_lex, NATURAL}),
         ((STRING(str_dfl))(str_zie'str_zav)),
         str_wdm,
         str_hwd,
         str_dtj$0,
         str_iyt,
         str_mdm]
      THEN
        str_iid, str_uuh, str_gcf, str_rkn, str_atf, str_dft, str_tkf,
        str_olr
        <--
        str_edw
          ((left
              (bool
                 (!(str_xxd).
                  (not
                     (!
                        (str_rsr, str_oiy, str_oon, str_ico, str_vva,
                         str_rzh, str_vvv).
                      (!(str_dgp, str_avz).(not(49 /<<: str_wnn$0)))))))),
           { str_mco, str_xnf, str_nze, str_fwo, str_ffm, str_uos, str_vrl
             |
             #
               (str_bxp, str_drw, str_fyb, str_ays, str_fbc, str_ino,
                str_ljg, str_cik, str_tnj, str_sma, str_enz).
             (NAT <<: str_rdn <=> str_ull$0 /: INT) &
             #
               (str_adh, str_nlx, str_hto, str_lsn, str_kzx, str_jwc,
                str_bbh, str_eok, str_yee, str_fjy).
             (!
                (str_wbi, str_jer, str_yli, str_oie, str_jqk, str_vmk,
                 str_ntm, str_jho, str_bec).
              (#
                 (str_dai, str_hnj, str_wdh, str_pzf, str_xnx, str_vpa,
                  str_iby, str_clb, str_npi).
               (str_qrh : str_hoe$0))) },
           (str_clh$0
              ({ str_qps, str_ddk, str_zkz, str_wku, str_yfp, str_xqv,
                 str_naj, str_aul, str_ssn
                 |
                 not
                   (not
                      (infix(str_kgg) <:
                       rec
                         (str_clq: str_ihp$0,
                          str_jnd: str_opa$0,
                          str_fpb: NATURAL1,
                          str_vvb: str_dbe$0,
                          str_pos: MAXINT,
                          str_ixy: str_lmd$0,
                          str_zfs: str_lzz,
                          str_zwf: NATURAL1))) })))
      OR
        bool
          (#(str_ndz).
           ((#(str_nsx).(str_vln$0 /= str_vzg) => str_ccy$0 /: str_ojx$0) =>
            #(str_xuc, str_jev, str_xvg).(#(str_quo).(str_mte$0 <: str_uxw))))
      THEN
        str_ytd, str_bsa, str_fgv, str_yhe, str_uog, str_kva, str_flj,
        str_gnw, str_ukk, str_oah :(
          SIGMA
            (str_lgh, str_yfm, str_aiq, str_sud, str_dad, str_awd, str_sup,
             str_wfu).
          (INT /<<: str_uyv$0| NATURAL1) >=
          str_aav <=>
          (([] <= str_dan$0 or [] /: NAT1) & not(not(str_vfi < str_aac)))
        )
      OR
        prj2
          (struct
             (str_rcm: bool(not(str_bwh$0 /<<: str_pus$0)),
              str_otv: MININT,
              str_jgo: (str_itk$0 |-> str_smo$0),
              str_ifu: TRUE,
              str_ttp: str_zdt,
              str_zek: bool(MAXINT = str_pyh & str_ljz$0 <: str_uub)))
      THEN
        skip
      END
    END ||
    ANY
      str_smr, str_jht, str_ary, str_xdh, str_xhm, str_hll, str_rqe, str_nuj,
      str_bup, str_kvj, str_jqf
    WHERE
      bool
        (#
           (str_gtr, str_jck, str_yif, str_cme, str_nvl, str_bma, str_eep,
            str_gme, str_vzi, str_xpy, str_qbt).
         (!
            (str_apy, str_bgw, str_auc, str_vjz, str_qlg, str_zfz, str_zlr,
             str_eea).
          (str_nhs$0 >= str_kwd$0))) /<:
      struct(str_nqw: FALSE, str_wkt: str_uvn, str_sfi: str_fma)
        (subtree(str_iky$0))
    THEN
      VAR
        str_ztk, str_sxy, str_ovm, str_zrs, str_vpx, str_dyz, str_ryc,
        str_tsg, str_qws, str_led, str_vwq
      IN
        CASE
          {struct
             (str_lhm: str_tzh,
              str_gjt: str_pij$0,
              str_crc: str_oat,
              str_exz: INTEGER),
           bool(str_tpj$0 <: str_emk$0 & str_xlz /: FALSE),
           NATURAL1,
           str_sdt,
           UNION
             (str_bhx, str_cvt, str_fto, str_ycq, str_pzu, str_idk, str_pnv).
           (!(str_rew, str_lhd, str_vqm, str_jkt, str_wqn).(str_loc$0 >= INT)|
            str_fpb$0),
           struct(str_zbr: str_alk$0, str_kuc: str_gyc$0, str_uod: str_dnz$0),
           str_ygv$0}
          OF
          EITHER
            ([str_ylr,
              (struct(str_teg: str_cit) >< str_zyz),
              4,
              NAT1,
              str_pfc$0,
              {}]
               'str_qfg <|
             MININT) <-
            (str_qih(TRUE))
          THEN
            str_uxu 
              (
                UNION(str_anc, str_fai, str_bpz).
                (not
                   (not
                      (#
                         (str_jmo, str_rcp, str_osq, str_taz, str_bcm, str_fax).
                       (not(TRUE <<: str_obi)) <=>
                       NATURAL1 /: []))|
                 MININT)
                |->
                str_arl
              )
              (
                str_muc$0 +->>
                rec
                  (str_xbv: (str_dhu |>> str_lzy$0),
                   str_flf:
                   { str_boe | !(str_trs, str_rqn).(str_cyp < NATURAL1) },
                   str_pwq: (str_aea |>> str_jmi)'str_lxz)
              )
              (
                [str_hcq$0,
                 str_weg$0,
                 STRING,
                 (str_jyg |-> (STRING(str_tzu))),
                 str_tnz$0,
                 %
                   (str_trz, str_jal, str_hnn, str_uei, str_qdl, str_otj,
                    str_qoj).
                 (str_vhh$0 /: INTEGER|
                  struct
                    (str_jat: FALSE,
                     str_wag: NATURAL,
                     str_ahv: bool(str_ruq /: str_iys$0))),
                 NAT,
                 %(str_vxk, str_nwu). (str_pxu = str_opt$0| str_nwi$0)]
              )
            
            :=
            rec
              (str_nvd: (str_xlt , str_aqk$0),
               str_keo: str_ajj$0,
               str_bnl:
               [[str_rno,
                 str_wis$0,
                 (MININT , str_mvg),
                 str_dxc$0,
                 str_ktv$0,
                 str_eyy],
                str_kkn$0,
                { str_hcg, str_sbe, str_bes
                  |
                  MININT /<<: str_rds <=> NAT <= str_rez$0 }])
          OR
            (MAXINT , ({str_nfv} + str_ybl))
            |->
            bool(str_asc$0 <: { str_vtq | str_bxl$0 /<: NATURAL })
          THEN
            SELECT
              not
                (!
                   (str_kbm, str_ltq, str_vab, str_sxs, str_pmo, str_dtf,
                    str_wmt).
                 (NATURAL >= str_gao$0)) =>
              bool(NATURAL /<<: "str_qyl" or str_pnx : str_vut$0) /:
              {str_ruc$0, TRUE}
            THEN
              str_afc, str_rci, str_ykn, str_gtd, str_rfw, str_qkj
              ::
              ((rec
                  (str_fcw: str_qjs,
                   str_hyr: FALSE,
                   str_alp: INTEGER,
                   str_ynp: str_fed$0,
                   str_qjm: FALSE,
                   str_lkn: str_edg$0)
                  (struct(str_lte: str_hti'str_gtj, str_dby: BOOL)))
                 (struct(str_fwb: NAT, str_sem: str_fuu)))
                'str_akg
            ELSE
              str_pgb'str_eum
              :=
              bool
                (not
                   (!
                      (str_xgi, str_bod, str_wgp, str_czj, str_ond, str_pnv,
                       str_pgr, str_esz).
                    (#
                       (str_gxb, str_pny, str_lvm, str_qqt, str_gtv, str_fjz,
                        str_lwp, str_qpa, str_dku, str_thy).
                     (str_rky$0 /<: NATURAL & not(BOOL <<: str_ovf$0))) =>
                    str_ufb$0 = str_dnz$0))
            END
          ELSE
            str_teq 
              (
                %(str_rev).
                (not(str_jpc$0 >= str_rth)|
                 min
                   ({NAT1}
                    |->
                    {str_hog$0, str_ive, str_pkp, str_twl$0, MININT, str_kre,
                     str_enl}))
              )
              (
                [str_wkl,
                 str_jjm,
                 PI(str_nud, str_zvv, str_ljv, str_lhm, str_mwi, str_itx).
                 (str_cqz$0 = INTEGER|
                  [INTEGER,
                   str_jhq$0,
                   str_ict,
                   { str_yoq, str_yft, str_owj, str_quc, str_zha, str_kpc,
                     str_amg, str_vun
                     |
                     str_irn$0 : NATURAL },
                   NAT,
                   str_xjg,
                   str_kyw,
                   SIGMA(str_ezr, str_zdy, str_his).
                   (str_rua$0 <= NAT1|
                    rec
                      (str_srz: str_nie$0,
                       str_moe: INTEGER,
                       str_jjj: str_qen,
                       str_bam: str_unr,
                       str_qzv: str_zij$0))]),
                 str_fbu,
                 (str_irr |-> MININT),
                 str_nxn$0,
                 str_oyi]
              )
              (
                UNION
                  (str_gqh, str_jkz, str_qfi, str_xup, str_goj, str_oye,
                   str_xko, str_vyh, str_hyv).
                (UNION
                   (str_jwg, str_beq, str_foe, str_gba, str_ont, str_wkh,
                    str_nus).
                 (str_zdt /<: str_cuk$0 <=> STRING /= str_fnn|
                  str_twx , str_ejs)
                 |->
                 str_zww /<:
                 INTEGER|
                 2(str_ben$0))
              )
              (
                [SIGMA(str_tuq, str_ksf, str_awx).
                 (str_qoz <: str_ydk| {str_jwh, NAT1, str_xrn$0, str_arv$0}),
                 struct
                   (str_oxe:
                    (inter
                       ([str_unz,
                         str_neu$0,
                         struct
                           (str_etu: str_nry$0,
                            str_mea: str_moc,
                            str_kcs: str_yof$0,
                            str_wig: str_hre,
                            str_foc: str_bsz$0),
                         FALSE])),
                    str_sun: str_ioi)]
              )
              (
                [str_kxm$0,
                 str_qij,
                 (first
                    ((str_bxn$0 \|/ str_nae)
                       ({str_abw,
                         (str_cqx$0 +-> str_ojf),
                         {},
                         struct
                           (str_ylt: str_efq,
                            str_lrh: NAT,
                            str_tll: INT,
                            str_jio: str_xzv$0,
                            str_vqi: str_pka,
                            str_sid: str_png$0),
                         NAT,
                         str_blz$0}))),
                 str_uye$0]
              )
              (
                struct(str_bto: [MININT], str_kmw: NATURAL)
                  ({ str_shk, str_abz, str_eit, str_yhf, str_zdq, str_heg,
                     str_cqq, str_rvv
                     |
                     !
                       (str_kks, str_lqx, str_grw, str_mxg, str_cfe, str_usj,
                        str_ahi, str_rot, str_kcw, str_jgb).
                     (str_rzs$0 /= str_kjx$0) }
                     (str_nui'str_pbt))
              )
              (
                bool
                  (!(str_kiz, str_dmd, str_ren, str_hhy).
                   (!
                      (str_cfb, str_sml, str_fux, str_aeq, str_nqw, str_hrc,
                       str_yjj, str_nwh, str_fzf, str_mbf).
                    (INT < str_vyx)) &
                   #(str_eyp, str_xlh).(str_zhl > -MAXINT))
              )
            
            :=
            { str_bqw, str_bpa, str_pwd
              |
              str_ybg$0 /: str_rnf$0 or
              (#(str_jbh, str_joh, str_jkn, str_ugi).
               (#
                  (str_cfc, str_krm, str_kqc, str_lkm, str_hcf, str_ciz,
                   str_wyw, str_ula, str_gyz).
                (str_vfs /<: str_csa)) or
               (str_tsx = str_yqg$0 & str_fln$0 /: "str_izc")) }
              'str_xic
          END
        END
      END
    END
  END;

  str_doc, str_nra, str_tyh, str_kfh, str_zzd, str_pxx, str_vly, str_vzr,
  str_elr
  <--
  str_itj
    (str_pxo, str_hsn, str_kcc, str_jdy, str_fjz, str_nnp, str_auz, str_xix,
     str_xsn)
  =
  BEGIN
    BEGIN
      str_sly'str_mwh
      :=
      bool
        (str_kyy$0 <= str_fdf$0 &
         not
           (!(str_rya, str_hpr, str_kgn, str_ysw, str_xdk, str_flf).
            (!(str_nzj, str_los, str_pmx, str_brc, str_uce, str_gbk).
             ([] = INTEGER => str_mtx = {}))))
        'str_kys ;
      ANY
        str_vvm, str_jbl, str_rbq, str_prl, str_rea, str_cby, str_krt,
        str_ybu, str_wea, str_xtg, str_ric
      WHERE
        TRUE <= str_ucj$0 &
        {SIGMA
           (str_yzz, str_fer, str_ctg, str_huf, str_hon, str_yiw, str_ixg,
            str_bga).
         (str_sdv$0 <: str_nin| ({NAT1}(str_hta$0)) /|\ str_qnx)} :
        str_oqf$0
      THEN
        IF
          #(str_jrw, str_ybp, str_zzb, str_mke, str_qxy, str_sjg).
          (!(str_kue).(str_nzp$0 < str_pjk$0)) &
          not
            ((str_aui$0 /: str_ejv$0 => str_wlb /: MININT) <=>
             !(str_anv, str_oty, str_gzm, str_iio, str_fqw, str_gft).
             (str_drg$0 /= NATURAL1))
        THEN
          ANY
            str_pmy, str_lfq, str_xfn, str_hzq, str_fch, str_iea, str_qzj,
            str_vvc, str_zew
          WHERE
            rec
              (str_hbb: (str_hsu$0 * str_omv),
               str_mdg: (tail(NATURAL1)),
               str_asf: str_qmt$0,
               str_qza: str_fkd,
               str_vfe: str_vrt) <<:
            rec
              (str_yke: {},
               str_zjw:
               rec
                 (str_jhg: str_cwh$0,
                  str_dym: str_yya$0,
                  str_gcl: INT,
                  str_jvq: str_plt$0,
                  str_mdu: str_jjk,
                  str_emr: str_szq)) +->>
            str_zrp
          THEN
            ASSERT
              not
                (!(str_nno, str_rtt, str_kal).
                 (#
                    (str_uux, str_zdq, str_uzq, str_eoa, str_gtp, str_gxr,
                     str_vyc, str_nio, str_jyq, str_ynt, str_ydm).
                  (not
                     (not
                        (!(str_wme, str_gkq).
                         (str_ujj$0 /<: BOOL or INTEGER > FALSE))))))
            THEN
              str_dhw'str_dyx
              :=
              {rec
                 (str_xoq:
                  INTER
                    (str_jzz, str_oyt, str_ujq, str_otq, str_doa, str_rjb,
                     str_ldw, str_aem, str_myo, str_mbm, str_lwc).
                  (!(str_eyb, str_hcq, str_uoz).(str_tdd$0 /<: str_zov$0)|
                   str_pdi)),
               NATURAL,
               struct
                 (str_cpa: NATURAL,
                  str_hjd: str_bej,
                  str_gey: str_pbu$0,
                  str_dxj: str_nbl$0),
               (str_pgl$0 <- str_kwm)}
            END
          END
        ELSE
          IF
            not
              (not
                 (#(str_imr, str_olp, str_mel, str_qws, str_jkl, str_xvq).
                  (#(str_hgv, str_zjm, str_ubi).
                   (!
                      (str_fdg, str_gsa, str_uph, str_vfn, str_sfj, str_nqf,
                       str_fjw, str_add, str_vvx, str_ccp, str_ifa).
                    (#(str_sod, str_jzh, str_cpu, str_wig).
                     (TRUE > str_jlo & str_dal$0 /<<: str_lbm))))))
          THEN
            str_wmw, str_vgq
            ::
            { str_bxn
              |
              str_zfy$0
                (struct
                   (str_kpo: str_scn$0,
                    str_lbz: [],
                    str_gbh: [str_zlk$0, 8, MAXINT, str_yoc, str_hgk],
                    str_pwr: [],
                    str_qtv: str_sbi,
                    str_syx: STRING,
                    str_mik: str_ybw)) >
              {str_zoe, str_anb$0, TRUE, NAT1, str_erd, NAT, str_zes$0}
                (STRING) }
          ELSIF
            (not(str_pjm$0 < str_arh) &
             UNION
               (str_zri, str_qwh, str_zvy, str_psr, str_fnu, str_ytb, str_ubk).
             ({} /<<: str_xos| str_qor) -
             struct
               (str_plu: str_xkv$0,
                str_xwh: str_vex,
                str_gmb: str_wvc$0,
                str_gcd: str_jvm) /<:
             str_rcw$0) or
            str_ucn$0 <<: str_jcg$0
          THEN
            str_mto 
              (
                str_qzo$0'str_ypm
                |->
                (str_xyt$0 \|/
                 (-
                    { str_ota, str_ecf, str_uhx, str_hyk
                      |
                      !(str_gzx).(not(str_euk <= str_mja$0)) }))
              )
              (
                [{(sizet(STRING)),
                  INT,
                  (rev(str_rmk , str_ldu$0)),
                  TRUE,
                  str_mhy$0,
                  str_lyv$0,
                  (str_zeb |-> str_btw$0),
                  TRUE}]
                  'str_twe
              )
              (
                UNION(str_oio, str_jtq, str_dby, str_mfd, str_xgs, str_sil).
                (!
                   (str_irn, str_cvc, str_bnw, str_eyr, str_vju, str_gtm,
                    str_etm, str_abl, str_ovy, str_fsq, str_wkp).
                 (!(str_kew, str_mhi, str_bcn, str_crr, str_lgk).
                  (str_ran$0 < NATURAL1) &
                  #
                    (str_krx, str_uba, str_vdp, str_uah, str_ufo, str_jly,
                     str_cxn, str_kfd, str_bud, str_lca, str_wjb).
                  (#(str_vki, str_ocx).(MAXINT < str_rkt$0)))|
                 { str_ogc, str_hiy | str_spm <<: STRING })
              )
            
            :=
            rec
              (str_qai: str_cca$0,
               str_cpb: NATURAL,
               str_ayl: PI(str_rav). (str_fay$0 /<: str_okc| NAT),
               str_mtx:
               { str_mgq, str_jvm, str_dwy, str_pll, str_ftw, str_tps
                 |
                 not
                   (str_yee <= str_chu &
                    (str_zwp /: NAT => str_fte$0 /<<: str_vdn$0)) },
               str_sqj: str_tyc)
          ELSIF
            not
              (not
                 (not(str_gxu >= INT) &
                  !
                    (str_vwa, str_ivf, str_tzx, str_yuh, str_wli, str_eal,
                     str_jgc, str_sjn, str_jeo, str_dmp, str_rut).
                  ((str_kzb >= BOOL & str_kpx$0 : {}) <=> str_rcs > str_njt)))
          THEN
            str_adv, str_avb, str_faf, str_vlg, str_oft, str_xvf, str_zsl
            :=
            rec
              (str_xhb: STRING,
               str_ktb:
               (-
                  PI(str_wcc, str_nuu, str_hwe).
                  (#
                     (str_ndm, str_dpo, str_knu, str_jco, str_niv, str_awl,
                      str_ngn).
                   (not(INT <: str_mjm$0) or str_xug > str_wtg$0)|
                   {})),
               str_yhq: (str_slp(str_dgg)),
               str_fen: str_pgl$0,
               str_fkf: str_vgr)
          END
        END
      END
    END ||
    str_nbp, str_bfx, str_gkr, str_ckw, str_ddo, str_cdr, str_ynn, str_ecn,
    str_iyb, str_sze
    ::
    [bool(str_nvh <= str_nop or FALSE > str_rly$0),
     str_hap,
     rec
       (str_vhs: str_dgo$0,
        str_nde:
        (rec
           (str_avm: str_mhk,
            str_vye: str_gyz,
            str_ucw: str_tgm,
            str_lgc: NATURAL,
            str_rsr: str_ogx$0,
            str_weg: str_tqn,
            str_dws: str_gkt) -->>
         str_gky$0),
        str_yac: 703,
        str_xox: str_biq,
        str_cds: str_moy,
        str_moi: str_jjs),
     str_ets$0,
     rec(str_drk: str_qzq, str_mph: str_upt)]
  END;

  str_bvc, str_ean <-- str_oif (str_hfs, str_jzt, str_onn, str_bck) =
  WHILE
    bool(!(str_ult, str_rkj, str_jxd, str_glk).(str_eza /= STRING)) /<<:
    INTER(str_vmj, str_qrs). (str_xai <= str_kqj$0| str_hke$0) +->>
    struct
      (str_kri:
       SIGMA(str_ote, str_eax, str_tdn, str_zsf). (str_gsl$0 <: str_tmn| NAT),
       str_hba: str_dqq$0,
       str_ias: str_hag$0)
  DO
    IF
      #(str_fqv, str_cua, str_bec, str_ggq, str_umi).
      (!
         (str_sle, str_fzo, str_tal, str_bvp, str_wgy, str_slm, str_num,
          str_ayt, str_bwy).
       (#
          (str_gxl, str_vtx, str_xhl, str_zrp, str_owi, str_fsq, str_fae,
           str_hai).
        (#(str_tkk, str_dcw, str_hfi).
         (not(TRUE >= str_ygl <=> not(NATURAL : str_ipy$0))))))
    THEN
      str_xxo, str_lmk, str_gcm, str_uhs, str_eah, str_vzs, str_ahs, str_bci
      :=
      rec
        (str_xre: str_dhl,
         str_hmc: BOOL,
         str_uuu: str_wvv,
         str_wps:
         rec
           (str_yrq: str_hny$0,
            str_kvl: str_vha$0,
            str_dsy: str_mlm,
            str_won: str_mzm$0,
            str_qgv:
            %(str_zlv, str_tnd, str_zxr). (str_kww : str_lzj$0| str_jjj$0),
            str_blk: str_jhc$0,
            str_uwh: str_kgr,
            str_tel: str_myw$0),
         str_kfm: ((MININT |-> str_uaz$0)(str_wnx)),
         str_kvg: NAT1,
         str_vyn:
         { str_enk, str_ath, str_jeo, str_tgh, str_gmu, str_iej, str_cbe,
           str_vfw, str_wvr, str_ala
           |
           str_gee$0 <: INTEGER }) \|/
      INT
    ELSIF
      struct
        (str_dmr: str_kag,
         str_egj: str_pxz$0,
         str_kzg: str_fme,
         str_sge: [str_fnn$0, str_sws],
         str_toy: str_tbf,
         str_hkj: [INT, INTEGER, {}, str_bsp, NATURAL, str_jle$0, str_dsu]) >
      bool
        (#(str_okp, str_kqe, str_gih, str_gox, str_hlk, str_kcl).
         (str_jtx$0 <: str_cnk$0 & NATURAL >= INT))
    THEN
      str_hbq, str_lbb, str_xdb, str_mef :(
        str_zlz < NAT &
        #(str_rxx, str_hwr, str_qji, str_xpz, str_icc, str_mla).
        (!
           (str_jwm, str_dqd, str_npm, str_dxu, str_wpi, str_bau, str_mqq,
            str_djt).
         (not
            (#
               (str_kxa, str_blf, str_cem, str_sql, str_vtd, str_hpz,
                str_zbh, str_pnj, str_eez, str_nyg, str_qyw).
             (!(str_beq, str_eah, str_jsn).(str_smp$0 >= TRUE)))))
      )
    ELSIF
      (TRUE = str_lrv <=> (str_ggr$0 >= str_hra$0 => str_ktp$0 <= NATURAL)) or
      #(str_mbg).
      (#(str_chy, str_qpx).
       (#(str_cxz, str_zfh, str_qpd, str_fws).(str_wrq$0 = str_qhi) <=>
        str_mhm$0 /= str_bot))
    THEN
      ASSERT
        [bool(str_sps /: str_vwy), INTEGER, MININT, str_fkk$0, str_jcc]
          (rec
             (str_ppr: TRUE,
              str_mal: NAT1,
              str_pyy: str_aot$0,
              str_hlg: str_ytt,
              str_gwc: (str_nxy , str_uvv),
              str_pli: NATURAL,
              str_rzp: str_ajp$0,
              str_spn: str_yai$0)) <:
        [str_vcr$0, FALSE, str_ykd$0, NAT]
      THEN
        ANY
          str_ied, str_zdr, str_uip, str_rjg, str_xub, str_pez, str_qhy,
          str_fuz, str_thq, str_tnq, str_mfd
        WHERE
          not
            (#(str_wif, str_mob, str_hfi, str_rmc, str_jif).
             ([str_ddf,
               { str_hfl, str_gzx, str_lyh, str_fgi, str_luy, str_zrh,
                 str_whc, str_nus, str_yls
                 |
                 NATURAL /= str_vbp$0 },
               INTEGER,
               NAT1] =
              [str_lkv, str_tax$0'str_cur, str_yon$0]))
        THEN
          skip
        END
      END
    ELSIF
      SIGMA(str_dtt, str_agb, str_spt, str_jok, str_nio).
      ({} : str_tax$0| str_ckl) =
      str_tml$0 ** str_asf'str_une <=>
      not({} = str_drw$0 & {} /<: str_nsq$0)
    THEN
      skip
    ELSIF
      not
        (rec
           (str_nld: str_zod,
            str_xmp:
            { str_kjo, str_vru, str_awh, str_qiw, str_mtd, str_yfh, str_pys,
              str_gom, str_gyi
              |
              str_sea /<<: str_kia },
            str_qnw: str_vcu,
            str_onk: str_ber$0,
            str_zhs: bool(MININT <<: str_tml)) >
         { str_fiz, str_rqk, str_xts, str_krn, str_oeu, str_spn, str_lzo,
           str_uya, str_bdo, str_kvj
           |
           str_frk = MININT })
    THEN
      str_dwz'str_qul
      :=
      {(rec
          (str_vto: str_wyz,
           str_pqn: str_kej$0,
           str_axm: str_ufl,
           str_tfj: [],
           str_wfl: str_yim,
           str_vsr: str_ife,
           str_gsr: INT,
           str_vgi: MAXINT)
        ,
        ((SIGMA(str_smu, str_cag, str_qwm, str_jur, str_qhv).
          (str_hwl$0 >= str_dcz$0| []'str_qpc)
            [str_bmk$0])
           (str_npx)))}
    ELSIF
      #
        (str_kzd, str_fqr, str_nnb, str_amh, str_fch, str_zlz, str_zga,
         str_tjn, str_lhn).
      (!(str_bmd, str_pks).
       (str_oin$0 /= str_pue$0 =>
        (BOOL |-> (pred(TRUE))) , str_ybt$0 : str_cbk))
    THEN
      str_hpv'str_uho
      :=
      struct
        (str_ubh: str_sjk$0,
         str_nec: {INT, str_rjl$0, str_cxn, str_iqk$0, NAT1, str_aec},
         str_mul: "str_sbd",
         str_bps: str_suj,
         str_pwu: str_mlk$0,
         str_xqu: [NATURAL, (str_klf$0 |-> str_ghn$0)],
         str_urj: (NATURAL , str_yeu$0)'str_vji'str_pay)
    ELSIF
      not
        (not
           (FALSE /= "str_sqo" or
            !(str_dut, str_wqy).
            (rec
               (str_bhm: str_omh$0,
                str_mck: str_beb$0,
                str_ebp: str_yuj$0,
                str_cis: str_alp$0,
                str_ktl: BOOL,
                str_zkf: []) /<<:
             BOOL |-> str_toq$0)))
    THEN
      skip
    END ||
    PRE
      #(str_sqy, str_aqd, str_yxd, str_mwp, str_lon, str_qrv, str_jhw).
      (#
         (str_nji, str_abd, str_kxv, str_jap, str_jcu, str_zkt, str_nuo,
          str_msv).
       (rec
          (str_ade: str_jvf$0,
           str_pxf: (str_bkg$0 ** str_uju),
           str_mls: str_kkn) :
        { str_jmb, str_hre, str_imh, str_kna | str_rjm /= str_lyn$0 }
        |->
        str_klc))
    THEN
      CASE
        bool
          (!
             (str_org, str_sev, str_fam, str_adi, str_iso, str_ssv, str_lsk,
              str_ffa, str_mnd, str_msy, str_edb).
           (#(str_nbo, str_upj, str_bwx, str_lby).
            (not
               (#(str_clv, str_sgd, str_lgi, str_kme, str_uak, str_ipf).
                (!
                   (str_qee, str_prh, str_yyj, str_nre, str_ipe, str_wdp,
                    str_qhb, str_xas, str_bnw, str_szk, str_dlc).
                 (!(str_xnm, str_jid, str_pxc).(str_upl$0 /: str_csf)))))))
        OF
        EITHER
          { str_wge
            |
            !(str_bsa, str_sin, str_wwq, str_rgr, str_qdi, str_uwq).
            (not
               (!(str_buk, str_avd, str_thj, str_lpl).
                (not(not(not(str_lxa <: MAXINT)))))) }
        THEN
          str_fly'str_ddp
          :=
          [[str_ruy$0, str_ink$0, str_wap'str_rew],
           str_tsz'str_rkk,
           STRING,
           { str_eek, str_iru, str_uvh, str_eiu, str_rer, str_jvd
             |
             str_tyz /= str_nvj$0 },
           (NATURAL <| str_bms'str_dev)]
        OR
          rec
            (str_eot:
             bool
               (!
                  (str_tzg, str_neg, str_oaw, str_sik, str_oai, str_aah,
                   str_xpu, str_bsw, str_wnx, str_aby).
                (!
                   (str_cje, str_krk, str_qxg, str_fpt, str_fyh, str_rzb,
                    str_hnm, str_lro, str_txi, str_ivt, str_elj).
                 (INTEGER /<<:
                  UNION
                    (str_ekm, str_gjw, str_keh, str_ekj, str_ent, str_qgm,
                     str_qak, str_kpb).
                  (str_qgs$0 /<<: INT| str_erz$0)) <=>
                 STRING = str_fcj)),
             str_xuf: str_dxt,
             str_aui: NATURAL,
             str_itl: INTEGER,
             str_oyx: NAT,
             str_otw: str_bmj$0)
        THEN
          str_eys, str_qdq, str_akf, str_jye, str_jyn, str_hrh, str_mbn,
          str_aua, str_blc
          :=
          (str_xiu
           |->
           { str_hqv, str_isv, str_dsp, str_oxc, str_mmb, str_gfm, str_hja,
             str_icg, str_alt
             |
             not
               (str_aof /= NATURAL or
                !
                  (str_eow, str_lpv, str_bkj, str_dwi, str_ubv, str_pff,
                   str_agm, str_woq, str_lcc, str_sas).
                (str_csp$0 < str_dxp)) }) >->>
          BOOL'str_ogv
        OR
          rec
            (str_oza:
             (bool(const(str_rrj$0) < str_wxe)
              |->
              struct
                (str_jfj: STRING,
                 str_ifp: INTEGER,
                 str_qma: (str_qpz$0 |-> str_brj$0),
                 str_iwb: [],
                 str_wtp: MININT,
                 str_bne: str_erl)))
        THEN
          str_qig, str_xpa, str_cyh
          ::
          %
            (str_xir, str_juc, str_wlk, str_aql, str_hdd, str_wlv, str_hjb,
             str_qqv).
          (#(str_arv, str_txl).(str_eia$0 <= str_xwm$0)|
           rec
             (str_zof: str_duf,
              str_ila:
              rec
                (str_jks: str_qsq,
                 str_bqf: str_nkh$0,
                 str_qxc: {},
                 str_akm: str_enq$0,
                 str_rpp: str_ysd$0),
              str_suw: str_yhs,
              str_jjh: str_vgy,
              str_leq: str_jbz,
              str_nyw:
              {struct
                 (str_bqm: INT,
                  str_hzm: str_imi$0,
                  str_owa: str_bhv,
                  str_cxh: str_ium$0,
                  str_vlj: str_uqr$0),
               MININT,
               (seq(str_ifj$0))}))
        OR
          {SIGMA(str_yqg, str_bwe, str_hyg).
           (NAT1 < str_eck$0| {str_leo, str_jhu$0, 26, str_nzl$0, str_lhf}),
           str_xih,
           str_ztp,
           (PI(str_qen, str_yen, str_ujm, str_jpx, str_qbp, str_fzs, str_tae).
            (#
               (str_tjm, str_xgb, str_kum, str_bqi, str_epc, str_wbi,
                str_ttw, str_zwp).
             (str_gkj$0 <<: str_iwx$0)|
             TRUE) /
            struct(str_rpo: str_sjc)),
           str_jrj}
        THEN
          str_wqh 
            (
              bool
                (str_kcw /<<:
                 bool
                   (!(str_bqc).
                    (!
                       (str_pzd, str_qrc, str_lwa, str_faw, str_yuf, str_aen,
                        str_ifh, str_cem, str_pyx, str_rqv, str_pcr).
                     (not
                        (#
                           (str_lrz, str_dgu, str_irb, str_hoc, str_rot,
                            str_ksh, str_qcl, str_qkq, str_snv, str_wmm).
                         (str_gyd /<<: MAXINT))))))
            )
            (
              {(rec
                  (str_fbi: str_ynr,
                   str_wtr: str_jpr$0,
                   str_ecr: MININT,
                   str_cia: "str_eer",
                   str_zva: MININT)
                |->
                NATURAL1),
               ([str_yxv$0,
                 rec
                   (str_kdk: str_kro$0,
                    str_bck: MAXINT,
                    str_wrd: str_omj,
                    str_baa: str_bfk$0,
                    str_xyq: str_ipn$0),
                 str_yxe,
                 str_too]
                  (str_yyg$0)),
               [str_qwg$0, str_gwu$0, str_vkz, STRING]}
            )
            (
              bool
                ({ str_huy, str_wsa, str_hez, str_qcl, str_gtx, str_hpx,
                   str_zcp, str_jwo
                   |
                   !
                     (str_jks, str_eqx, str_ghu, str_opb, str_bth, str_aom,
                      str_awl).
                   (NATURAL1 <= str_nul) } <
                 NAT =>
                 #(str_feu, str_hyl, str_hsc, str_yui, str_avp).
                 (str_aku$0 <= str_jug))
            )
            (
              conc
                (UNION(str_nfq, str_wnq, str_mxy).
                 (not
                    (bool(str_pib$0 <= INT) /<:
                     bool
                       (#
                          (str_zwc, str_uke, str_ndo, str_lfr, str_glm,
                           str_wki, str_cfa, str_ahj, str_aec).
                        (str_xwp >= str_btg)))|
                  str_wgx))
            )
            (
              %
                (str_stj, str_npl, str_pru, str_jvc, str_xdi, str_lnt,
                 str_ikp, str_sla, str_lvz, str_zun).
              ([] = TRUE <=> (str_yny <<: str_zdv & str_edk$0 < str_ocv$0)|
               bool
                 ((struct
                     (str_hdb: str_tmm$0,
                      str_ehv: TRUE,
                      str_qui: BOOL,
                      str_ygl: str_bgt) ;
                   str_lrm$0) <=
                  []))
            )
            (
              (str_huz
               ,
               INTER(str_bcn, str_moz). (str_opu >= str_nkj| str_ccy))
                ({ str_cdq, str_xzt, str_pws, str_cox, str_nsc, str_sje,
                   str_lpd, str_pdl, str_zbz, str_avd
                   |
                   str_ulp$0 <<: str_jzi$0 }
                   ({ str_kgs, str_bjb | INTEGER > str_gyg }(str_lqp)))
            )
            (
              struct
                (str_dks: INTEGER,
                 str_qtg: str_vcl$0,
                 str_abd: str_fvp,
                 str_vdz: str_kgm$0,
                 str_tjo: str_egv,
                 str_njz:
                 UNION
                   (str_zgj, str_ahx, str_hrr, str_zna, str_wga, str_jxk,
                    str_uqk, str_okb, str_jjr).
                 (#(str_yir, str_olu, str_paa, str_gdz).
                  (str_jcg$0 >= INTEGER => str_rqs <= str_jfq) =>
                  (str_pwm$0 <<: str_hia$0 or NAT : str_vrx)|
                  POW1(str_dan)),
                 str_rks: str_fpx$0)
            )
            (
              bool
                (!(str_ldv, str_vaz, str_fhg, str_zbe).
                 (not((NATURAL(str_twk |-> str_izl$0))'str_sfi : str_lqu$0)))
            )
            (
              rev
                (struct
                   (str_raz:
                    struct
                      (str_pbv: str_eka'str_xgr,
                       str_xzy: str_qje,
                       str_oyh: str_sbf,
                       str_tdx: str_kuz,
                       str_gkf: MAXINT,
                       str_uoe: str_awm,
                       str_rib:
                       PI
                         (str_wox, str_mvh, str_xgf, str_ggn, str_eoo,
                          str_uwr).
                       ([] <: NAT => str_nws /: str_eye$0| str_acj$0))
                      'str_jda))
            )
            (
              (str_nid$0 -->> str_jpz$0) <|
              bool
                (!(str_gqv, str_tnd, str_zbv).
                 (not
                    ((str_mno$0 : str_hne & str_nym$0 >= NATURAL1) =>
                     str_grh : str_evd)))
            )
          
          :=
          {rec
             (str_xnq: (subtree({ str_mfb | rev(str_qia) : str_jxf })),
              str_fcz: {STRING, {}, str_nud, str_odm$0, str_ujg, "str_nvb"},
              str_che: str_iqc,
              str_bdj: str_nqo)}
        OR
          [rec(str_oyf: {str_nvs$0, FALSE, "str_bwo", (subtree(MININT))}),
           struct
             (str_hxw:
              { str_qmn, str_ezr, str_qhb, str_txm, str_jnc, str_igm
                |
                str_bwa > str_tdo },
              str_ptt: str_lsq),
           STRING,
           str_wnv$0,
           rec
             (str_mcg: str_qhd,
              str_flx: str_qie$0,
              str_wmr: INTEGER,
              str_hcd: str_zwq)]
        THEN
          str_jba, str_zjd, str_haf, str_hby, str_cik, str_frb, str_hav,
          str_hqh, str_oco :(
            #
              (str_pvx, str_rwv, str_kft, str_khy, str_jmm, str_lmt, str_cxu,
               str_yyu, str_mei, str_rwg).
            (!(str_scp, str_wkg, str_cre).
             (not({{NATURAL1, INT, NAT1}, str_liu} /<<: (FALSE ; FALSE))))
          )
        OR
          struct
            (str_utf: STRING,
             str_awi:
             struct
               (str_rcz:
                { str_tyj, str_eyx, str_esx, str_hpt, str_ivc, str_gkp
                  |
                  #
                    (str_tqy, str_uis, str_iki, str_aue, str_tyd, str_jbr,
                     str_opm, str_kaa, str_kck, str_bxt, str_znj).
                  (#(str_ozu, str_bum, str_nzd, str_lqz).(NATURAL1 /= 2)) })) <<|
          MININT'str_ebh
        THEN
          str_tug'str_txr
          :=
          SIGMA
            (str_yry, str_zyo, str_evd, str_pwc, str_gsc, str_gxk, str_whk,
             str_efw, str_qpg, str_hfy, str_zby).
          (#
             (str_hba, str_zku, str_wvi, str_nnw, str_axa, str_znp, str_yam,
              str_xdt).
           (str_vwk = str_tfa)|
           { str_vpr, str_bcr, str_jzp, str_tvj, str_ziz, str_rap, str_xwi
             |
             not(!(str_iii).(str_wov'str_ydh <<: str_drj)) })
        OR
          last
            ({str_xno, STRING, str_hsq$0, str_fjn, (FALSE , str_zwh), STRING}
             ,
             UNION
               (str_pwc, str_gvu, str_nnl, str_gxk, str_bhi, str_jrk,
                str_kpx, str_dbr).
             (NATURAL1 <: str_iuc =>
              #
                (str_xau, str_qys, str_qqe, str_xkj, str_kaw, str_wrf, str_reo).
              (MAXINT /<: str_btl$0)|
              str_zlc$0))
        THEN
          str_kfz, str_vbe
          :=
          (arity
             ({ str_fau, str_oyo, str_kvj
                |
                !(str_krf, str_kvw, str_ooo).
                (!(str_agz, str_asb, str_bxa).
                 (#(str_uwe, str_afj, str_qku, str_npv).({} <= str_rww$0))) }))
            'str_fbc
        END
      END
    END
  INVARIANT
    not
      (not(str_mhj >= str_mil$0) <=>
       not
         (str_kgj /<<:
          str_tpx |-> {str_aff$0, NAT, str_han$0, str_ewh$0, MAXINT}))
  VARIANT
    {str_roc$0,
     str_yph$0,
     str_gur,
     INT,
     ((str_fnd$0
       ,
       INTER(str_fxv, str_ndo, str_oxo, str_ega, str_blw, str_dtj).
       (str_kae = [] => NATURAL1 /= str_gpt| NAT))
        (bool(BOOL <: str_bbu$0)))}
  END;

  str_tvf, str_jia, str_fer, str_uab, str_tnu, str_cyt
  <--
  str_yma (str_sdf, str_vho, str_uyp)
  =
  PRE
    #(str_wxs, str_xlh, str_pfw, str_gpu, str_lwf, str_ffj, str_cpc).
    (rec
       (str_rbz: {},
        str_tya: { str_der | str_sug$0 /: str_qvs$0 },
        str_nob:
        INTER(str_fuo, str_qao, str_uvs, str_qhr, str_gte, str_bse, str_vyg).
        (str_grp$0 /= str_ybl| str_emw$0),
        str_tzz: str_ncb,
        str_mnp: bool(str_aaz$0 = str_tsh))
       'str_kue :
     TRUE)
  THEN
    IF
      #(str_qhf, str_hhn, str_qhh, str_dll, str_qcm, str_cuy).
      ((str_jql$0 <= str_ibp => NAT <<: str_hld$0) or
       !(str_oem, str_rnq, str_gfz, str_mlr, str_njo, str_lzj).
       (not(str_rrz$0 = bool(str_nsa$0 /<: str_qls))))
    THEN
      CASE
        (rev
           ({rec
               (str_kix: str_rvr$0,
                str_phx: str_pin$0,
                str_wcj: str_tnt$0,
                str_zrt: str_qfp$0,
                str_okf: str_usm$0,
                str_kxp: str_lyz$0,
                str_kah: str_aeq),
             str_uzl,
             (mirror(str_yrk$0))})) ^
        (prefix(struct(str_gzn: {}, str_vqq: str_oeu)))
        OF
        EITHER
          {struct
             (str_yzr: str_zls,
              str_zdi: str_oyc,
              str_qpv: NATURAL1,
              str_nql: str_huj,
              str_hge: NAT,
              str_kie: (pred(284)),
              str_ivg: str_xuz),
           str_vmt$0,
           [NATURAL,
            str_aqo$0,
            struct
              (str_pbd: str_oie$0,
               str_qdo: str_xyt$0,
               str_uvs: NAT1,
               str_kqb:
               struct
                 (str_wke: str_zyo$0,
                  str_rgk: str_poe,
                  str_lwg: str_khw$0,
                  str_zjj: str_yvf$0,
                  str_nhn: str_jkf,
                  str_dch: BOOL,
                  str_une: str_flw$0,
                  str_ant: (NATURAL |-> str_bdo))),
            str_glu,
            str_oyb$0,
            str_pgu$0,
            NATURAL]}
        THEN
          str_xqo, str_qbp
          ::
          bool
            (#(str_rty, str_uix, str_jtb).
             (!
                (str_uwe, str_twd, str_ulp, str_jab, str_eiq, str_efn,
                 str_bbr, str_gqw, str_aaq).
              (str_qaf$0 > str_ert) &
              #
                (str_ymz, str_fxo, str_wkr, str_kcb, str_yww, str_naa,
                 str_fse, str_mvl, str_fod).
              (not
                 (!
                    (str_fvq, str_gna, str_dna, str_nxa, str_siw, str_smv,
                     str_atb, str_djc).
                  (str_iai$0 = str_euw$0)))))
        OR
          rec
            (str_sqe: MININT,
             str_ynp: FALSE,
             str_efg:
             (struct(str_plu: MAXINT) >->
              struct
                (str_lsw: str_jkh,
                 str_wfg: str_fju,
                 str_fxl: str_axu,
                 str_ldg: STRING,
                 str_bxz: str_nil,
                 str_qxo: str_afo$0,
                 str_nvv: str_ppe$0,
                 str_nzd: NATURAL1)),
             str_tys:
             PI(str_piz).
             (TRUE /: str_ecz|
              INTER
                (str_oyo, str_awy, str_ttw, str_foo, str_ccs, str_fhi,
                 str_jjq, str_kog, str_cgw).
              (str_mdi$0 /= str_llm| INT -->> str_heq$0)),
             str_hld: MAXINT,
             str_xld: str_weu$0)
        THEN
          str_lus
          :=
          [{ str_rxp, str_etd, str_nej | STRING < FALSE },
           (NAT1 <<|
            rec
              (str_ufx:
               rec
                 (str_wlq: str_jye$0,
                  str_myd: str_byg,
                  str_pfo: str_sgl,
                  str_rdx: str_tlm,
                  str_shh:
                  { str_ymp, str_jme, str_hyt
                    |
                    str_ktz /: str_wje => str_itt /<<: str_bjd$0 },
                  str_pnm: INTEGER,
                  str_xmh: str_lwd$0),
               str_she: str_yll$0))]
        OR
          struct
            (str_wtd:
             rec
               (str_syd: (str_uqm$0 |-> str_vuj),
                str_ohj: (fnc(struct(str_und: str_cdw, str_jby: str_xbw))),
                str_vpf: (str_vut .. (NATURAL(str_nam))),
                str_ytj: NATURAL,
                str_gwh: str_nbv),
             str_bgf: STRING)
        THEN
          str_gcm'str_wze
          :=
          rec
            (str_gao:
             (dom
                ([str_isj$0,
                  rec
                    (str_zkx: str_yno$0,
                     str_mtu: str_ppq$0,
                     str_eka: str_ese$0,
                     str_qbw: str_qit$0'str_egf,
                     str_kdi: MAXINT),
                  str_bbk,
                  rec
                    (str_qws: STRING,
                     str_hcg: NATURAL1,
                     str_xlb: BOOL,
                     str_rrq: str_vju$0),
                  str_syu])),
             str_xow:
             { str_lin, str_tov, str_muv, str_una, str_jyp, str_tmd, str_mpj,
               str_pbj, str_lds, str_coo
               |
               str_ztw$0 /<<: BOOL })
        OR
          rec
            (str_tsw: str_xgn$0,
             str_ick: str_fyy,
             str_sgt:
             PI(str_mul, str_wkw, str_pje, str_gwm).
             (NAT /= str_wdi| rec(str_hjm: BOOL, str_rhu: str_lum$0)),
             str_zmp:
             rec
               (str_gtb: NAT1,
                str_vbd:
                INTER(str_djh, str_naj, str_sch, str_seo, str_gnv).
                (!
                   (str_otd, str_les, str_fgu, str_tbx, str_fzg, str_luc,
                    str_ewr).
                 (str_eql >= str_jhz$0)|
                 str_kei$0(str_ywk)),
                str_rja: BOOL))
        THEN
          str_qkb 
            (
              (str_lup$0
                 ({ str_qdg, str_ken, str_cns, str_jai, str_mms, str_irg,
                    str_oqn, str_ykw, str_xha
                    |
                    #(str_tkq).
                    (!(str_xnr, str_sbr, str_ohd, str_ygb).
                     ((str_jtu$0 /= TRUE or [] > FALSE) =>
                      str_jfr$0 /<: NATURAL)) }))
                'str_mlw
            )
            (
              {str_zok$0,
               STRING,
               str_gnc,
               %(str_nmt, str_wkd). (str_mml /<<: str_nlg| str_wec),
               str_csq$0}
              |->
              (const
                 (struct(str_dni: str_crn$0)
                    (rec
                       (str_vvi: {},
                        str_soc: str_mdn,
                        str_erg: str_ucs$0,
                        str_whk: str_hiv$0,
                        str_aal: str_svx$0))))
            )
            (
              UNION
                (str_blq, str_ztf, str_azc, str_lon, str_xkl, str_lys,
                 str_jlp, str_zet, str_gel).
              (%(str_rvg, str_hhq, str_piy). (str_jsw > NAT1| STRING'str_irc) <:
               str_zxh \/ FALSE|
               str_ibo(bool(str_ydn$0 <= TRUE)))
            )
            (
              closure
                ({struct
                    (str_xut: INTEGER,
                     str_wzf: str_ydx$0,
                     str_xzc: str_ywo,
                     str_hgd: NATURAL,
                     str_zzh: NAT),
                  str_wpe$0,
                  rec
                    (str_ttr:
                     struct
                       (str_zeo:
                        rec
                          (str_yhf: str_qyy$0,
                           str_dxj: FALSE,
                           str_ajt: "str_pfh",
                           str_rfz: MAXINT,
                           str_iyv: str_wpy$0,
                           str_owi: []),
                        str_zds: str_for$0),
                     str_okn: str_mgh,
                     str_dkl: [MININT, MAXINT, {}, BOOL, MAXINT, str_mob$0])})
            )
          
          :=
          bool
            (not(not(not(not(str_gyp > str_kuk$0)) <=> not(str_ali$0 >= []))))
        OR
          { str_pok, str_cio, str_orz, str_fme, str_xpu
            |
            str_alh$0 = str_ity$0 => not(STRING /= str_ycs) }
          |->
          struct
            (str_mop: (str_tzl(str_pbn)),
             str_zjd:
             rec
               (str_vnu: str_hmg,
                str_ivi: str_hhk$0,
                str_hyk: STRING,
                str_mok: str_unt,
                str_ybl: MININT,
                str_msq: FALSE,
                str_zxw: str_ntj,
                str_vwv: str_coy$0))
        THEN
          IF
            !(str_qeo, str_hku, str_vcz, str_xdw, str_kmj, str_iky, str_pah).
            (#(str_bgz, str_nfp, str_qot, str_oaa, str_nhn).
             (!(str_hod, str_exm, str_ktc, str_ges, str_rhi).
              (#(str_gzc).(NATURAL /: rec(str_snq: NATURAL1) |-> str_uix))))
          THEN
            str_bdg 
              (
                bool
                  (!(str_qrn, str_zkp, str_kuc, str_lsm, str_yoh).
                   (#(str_dab, str_wbr, str_dxk).
                    (!(str_jat, str_ktu, str_bwc).
                     (str_ocd'str_gsz <: bool(str_mnr$0 /<<: TRUE)))))
              )
              (
                seq
                  ((str_zlo
                      (str_iyn$0
                       ,
                       { str_oat, str_blh, str_yzn, str_oel, str_gvf,
                         str_fnu, str_dyc
                         |
                         NATURAL1 : str_jtb$0 })) /|\
                   { str_veo, str_ned, str_mnd, str_mut, str_rnc, str_xya,
                     str_syq
                     |
                     !
                       (str_isn, str_ajs, str_wbn, str_dli, str_tyz, str_pqr,
                        str_tks).
                     (str_eop /<: str_gjo$0) })
              )
              (
                bool
                  (#
                     (str_qbd, str_cnu, str_fhs, str_nox, str_uah, str_beg,
                      str_brj, str_vzf, str_eqd, str_aiw).
                   (str_aov$0 >= str_nwv or
                    [] /<<: {} or
                    (str_yoh$0 = str_lqk <=> not(str_tfq > str_dok$0))) &
                   str_nxa <<: str_zyr$0)
              )
              (
                {MAXINT,
                 str_cql,
                 bool
                   (!
                      (str_cfp, str_xpk, str_wjk, str_rux, str_uzq, str_uux,
                       str_nbz, str_gmx, str_xvh, str_bmt).
                    (not(str_hcu /= str_efr$0 & str_sug$0 >= str_inr$0))),
                 NATURAL1,
                 NATURAL1,
                 str_oip$0,
                 {str_lub$0, str_sux$0, BOOL, INT, str_vdj$0, str_uys,
                  str_msp$0},
                 (NATURAL |-> str_bgr$0)}
              )
              (
                PI(str_mla, str_oge). (str_xgs$0 <<: str_kqi| str_tci) <->
                ((str_dau$0
                  ,
                  struct
                    (str_vcs:
                     INTER
                       (str_qwo, str_rfx, str_zxg, str_ofb, str_vqk, str_ajz).
                     (str_nfs <: str_rkf| str_yoj$0),
                     str_ctd: str_esk,
                     str_ryf: str_hsw$0,
                     str_sfq: STRING,
                     str_qnz: str_sho,
                     str_cem: MAXINT))
                 ,
                 (str_qwn(str_too)))
              )
              (
                { str_gha, str_fcf, str_ibz, str_iim, str_mhy, str_ity,
                  str_axs, str_xzl, str_jbx, str_gyu
                  |
                  !
                    (str_vtt, str_ogj, str_itf, str_xst, str_twv, str_hmy,
                     str_ovi, str_clt, str_vrp, str_nfg, str_aya).
                  (#(str_hhl, str_knl, str_omk, str_lvs, str_elk, str_izg).
                   (!(str_rvw).((NAT1 , str_viq)'str_qhr <= NATURAL1))) }
              )
              (
                %(str_ppr, str_ssv, str_jnj).
                (#
                   (str_fdo, str_pcw, str_hmp, str_vtx, str_ras, str_uke,
                    str_vsr).
                 (str_wgp =
                  [str_xvr,
                   str_plz,
                   str_qnl$0,
                   str_eur$0,
                   NATURAL1,
                   (INT(str_qci$0))])|
                 min(STRING |-> str_ezh))
              )
              (
                { str_tov, str_ofr, str_tww, str_yjt, str_ivt, str_jdo,
                  str_avo, str_xtu
                  |
                  #(str_drr).
                  (!
                     (str_wmx, str_jxo, str_fai, str_rxn, str_kvu, str_qdi,
                      str_lrh, str_daq, str_vxl, str_eiw).
                   (#(str_vov, str_vnm, str_cck).(str_qao /<<: []) &
                    #
                      (str_gnp, str_jbw, str_eeq, str_mpm, str_nwi, str_aih,
                       str_cex).
                    (not(str_izg <<: str_ogq)))) }
              )
              (
                bool
                  (FALSE <: STRING &
                   NAT1 /= str_xyn$0 &
                   not
                     (str_gia$0 >=
                      %
                        (str_dzj, str_esd, str_guf, str_aoy, str_xqo,
                         str_rgf, str_zdf, str_xnr, str_nur, str_vud, str_jtp).
                      ("str_nij" <: str_yme| str_yei)))
              )
            
            :=
            struct
              (str_eau:
               (max
                  ({ str_fld
                     |
                     not
                       (!
                          (str_wjn, str_zum, str_qnd, str_kyk, str_pdh,
                           str_sfp).
                        (str_omk$0 < str_wes(NATURAL1))) })))
          ELSIF
            not
              (not(not(not(str_rto : BOOL) => str_qva$0 >= BOOL)) <=>
               !
                 (str_kwy, str_vvx, str_vhg, str_igl, str_gyu, str_mfz,
                  str_hlv, str_xyd, str_nrw, str_dsi).
               (str_fnx$0 /<: NATURAL1))
          THEN
            str_bxi, str_pfg
            ::
            [(str_ysn(str_rib)),
             str_ixa,
             str_uno$0,
             rec
               (str_lwx:
                {str_eta$0, str_xoo, NAT, str_jfn$0, str_tpe, str_iab$0,
                 str_kkl$0, str_rwv$0},
                str_nvk: str_ien,
                str_flw: %(str_qgv). (str_bkh /<<: str_tgl$0| TRUE),
                str_npw: STRING),
             str_aaw$0]
              (NAT , str_lkp) ;
            str_dtp 
              (
                bool
                  (bool
                     (#
                        (str_acs, str_vkr, str_mfm, str_axa, str_vun,
                         str_taf, str_dsb, str_cog, str_cyn, str_rny, str_ujm).
                      (NATURAL = NAT1)) <<:
                   sons(front(str_qyl$0)))
              )
              (
                bool
                  (!
                     (str_gti, str_rae, str_zln, str_odk, str_myf, str_xgz,
                      str_zju, str_xvk, str_wpz, str_fjb, str_trt).
                   (str_bny$0 > str_fdf)) +
                SIGMA
                  (str_ajw, str_ygm, str_snj, str_rys, str_jxy, str_fuc,
                   str_xov).
                (#
                   (str_vqe, str_uca, str_dlu, str_rni, str_psg, str_oll,
                    str_lqz, str_fqt, str_tuv, str_wti, str_fii).
                 (STRING /<<: str_cqt$0)|
                 str_uxb(str_zff))
              )
              (
                {{(str_ymv(str_ksp$0))'str_dgp, [], str_fxp$0, str_utn$0},
                 NAT1,
                 BOOL,
                 str_lfo$0,
                 SIGMA(str_jje, str_ehn, str_imm, str_kmf, str_tii).
                 (str_jmx > str_fdb| str_tij , str_olv)}
              )
              (
                [[{ str_mcj, str_qeo, str_gwt, str_dnp, str_avr, str_ekj,
                    str_lwf
                    |
                    struct
                      (str_yci: MININT,
                       str_hbk:
                       SIGMA
                         (str_khd, str_cwi, str_xfl, str_bbf, str_zva,
                          str_lyu, str_ogq, str_ixu, str_lia).
                       (str_kud /<<: str_cdf$0| str_hdf$0),
                       str_frk: str_uaq$0,
                       str_mab: str_fsv$0,
                       str_fwu:
                       struct
                         (str_oda: str_zel,
                          str_ahe: str_bsq,
                          str_ldx: NATURAL,
                          str_woy: [],
                          str_scr: str_ulg$0,
                          str_ypo: str_oen),
                       str_qcx: str_xwx$0,
                       str_xkd: str_qcc$0,
                       str_kxp: str_nco) :
                    str_kaf$0 }],
                 TRUE,
                 NATURAL]
              )
              (
                bool(bool(str_czi > str_cxy$0) > str_qgb$0)
                  ({ str_jht, str_fcu, str_wsr, str_cth
                     |
                     str_cea$0 <= str_mvs$0 =>
                     #
                       (str_rvx, str_swg, str_wmu, str_daw, str_otg, str_tyz,
                        str_qiq, str_psa).
                     (str_qrm$0 <= str_wew$0) })
              )
              (
                { str_sxk, str_jjn, str_cpn, str_yyx
                  |
                  not
                    (#
                       (str_eqb, str_oun, str_wfx, str_veb, str_gma, str_xor,
                        str_pxz, str_lhr).
                     ((BOOL +-> str_uet$0) |-> str_tex$0 >
                      struct(str_nnn: str_fkt$0, str_dms: MAXINT))) }
              )
              (
                rec
                  (str_fdr: [],
                   str_ieq: INTEGER,
                   str_vak: (closure1(str_vjo)),
                   str_kms: str_dua$0'str_yjl,
                   str_det:
                   { str_tlh, str_ytl, str_gev, str_tti, str_zlr, str_zwy,
                     str_smz
                     |
                     {} <: str_lqp$0 },
                   str_zho: str_jmn$0,
                   str_kaq:
                   rec
                     (str_hzg: (inter(NAT1)),
                      str_sku: {str_hwy},
                      str_jes: INTEGER,
                      str_zqn: str_mjp$0,
                      str_qir: INT,
                      str_hyd: str_svd$0))
              )
              (
                {(top((NAT |-> str_hki)'str_hqw , str_sqn'str_eiz)),
                 (BOOL |-> str_ntc$0),
                 NATURAL}
              )
              (
                struct
                  (str_foj: str_dgv$0,
                   str_yog: str_sgz$0,
                   str_bke: TRUE,
                   str_csd:
                   struct
                     (str_bxy:
                      (([str_qdt$0, str_yhr, str_gzx$0, str_lwq$0] ; str_usx))
                        'str_kiw,
                      str_tde: FALSE,
                      str_vgq: str_mee,
                      str_rek: NAT,
                      str_ity: str_wbq$0,
                      str_kas: str_mzz),
                   str_qgq: {},
                   str_axi: str_rhd$0,
                   str_lmi: str_bmp,
                   str_ioo:
                   rec(str_vze: str_hzb, str_ncd: (str_fks , STRING)))
              )
            
            :=
            iseq
              (PI
                 (str_azo, str_wau, str_irb, str_fpv, str_dxp, str_qyh,
                  str_fvi, str_nab, str_qzl, str_vwx, str_jrc).
               (str_ggm > str_gnb|
                struct
                  (str_ozk: (MININT |-> str_uio$0),
                   str_fvy:
                   [INTER
                      (str_oxl, str_wuq, str_vqz, str_nyw, str_btz, str_azs,
                       str_zts, str_gkm).
                    (str_ixm <: str_rjk| str_nnt),
                    str_clp,
                    str_afs,
                    str_svu,
                    INT,
                    str_iqp$0,
                    (str_onm$0 |-> str_abd$0),
                    str_zfp$0],
                   str_vyp: str_rcf)))
          ELSIF
            str_eba$0 >
            { str_icw
              |
              #
                (str_mtu, str_gdw, str_eav, str_dzq, str_xsj, str_uni,
                 str_hiz, str_nsl, str_ysg, str_xge, str_cqb).
              (!(str_pgn, str_fdx, str_giq, str_nqj, str_tkl, str_yql).
               (!(str_ary, str_nbx, str_yoj).(not(NAT /<: "str_lrs")))) }
          THEN
            str_rqy, str_vvg, str_lft, str_qdt, str_uxt, str_vjw :(
              [str_rnw$0,
               NATURAL,
               str_fwb,
               UNION(str_onp).
               (struct(str_mji: str_tpi, str_qgc: str_ucz) < TRUE| FALSE),
               str_vqw$0] /<<:
              bool(FALSE <= str_hfq)'str_xcf
            )
          END
        OR
          [str_pdh,
           str_bco,
           {BOOL,
            NATURAL1,
            MAXINT,
            str_uns,
            { str_uze, str_tfb, str_jta
              |
              !(str_cdz, str_aua).({} <<: str_xon) },
            str_ipl$0,
            str_qfe},
           {INTEGER,
            [str_lxj, TRUE, [], str_grm$0, str_qms$0, str_dkt, str_lmp$0,
             str_cjn$0],
            str_kgk,
            str_rvj$0,
            TRUE,
            NAT,
            str_rfo$0,
            (str_vbw(str_oov$0))}]
        THEN
          ASSERT
            [str_jtj$0,
             "str_xfz",
             str_yzd$0,
             NATURAL1,
             MAXINT'str_xqs,
             str_gtt,
             str_xyq,
             str_gvy] :
            infix
              (str_thq$0'str_nsk
               |->
               { str_moq, str_rck, str_tna, str_mto, str_moh, str_yhl,
                 str_ofs, str_ulf, str_uto, str_epo
                 |
                 str_zdj$0 /= str_hao })
          THEN
            ASSERT
              SIGMA(str_yik, str_hnk, str_tce, str_fva, str_qla, str_vgq).
              ([] <<: INTEGER <=>
               (STRING < str_niu$0 <=> str_cti = str_mlz$0)|
               bool(FALSE : MAXINT => str_ijy /= str_ixm$0)'str_guc) >
              INT
            THEN
              skip
            END
          END
        ELSE
          str_nhe'str_dus
          :=
          { str_tgf, str_pfp, str_xja, str_vgr, str_imf, str_nzu, str_mgk
            |
            #(str_xwd).
            (min(str_ueh) /<:
             INT
             |->
             INTER
               (str_bth, str_jan, str_gfz, str_kkd, str_bfh, str_jlv,
                str_ter, str_nmh, str_vfb, str_joh, str_hmk).
             (!
                (str_xrp, str_kwi, str_cnm, str_iim, str_noe, str_ojr, str_fgs).
              (str_bjw$0 <<: BOOL)|
              MININT)) }
        END
      END
    ELSIF
      not
        (!(str_ecr, str_fkr, str_osv, str_nfb, str_yse, str_qxc).
         (!
            (str_dts, str_pmf, str_qoe, str_dqr, str_psq, str_zbj, str_lpt,
             str_dhe, str_mfr).
          (!(str_odf, str_org, str_rsm, str_uod, str_yqx).
           (str_mcd <: str_wfu$0({str_kvp})))))
    THEN
      str_ern 
        (
          bool
            (#(str_bbo, str_ljg, str_pau, str_ezq).
             (not
                (!(str_nrh, str_kak, str_fsv).(str_leb$0 > str_esg) &
                 str_xaf$0 <= str_nmf))) \/
          [str_jqz$0, str_vaf$0, str_ugl$0, INT, NAT1, NAT, str_txe, MININT]
        )
        (
          struct
            (str_mwv:
             (str_vyr$0
                [struct
                   (str_nvm:
                    rec
                      (str_yhb: str_vgr,
                       str_ous: str_lfc,
                       str_rak: NATURAL,
                       str_ifj: TRUE,
                       str_qjg: str_jjc$0,
                       str_ock: FALSE'str_zhw,
                       str_ptj: str_khu$0),
                    str_myi: str_xda$0,
                    str_qov: str_ivk,
                    str_kit: (str_vzt$0(str_bpx$0)))
                   ({})]))
        )
        (
          [FALSE,
           str_gmv$0,
           rec(str_nil: {str_wkk, str_xjh$0, "str_orm"}),
           NAT1,
           [str_cmx,
            str_nhl,
            (FALSE , STRING),
            str_idp,
            MAXINT,
            str_axa,
            (rel(NATURAL1))]
             'str_hit,
           str_wne,
           INTEGER,
           MININT]
        )
        (
          struct
            (str_gwt: { str_lyw, str_qbn, str_vrm | {} : str_afx$0 },
             str_xfo:
             (SIGMA
                (str_yrx, str_iul, str_czh, str_mzt, str_ywn, str_qgi,
                 str_bwm).
              (str_qqs$0 <= str_heo$0| subtree(str_dod))
              |->
              {}),
             str_zsc: 6,
             str_tyg: [[]])
        )
      
      :=
      ran
        (rec
           (str_prq:
            (inter
               ({str_ptl, INTEGER, BOOL, str_nxe, str_psp$0, str_qin$0}
                ,
                str_lcd$0)),
            str_cff: STRING,
            str_tsa:
            SIGMA(str_kdy, str_kbs, str_bkl, str_qpo, str_bnd, str_fhd).
            (not(str_rvq$0 /<<: str_bwg)| str_yhr$0)))
    ELSIF
      #(str_pep, str_fbq, str_ilm, str_wcd, str_rlx).
      (#
         (str_xcv, str_qew, str_ieu, str_woh, str_qbf, str_ywm, str_uwq,
          str_wwb, str_qak, str_ukr, str_fbx).
       (not
          (not
             (NATURAL1 =
              rec
                (str_dms: str_ezt,
                 str_xmz: str_qwj,
                 str_kne: str_zhb,
                 str_jzo: {},
                 str_bbs: str_bgo,
                 str_mae: INTEGER,
                 str_vro: (NAT1 ^ str_tmn$0),
                 str_azu: str_trg$0)))))
    THEN
      str_rwd'str_kst
      :=
      bool
        ([{ str_dwv, str_rnz, str_hov, str_sye, str_nbz, str_bps, str_ufc
            |
            str_dlw$0 <<: MAXINT }] <<:
         { str_ezo, str_qwu, str_ann, str_ntm, str_kvd, str_njx
           |
           BOOL >= str_zre$0 })
        'str_dvi
    ELSIF
      not(not(not({} <= BOOL)) & not(NAT1 /: rel({})))
    THEN
      str_rdc 
        (
          struct
            (str_mfs: str_mfi,
             str_roy: str_mxg,
             str_eea: MAXINT,
             str_sab: str_oii,
             str_fhv: str_thr,
             str_xdv:
             struct
               (str_bma: TRUE,
                str_hbc:
                (str_rlj$0
                   (struct
                      (str_seu: (union(str_cda)), str_bam: str_vel'str_xgs))),
                str_lxc:
                struct(str_eib: str_fmp$0, str_wnr: str_ayk, str_eeg: NAT),
                str_gdz: MININT),
             str_tzw: str_bnc$0)
        )
        (
          struct
            (str_aji:
             rec
               (str_unz: [],
                str_hnr: str_yhf,
                str_gmh: str_trf$0,
                str_pzb: str_tkq$0,
                str_bjy: str_xzw$0,
                str_mxs: str_mpn$0,
                str_bgq: str_txi$0,
                str_ozp: str_bxy),
             str_gul: FALSE,
             str_loq:
             ({ str_qyt, str_vzq, str_suc, str_tiu, str_zlj, str_cun,
                str_wne, str_trl, str_cxz, str_lsa, str_fld
                |
                #(str_ors, str_tls, str_uzg).
                (!(str_ini, str_owu, str_xgu, str_kap).
                 (#(str_wgg, str_dvt, str_kzb).(str_dbn /= str_reo))) }
                (str_bfx)))
        )
        (
          struct
            (str_czb:
             INTER(str_fut, str_csd).
             (NAT1 > str_vfv|
              {str_fnw, str_hsj$0}
                ({ str_ycz, str_anf, str_cre, str_ybo, str_tok
                   |
                   !
                     (str_kwp, str_nor, str_jel, str_sxc, str_uhg, str_tdt,
                      str_hml).
                   (INT /= str_bfq$0) })),
             str_xda:
             rec
               (str_zbh: str_hbz,
                str_mjq: str_eop$0,
                str_dog: str_uyo$0,
                str_mye: str_zys$0,
                str_jqy: FALSE,
                str_ztu: str_ucc$0,
                str_lqj: str_zzg$0,
                str_wgr: 53),
             str_pfd: {})
        )
        (
          { str_hpl, str_mia, str_jci, str_vtx, str_fij, str_etm, str_qly,
            str_fpc
            |
            !(str_yuf, str_lri, str_zgg).
            (struct
               (str_tnl: str_qlq$0,
                str_jnf: {},
                str_nqe: str_owr,
                str_nzv: str_tgw,
                str_dkv: str_vnh,
                str_wza: str_zsr$0,
                str_jah: {}) /:
             mirror
               ([]
                |->
                { str_qdv, str_tvb, str_fzb, str_ojn, str_wjj
                  |
                  "str_woy" /<: STRING })) }
        )
        (
          [struct
             (str_ulw: str_aqx$0,
              str_ogt: str_rjq,
              str_nwb: FALSE,
              str_kyf: str_elf),
           UNION
             (str_gdj, str_cnz, str_kqx, str_bpx, str_eqg, str_qkm, str_ure,
              str_sud, str_oyi, str_zgy).
           (#
              (str_jnq, str_krx, str_jdh, str_kdg, str_lqp, str_jcg, str_knw,
               str_ncg, str_tkc).
            (MININT /<: str_kap$0 &
             !
               (str_ylz, str_nid, str_idq, str_xpk, str_bnj, str_lkv,
                str_mvi, str_qug, str_wtu).
             (str_zpa > str_hvl))|
            str_fvc),
           str_eyo$0]
        )
        (
          { str_ovl, str_vdv, str_rqu, str_bxi, str_lbd, str_guz, str_kvn
            |
            !(str_wpn).
            (not
               (!(str_oee, str_odq, str_gqa, str_fbo, str_roy, str_ddf).
                (bool(str_xyw /<: str_nyz$0) /<:
                 %
                   (str_tai, str_buu, str_zwd, str_zye, str_ksq, str_vse,
                    str_hzz, str_tfs, str_ane, str_cdw, str_tow).
                 (str_atm = str_flz$0| str_kdq$0)))) }
        )
        (
          -
            ({ str_smu, str_fbx, str_rjs, str_xsu | NATURAL >= NAT } \/
             bool
               (not
                  (#
                     (str_vqm, str_nbd, str_eox, str_kkt, str_mim, str_kdl,
                      str_fij).
                   (str_vnq : str_thp))))
        )
        (
          (INTEGER , (max(str_fjz)))'str_lnm +->>
          rec
            (str_vrh: [],
             str_yfz: str_pqs$0,
             str_zbz:
             struct
               (str_kbz: str_ffh$0,
                str_mjs: str_hza$0,
                str_hfw: (MAXINT , STRING)))
        )
        (
          (tree
             ({ str_lsz, str_jrq, str_hsu, str_dcg
                |
                #
                  (str_ryx, str_vvr, str_jcx, str_aef, str_hcv, str_tvo,
                   str_akl, str_wmv, str_vod, str_khs, str_ksv).
                (!
                   (str_izu, str_nul, str_ogz, str_rlo, str_mof, str_upk,
                    str_jaz, str_bve, str_qnt).
                 (!
                    (str_usn, str_inz, str_pmo, str_ssd, str_lye, str_vsg,
                     str_wto, str_wpx, str_ocn, str_ttx).
                  (str_hxe$0 /= {}) &
                  NAT1 <= str_tzf$0)) }))
          ,
          str_meq
        )
      
      :=
      { str_prl, str_tua, str_skh
        |
        {[str_zoa, str_nur$0, str_vit$0, NAT1, str_twj$0], str_oel, str_kxh$0} mod
        str_tce /<:
        str_rgq$0 } /
      rec
        (str_hin: str_xxs$0,
         str_vzn: [],
         str_mgw: str_qet,
         str_xtd: str_avg,
         str_yht: str_gzn,
         str_nij: str_dtz,
         str_tzz: str_etd)
    END
  END;

  str_rbw, str_lkd, str_asu, str_gke, str_hex, str_msk, str_zma, str_mny
  <--
  str_tqr (str_dll, str_vit, str_eqj, str_vdc, str_pbr, str_omy)
  =
  CHOICE
    ANY
      str_lkh, str_jku, str_uru, str_tri, str_mao, str_nns, str_hpf, str_qts,
      str_dft, str_yym
    WHERE
      !
        (str_auc, str_kje, str_yfi, str_nui, str_nmz, str_vis, str_jsw,
         str_cee, str_qwy).
      (#(str_ezd).
       (!(str_cnc, str_vyc, str_mua, str_ool, str_gyy).
        (#(str_byx, str_iec, str_srf, str_wmc, str_txz, str_dnd, str_zpt).
         (not(str_wkj$0 <: str_fti$0)) &
         not(str_kab < str_leh))))
    THEN
      BEGIN
        CHOICE
          skip
        OR
          str_uui 
            (
              [bool(not(str_pck < str_fvo$0)),
               UNION
                 (str_djb, str_kdl, str_eml, str_pco, str_dgz, str_xev,
                  str_boy, str_jrx, str_aob).
               (str_zgl , str_zfj$0 < str_jwy| str_qsj$0),
               NAT,
               struct
                 (str_vdw: str_jvu,
                  str_qif: TRUE,
                  str_lca: NATURAL,
                  str_dbn: TRUE,
                  str_dxh: str_euo,
                  str_oac: str_goa)]
            )
            (
              const
                (rec
                   (str_ghi:
                    {NATURAL1,
                     INTEGER,
                     (fnc(str_qoz$0)),
                     str_owx$0,
                     TRUE,
                     str_hiw$0,
                     MAXINT'str_huj},
                    str_rcj: bool(str_ifp$0 > NATURAL),
                    str_fsw: str_fld,
                    str_fvj: str_oan$0,
                    str_qln: str_txz'str_lpx))
            )
            (
              %
                (str_ymw, str_htp, str_kly, str_uvi, str_amp, str_zpq,
                 str_odw, str_vpc, str_vno).
              (str_jdw$0 <<: NAT| NATURAL)
              ,
              (prj1
                 (MININT
                    (inter
                       ({[],
                         INTEGER,
                         str_rsj$0,
                         { str_lbs, str_kkk, str_yem, str_mon, str_tsp,
                           str_uki, str_obg, str_frz, str_ipg
                           |
                           str_cds <: str_isu },
                         str_xcm$0,
                         str_tls$0}))))
            )
            (
              INTER(str_aqj, str_pgt, str_zqo, str_qdm).
              (not
                 (!
                    (str_tvs, str_pmp, str_fuo, str_wjy, str_yln, str_tzg,
                     str_ycg).
                  (str_ocn <= str_lft))|
               struct
                 (str_xoy: str_kut,
                  str_wim: [str_xst$0, bool(str_wzk$0 /= str_nwq$0)]))
            )
            (
              (arity
                 (INTER
                    (str_mhw, str_uul, str_por, str_qoo, str_flf, str_aao,
                     str_vlt, str_rps, str_wkz, str_aph).
                  (str_eeu$0 = str_gpo$0| TRUE)
                  ,
                  7118))
              |->
              ({ str_awb, str_oky, str_nth, str_gjx, str_hue, str_kox,
                 str_ryi, str_dqf, str_fwx, str_rpi
                 |
                 !(str_vcl, str_dad, str_sru).(str_lbt /= str_xrd) }
               |->
               str_rdn$0)
            )
            (
              rec
                (str_wps: str_edm$0,
                 str_luh:
                 bool
                   (rec
                      (str_cdy: str_lfm,
                       str_ilu: INT,
                       str_yxb: str_ugt,
                       str_hfn: FALSE) <
                    INTEGER <=>
                    str_fia$0 <: INTEGER),
                 str_noh:
                 INTER(str_nbr, str_pug, str_wss, str_rcn).
                 (str_vul <= str_nwb| BOOL),
                 str_peq: MAXINT'str_akk)
            )
            (
              struct
                (str_ocw: (tree(NAT)),
                 str_nii: (str_txd$0 <-> TRUE),
                 str_fzt:
                 (SIGMA(str_uzf). (NATURAL /: str_yny$0| str_myt)'str_qev
                  |->
                  str_fwr),
                 str_noh: str_cag,
                 str_ffi: (str_npk >-> str_lco))
            )
            (
              struct
                (str_joi: TRUE,
                 str_fty:
                 {NATURAL, str_kwz, str_wbr$0, str_nfv$0, str_ioy, str_cox},
                 str_uff:
                 rec
                   (str_nvw: {},
                    str_ttv: str_vtd,
                    str_jjk: str_orj$0,
                    str_mdj: str_kbq,
                    str_nuy:
                    UNION(str_nwk, str_vqf, str_lpk).
                    ([] < str_qws| str_cyi$0),
                    str_ddj: str_rxd,
                    str_bbh: str_ekg$0),
                 str_nwa: FALSE,
                 str_xsb: str_jsn$0,
                 str_hdb: {},
                 str_tkp: BOOL,
                 str_jts:
                 rec
                   (str_vxg:
                    struct
                      (str_dyb: INT,
                       str_mna: str_saf,
                       str_ryg: NATURAL1,
                       str_nbb: str_gfc,
                       str_bgf: MAXINT,
                       str_qyk: str_rts,
                       str_zwr: str_xnd$0,
                       str_nmt: {}),
                    str_erd: str_lap,
                    str_sbd:
                    {INTEGER, str_pzu, NAT1, STRING, str_ijp, str_cjk$0,
                     str_xjj, str_ema$0},
                    str_fmg: [],
                    str_tnv: str_vkn))
            )
          
          :=
          [MININT,
           str_vaq$0,
           [{str_vac$0,
             (str_uxu |-> str_iqb),
             NAT1,
             rec
               (str_ulg: str_riz,
                str_qup: str_iln,
                str_zvw: str_bxj,
                str_xfk: NAT)}],
           NATURAL1,
           INTEGER]
            (conc(str_zti$0))
        OR
          str_qgl, str_wrn, str_ent, str_bkk, str_ovm, str_iik, str_nww,
          str_dwn, str_igi, str_ubl, str_zcd :(
            not
              (bool
                 (not
                    (#(str_anu, str_frr, str_pnn, str_hfc, str_bcp).
                     (str_hhc$0 > str_mwj))) <
               rec(str_pdw: bool(str_rhl$0 <= str_nou$0)))
          )
        OR
          str_orp'str_qoa
          :=
          [str_lfq,
           (str_nhe
              (PI(str_tha, str_mfz, str_sol, str_hcc).
               (!(str_cen, str_ole).(str_cuw$0 /= str_sep$0)| MININT))),
           ([str_hyw$0]'str_uro(str_bfj))]
        OR
          skip
        OR
          str_wxf, str_szv, str_qxg, str_boy, str_fet, str_xkv, str_ftf
          ::
          {{95,
            str_dgh,
            str_wjj$0,
            str_pwn$0,
            str_cao$0,
            str_npk$0,
            str_lgt,
            (str_rjd / MAXINT)},
           SIGMA(str_dev, str_qwn).
           (str_dmy$0 /= str_kjm|
            [{ str_edn, str_rmy, str_unr, str_tor, str_fqi
               |
               str_owh$0 <: str_qib }]
              'str_anh)}
        END ||
        CHOICE
          str_hea, str_vcc
          ::
          bool
            (not
               (#
                  (str_xrx, str_gts, str_ayp, str_anb, str_plm, str_csb,
                   str_hft, str_yhn).
                (!(str_kyh, str_fdy, str_jgf, str_per, str_omn, str_rpr).
                 (str_kxa$0 <<: str_ais$0)) &
                !(str_xha, str_dap, str_hpr).
                (NATURAL <: MININT or str_ijf$0 >= str_pcy$0)))
        OR
          str_ddj'str_aiv
          :=
          {(SIGMA(str_bhp).
            (str_pyc$0 < FALSE => str_ggc$0 <= str_zkb$0| str_hnm)
            |->
            [str_yfd, str_arf, STRING]),
           str_cno$0,
           str_xug$0,
           {str_nox$0},
           (str_vdo , str_iyo$0),
           str_nco$0,
           str_jyu$0}
        OR
          str_eho 
            (
              (seq
                 (rec
                    (str_ezg: str_the,
                     str_tdf: str_drm$0,
                     str_nur: NATURAL,
                     str_cus: 4,
                     str_ovj: str_pfw,
                     str_rfe:
                     (MAXINT /\
                      { str_sze, str_nta, str_shq, str_mrq, str_qsf, str_gvw,
                        str_dlq, str_xep
                        |
                        INTEGER : MAXINT }))))
                (str_efx$0 **
                 { str_yjg, str_kpb, str_bnl | str_axe <= str_ilf })
            )
            (
              ({ str_wjz, str_kjt, str_fbf, str_zbr, str_bzo, str_zhs,
                 str_fng, str_vin
                 |
                 #(str_mkk, str_xea, str_iaf).(BOOL < BOOL) } ||
               ({str_vzm$0,
                 struct
                   (str_iyf: str_yqr$0,
                    str_sfy: str_ybg,
                    str_gsa: str_dgf,
                    str_ibc: str_zrv$0,
                    str_pbg: str_hmg,
                    str_pni:
                    {str_kew$0, str_hnx, str_mus$0, str_avy$0, str_rtf,
                     INTEGER, MAXINT}),
                 str_xoo$0,
                 NAT}
                  (NAT)))
            )
            (
              (FALSE <+ str_adw)
              ,
              struct
                (str_xnv: str_xwn,
                 str_xtb: str_vml,
                 str_trl: str_dvx,
                 str_wzt: str_xok$0,
                 str_rfv: (closure1(str_cjx(str_iut))),
                 str_qyg: NATURAL1,
                 str_mcr: [{}, (str_pmc$0 <<| str_jrq)])
            )
            (
              closure
                ({INTEGER,
                  str_buf$0,
                  str_qyi$0,
                  str_ipw,
                  rec
                    (str_pzg:
                     rec
                       (str_jye: str_sjm,
                        str_lgz: (iterate([str_dlb$0])),
                        str_vhb:
                        [str_lwn$0, str_plq, str_bww$0, str_zqa$0, str_vom$0]),
                     str_frp: str_ntn,
                     str_pjt: FALSE,
                     str_jsw: str_fsh$0,
                     str_zfx: NAT1)})
            )
          
          :=
          btree
            (rec
               (str_rts:
                bool
                  (!(str_ybt).
                   (#(str_twm, str_pwr, str_bvm).
                    (#(str_mql, str_zji, str_ide, str_dem).
                     (#
                        (str_jwu, str_hjv, str_nlt, str_ubp, str_icp,
                         str_vvy, str_zpy, str_ypi, str_rxl, str_jyu).
                      (str_qlh$0 <<: str_fuw)))))))
        OR
          str_aoq'str_ueh
          :=
          PI(str_kix, str_fah, str_okl, str_hji, str_kha).
          (#(str_iuj, str_zxl, str_zsq).(str_qhs <: str_voj$0)|
           SIGMA(str_eeq, str_jak, str_lga, str_hug, str_uge).
           (str_djk$0 /<: str_cme| str_egb)) ><
          { str_kyz, str_tah, str_umm, str_dto, str_otc
            |
            str_jhp =
            rec
              (str_pjf: TRUE,
               str_var: str_esw,
               str_ars: str_ezk$0,
               str_xlt: str_hrt) }
        OR
          skip
        OR
          str_bjf, str_jww, str_hrn, str_pbl, str_wfl
          :=
          { str_cua, str_eng, str_ybj, str_smw
            |
            const(conc(str_gji)) <=
            { str_pwj, str_ywu, str_xpk, str_umj, str_rrq, str_uqe, str_jkp,
              str_eoz, str_snv, str_zhw
              |
              str_pdb <: FALSE => str_dkx = str_rfa } }
        OR
          str_xmh 
            (
              PI(str_bqw, str_aok, str_wpp, str_qmq).
              (str_wja <<: MAXINT & not(str_ddr$0 >= str_vjn)|
               bool(not(str_adl : str_fhg))(TRUE))
            )
            (
              {{STRING,
                str_trc,
                UNION
                  (str_ytw, str_zqs, str_pgx, str_qzf, str_exb, str_rln,
                   str_fie).
                (TRUE < str_dpj$0|
                 { str_mey, str_phj, str_iay, str_cac, str_kne
                   |
                   !
                     (str_ire, str_yrt, str_jtv, str_wuo, str_tcd, str_bou,
                      str_prd, str_wxf).
                   (str_gfn$0 <= str_tyr) }),
                STRING,
                str_vfz$0,
                { str_nje, str_tmp | NATURAL /<<: str_six }},
               (STRING |-> NAT1),
               NAT1,
               str_hif}
            )
            (
              ([str_fio$0,
                { str_iqg
                  |
                  #
                    (str_gie, str_vfr, str_ood, str_kpn, str_boe, str_mhf,
                     str_zvu, str_edt, str_xcj).
                  (str_zpm$0 /<<: str_iep$0) },
                str_zyq$0,
                str_kuc,
                str_wug$0,
                str_xvl$0,
                {}] -
               MAXINT) ><
              {str_uxe$0,
               str_nhb,
               (str_ufy /\ str_lnb),
               str_sge,
               str_ysi,
               str_yyr$0,
               NATURAL,
               str_ezu$0}
            )
            (
              rec
                (str_sjk:
                 (str_opm$0
                    (INTER(str_aff).
                     (!
                        (str_tsc, str_vgb, str_zdi, str_nqz, str_rzy,
                         str_vjg, str_ehz, str_kcv, str_ont, str_gaj).
                      (str_tet >= str_xir)|
                      INT))),
                 str_khf: str_nmn$0,
                 str_fim: str_dtp,
                 str_jux:
                 rec(str_qpw: [str_lrf], str_qtq: (str_zxe --> str_zmw$0)),
                 str_xmv: MININT,
                 str_jsh: str_nez)
            )
          
          :=
          UNION(str_akb).
          (not(str_gth$0 /<<: str_qxe <=> MAXINT /= str_hka$0)|
           { str_yyt, str_wgi, str_kue, str_cwj, str_uvt, str_umh, str_dtj,
             str_qil, str_jch
             |
             not
               (#(str_bec, str_qlb, str_vsx, str_lcs, str_vhv, str_pla).
                (str_qct$0 /= str_ysq)) })
        OR
          str_nue'str_jgx
          :=
          [[STRING,
            struct
              (str_pya: BOOL,
               str_lpg: [],
               str_psi: INT,
               str_abl: str_wzk$0,
               str_bul: str_nrx$0,
               str_hxr: str_see$0,
               str_hyt: str_kcn,
               str_vjy: str_zhz$0),
            FALSE,
            NATURAL,
            BOOL],
           str_euu$0,
           str_nja$0,
           ((([] |-> str_rec$0)(str_xwb$0 , str_ytb$0))(str_jcq$0)),
           str_ryo$0,
           MININT,
           str_qli,
           str_wqo]
        END
      END ;
      str_cwl, str_gzn, str_idh, str_wne, str_eat, str_cqu
      ::
      bool
        (#(str_oxa).
         (#(str_lvg, str_axj).
          (!(str_jni).
           (#(str_ufq, str_dpr, str_yzy, str_jkk, str_spb, str_qjz).
            (str_jcn /: str_bxa$0 <=>
             #
               (str_mko, str_xtf, str_xey, str_wvt, str_pbr, str_oop,
                str_fyx, str_hyf, str_iou, str_dje, str_zlm).
             (str_xhi$0 > MAXINT))))))
    END
  OR
    skip
  OR
    str_rie 
      (
        PI(str_cvk, str_axq, str_ttj, str_kyg, str_guf, str_qfa).
        (!
           (str_knm, str_ptb, str_mvg, str_xjg, str_mpl, str_oep, str_lsm,
            str_trw).
         (not({} /= str_zqy$0))|
         struct
           (str_yiz:
            [NATURAL,
             str_zmo,
             {},
             %(str_zec). (str_xbe /= NATURAL| BOOL),
             str_mfk$0,
             INT],
            str_rii: MAXINT,
            str_bbf: str_isx$0))
          'str_dxf
      )
      (
        rec
          (str_aop:
           { str_rst, str_nab, str_hfx, str_goy, str_eao, str_cgl, str_gfb
             |
             NATURAL1 :
             str_fqn <-
             SIGMA
               (str_szi, str_tiv, str_mba, str_vtu, str_vlw, str_fhz,
                str_vrh, str_lln, str_lxb, str_uhk, str_ppr).
             (!(str_spm, str_xqq, str_lss).(INTEGER < str_fav$0)| str_uno) },
           str_brv: NAT)
      )
      (
        rec
          (str_vnv: NAT1,
           str_zjm: str_uxn'str_tly,
           str_lzd: str_dcy$0,
           str_kvc: {str_ciy$0, str_uxw, str_uni$0},
           str_crs: str_rqu,
           str_dgb: str_sii$0)
        |->
        (str_qoe$0
         ,
         rec
           (str_sgw: MAXINT,
            str_tsi: str_gan$0,
            str_ayc:
            { str_yhm, str_tqn, str_tgv, str_jhy, str_nch, str_hss, str_yft,
              str_gpo, str_rjk, str_dnw, str_baa
              |
              MAXINT = str_trz },
            str_xgs: str_zzs,
            str_lwc: str_wlj,
            str_xkf: str_fzb))
      )
      (
        {({ str_lts, str_vzk | str_zkl$0 <= [] }(str_hfy)),
         {[INTEGER,
           str_rpr$0,
           str_lnz,
           str_cpc,
           "str_fdx",
           str_vws$0,
           { str_aan | str_fkk$0 = str_mnz },
           str_jxh$0],
          (str_dzq , BOOL),
          str_wby$0,
          []}}
      )
      (
        (postfix(str_qpu)) |>
        rec
          (str_abd:
           [str_jfz$0,
            str_aux,
            str_umw$0,
            str_wor,
            struct
              (str_kut: str_abc,
               str_xkk: INTEGER,
               str_bzf: str_bpl,
               str_hga: str_bye,
               str_yyk: str_zaj,
               str_pnl: str_gtm$0),
            str_qkp$0,
            MININT],
           str_gid: [TRUE, str_ooh],
           str_qso:
           rec
             (str_kgo: str_jnt$0,
              str_yba: str_uhc$0,
              str_dpx: INTEGER,
              str_boh: str_olu$0,
              str_hjm: str_byf$0))
      )
      (
        struct
          (str_vns: str_lgo$0,
           str_jzq: [{str_wqr, str_tga}, str_brv, {}],
           str_lql:
           ([str_uhu$0, [], str_pvf$0, str_pez, str_twx$0, str_zhn$0]
            |->
            (NAT(str_kya))),
           str_niq:
           { str_frj, str_zuo, str_zxl, str_toc, str_onc, str_dmp, str_ula,
             str_wru, str_zbp
             |
             str_lye$0 : str_orb })
      )
      (
        [(str_szf(str_shj)),
         struct(str_lng: str_aee, str_pmk: str_efa),
         bool(INT = str_jmu),
         bool(INT /<: str_bnw$0),
         (str_kmf - str_apl)'str_ssg]
      )
    
    :=
    {str_ewr,
     str_pju,
     [str_zti$0, MAXINT, str_lsd$0],
     str_jsw,
     [STRING, str_mdw$0, str_xie],
     PI(str_hsz, str_sef, str_fkk, str_anr, str_fvb, str_sga).
     (str_gvt$0 /<<: str_tbp <=> str_gul$0 : str_gmj|
      {str_mqo$0, str_lgb$0, str_ibu})}
      'str_xec
  OR
    str_xue, str_sie, str_iqf, str_hdp, str_usr, str_whg, str_ehy :(
      not
        ([INT,
          str_rpo$0,
          "str_mdx",
          struct
            (str_gwz: (INTEGER /\ NATURAL1),
             str_zzy: INTEGER,
             str_gvp: str_avu$0,
             str_drc: (str_kay /\ STRING)),
          rec(str_kah: str_otz, str_ied: str_cxv$0),
          STRING,
          str_dqz$0] /=
         FALSE)
    )
  OR
    LET
      str_tkc, str_rck, str_ixe, str_ivd, str_kri, str_zkv, str_smj, str_iaj,
      str_kch, str_kub, str_bmy
    BE
      str_cxf
      =
      rec
        (str_dkq:
         UNION(str_gll, str_cbv, str_azm). (STRING = str_hov$0| str_qoe$0),
         str_rvv:
         (str_ghl ->
          ({str_lrv$0, str_fgf, MAXINT, [], bool(str_mlv$0 <: FALSE)} <<|
           struct
             (str_wmr: NAT,
              str_oid: str_zus,
              str_tof: str_jcp,
              str_ahu: STRING,
              str_bdu: FALSE,
              str_qcz: NAT1,
              str_qkg: str_xcj))))&
      str_ztb
      =
      { str_buh, str_eqb, str_owu, str_saa, str_hmk, str_kea, str_gfp,
        str_pyu, str_dia
        |
        not
          (!(str_amu, str_kkt, str_pgd, str_qhx, str_hsw, str_qnu).
           (not(not({ str_gme, str_jgg | NAT = MAXINT } > str_ylm)))) }&
      str_qni
      =
      struct
        (str_epz:
         ((str_nxd$0 ** str_xgv$0) +->>
          [MAXINT, (str_anq$0[str_qtf]), (str_ibz$0 * ({} |-> str_eco$0))]))&
      str_mns
      =
      first
        (size
           ({([NAT,
               str_spp,
               NAT,
               str_mcd$0,
               (perm(BOOL)),
               str_llw,
               str_nrt,
               str_gaf] *
              (seq(str_dym$0)))}))&
      str_xez
      =
      PI
        (str_cdq, str_jwr, str_yii, str_nyw, str_qhm, str_ivq, str_fyt,
         str_khs, str_nxe, str_auo, str_scb).
      (struct
         (str_oua:
          { str_del, str_iey, str_ygz, str_dji, str_zkf, str_bxg, str_hnv,
            str_xxz, str_lcv, str_eyj
            |
            FALSE <: INTEGER },
          str_xys: str_rld$0,
          str_xvo: str_kpv$0,
          str_usy: str_pbf) >=
       struct
         (str_umt: str_sht,
          str_nly: MAXINT,
          str_gco: str_tza$0,
          str_tql: str_wez$0)|
       [struct
          (str_xne: NATURAL,
           str_hbv: str_vto$0,
           str_hyf: MAXINT,
           str_kuu: str_zeq,
           str_oxl: str_nzb,
           str_fqu: str_fqb$0),
        str_lkc,
        str_bwv,
        STRING,
        str_pyl,
        str_gev,
        {},
        str_ewb])&
      str_kho
      =
      [str_opu,
       str_ioy$0,
       bool(NATURAL < str_mgv),
       [INTER(str_xbz, str_lvl, str_poz, str_uqw).
        (str_rgl :
         struct
           (str_plv: MAXINT,
            str_okr: str_skw$0,
            str_zeb: str_mbe$0,
            str_kxw: str_rfh$0,
            str_wht: MAXINT,
            str_yfu: 3,
            str_tox: str_pgs$0,
            str_zwk: str_kuk)|
         str_hlz$0),
        str_ivd,
        str_tlf$0,
        { str_rrc, str_qmg, str_smy, str_glg, str_ajb, str_cay, str_rgq,
          str_hqm, str_pbl
          |
          str_sfg <<: str_thk }]]&
      str_tyn
      =
      {bool(str_sux <= MININT),
       struct
         (str_pyu: str_amk,
          str_kpm: str_mci,
          str_xfk: FALSE,
          str_ajk: STRING,
          str_dmu: FALSE,
          str_rey: (BOOL |-> NATURAL1),
          str_jdy: FALSE,
          str_iow: [str_cqm, str_vlw$0]),
       rec(str_wub: str_fry$0),
       bool(NATURAL1 > str_pms$0)}&
      str_cmr
      =
      rec
        (str_xww:
         (-
            ((str_mxg <-> str_obc) >->>
             ({ str_tuj | str_rez /= str_skb }(NATURAL)))))
      ,
      {}
    IN
      str_qgr'str_sjm
      :=
      (str_wgf$0 >->> ((son(str_nzx$0)) ^ STRING))
      ,
      (rev(bool(str_ptr$0 < {})))'str_jrg
    END
  END;

  str_plx, str_juj, str_ebn, str_rwx, str_jmr
  <--
  str_dxn
    (str_qwb, str_aiz, str_qaw, str_jrc, str_owm, str_fhh, str_nqw, str_cgf,
     str_zha)
  =
  IF
    [MAXINT,
     TRUE,
     [],
     rec
       (str_zsj: INTEGER,
        str_mpa: [],
        str_spb: str_onm,
        str_vmy: str_ddy,
        str_lfj: str_wzp,
        str_kyr: str_qhi$0)] /<<:
    [str_xsn$0,
     str_bsn,
     struct
       (str_ouw: (str_hhb >->> INT),
        str_wtq: { str_ait, str_efs | MININT <= [] },
        str_vjm: NATURAL,
        str_kqe: str_zvl,
        str_lvt: MININT)]
  THEN
    str_oin, str_ven, str_gde, str_xsn, str_tfg, str_vue, str_nly, str_qja,
    str_ubf
    ::
    (FIN
       ({ str_pct, str_feb, str_qvs
          |
          !(str_hfk).
          (not
             (#
                (str_hdh, str_ret, str_fdp, str_sxh, str_ahq, str_fbk,
                 str_xmt, str_gpk, str_edw).
              (str_azq$0 <= str_qxa))) }))
      (struct
         (str_jeq: str_uou$0,
          str_mzk: INTEGER,
          str_iwt: MAXINT,
          str_bbt: str_ood))
  ELSIF
    !(str_qtc, str_ciu).
    (rec
       (str_njf: str_uze$0,
        str_gfp:
        { str_sil, str_ros, str_fdd, str_tew, str_twb, str_vrw, str_ovn,
          str_owo, str_por, str_qig, str_xyq
          |
          str_hol$0 /<<: STRING },
        str_kbv: str_odn,
        str_ioa: str_wcd,
        str_zkk: 913,
        str_mag: str_rah) =
     {rec
        (str_hrj: TRUE,
         str_nhl: NAT1,
         str_mxp: str_aak$0,
         str_muw: str_scl$0,
         str_lqe: STRING,
         str_hwr: str_uax,
         str_nsq: str_jsb,
         str_tmf: [])}
       (str_bwp))
  THEN
    str_kbw, str_jfh, str_efd, str_xqh, str_wdq, str_ccj
    ::
    bool
      (rec
         (str_laz:
          rec
            (str_mhz: INTEGER,
             str_lnd: (str_uok(str_oen)),
             str_qyi: FALSE,
             str_vmg: str_grz$0,
             str_xqr: str_rwj,
             str_zel: str_hot$0,
             str_cfj: str_kpq$0,
             str_iiw: str_rct$0)) /:
       {str_zqn$0,
        str_hrd$0,
        str_ybp,
        INT,
        (str_amj$0 <-> str_xkp$0),
        "str_kfa",
        str_pfe$0})
  ELSIF
    !(str_bhb, str_lag, str_off).
    (!
       (str_fso, str_nsq, str_hsy, str_mtq, str_jiz, str_qdb, str_dhr,
        str_hqm, str_fqr, str_glb).
     (str_thx(str_pkj) <<:
      {str_reg$0, str_tlh$0}
        ({str_vkd, str_nqa, NATURAL, str_yge, str_ewd$0, str_tqd, str_iew,
          str_bio})))
  THEN
    IF
      not(str_fad$0 : str_fuj) &
      (#
         (str_anx, str_mrk, str_gsi, str_lub, str_oit, str_viz, str_ycr,
          str_bbp, str_gnf).
       (str_aqr /: [] & str_pgp$0 > {}) =>
       !
         (str_ykv, str_xyw, str_omj, str_kcb, str_uvu, str_mrc, str_cvz,
          str_pmn, str_rnq, str_ggr, str_xmb).
       (not(str_tha$0 /= str_kim$0)))
    THEN
      skip
    ELSIF
      #(str_jbq).
      ({str_egw, str_hlg$0, str_ism$0, str_tdg, str_scq$0} =
       struct
         (str_opk: str_vsq,
          str_jrs: MININT,
          str_voo:
          bool
            (!
               (str_hgm, str_kui, str_ait, str_yqq, str_wyp, str_gqe,
                str_ezj, str_dox, str_fvj, str_qoo, str_bbs).
             (str_upm$0 /= str_frj)),
          str_xrx: str_qvw,
          str_poa: str_xgf$0,
          str_faj: str_zdi$0) +
       str_xec$0)
    THEN
      str_hhm'str_zmu
      :=
      { str_fxe, str_bvo, str_vum, str_kra
        |
        #
          (str_acs, str_hsv, str_iuv, str_qgh, str_bnw, str_blh, str_kwj,
           str_fsq, str_cro, str_rxx).
        (!(str_kxe).
         (#
            (str_qeg, str_rbt, str_lul, str_opl, str_uky, str_aob, str_ljr,
             str_jfe).
          (#(str_sfe, str_xeg, str_tmz, str_foh, str_pth).
           (!
              (str_ypz, str_wcj, str_mtu, str_xaz, str_yvx, str_afp, str_dnz,
               str_auz, str_zbt, str_oyf).
            ({} <: str_igj => BOOL <= str_hyw$0))))) }
    ELSIF
      not
        (!(str_fgj, str_lgz, str_gli, str_zkh, str_ymw, str_nnh, str_ima).
         (str_mnp <<: str_dle)) <=>
      str_hfq /=
      rec
        (str_owu:
         [str_oui$0, BOOL, INTEGER, str_kcr, str_wry, str_ovv$0, str_tyk],
         str_kiz: str_lrj,
         str_vaa: str_sqy,
         str_jjc: NAT1)
    THEN
      IF
        not
          (INTEGER >= bool(0 = NATURAL1 or str_qfd$0 : str_cio) &
           #
             (str_fsu, str_cxy, str_obs, str_fns, str_cem, str_fab, str_ojg,
              str_tsh).
           (FALSE = str_ish))
      THEN
        str_pgc 
          (
            tail
              ([BOOL,
                bool(MININT , str_rie$0 <: str_qke),
                str_dya,
                str_iqy$0,
                { str_psw, str_pyl, str_evs, str_zqt, str_qlj, str_igr
                  |
                  str_ddb <= str_swn },
                [str_oro$0]])
          )
          (
            {{ str_xoz, str_orl, str_hph
               |
               struct(str_gjl: str_wdk$0, str_tte: NAT1) : str_fxb },
             str_uge$0,
             struct
               (str_uae: {NAT, str_til$0, str_wnf, str_xlp},
                str_aas: str_qgh,
                str_fwu: FALSE,
                str_bnu: (str_ewv$0(str_nkf))),
             str_vzn$0,
             str_omt,
             BOOL,
             str_sar,
             str_edn$0}
          )
          (
            { str_pop, str_fwm, str_izf, str_kue, str_lwa, str_xqc, str_ubo,
              str_suc
              |
              not
                (!
                   (str_cqu, str_bik, str_rms, str_fyi, str_ivx, str_hsk,
                    str_gne, str_mpn).
                 (!(str_zse, str_mqi).
                  (not(8 <: str_pcg & (INT <<: NAT1 <=> str_gna$0 > str_dum))))) }
          )
          (
            bool
              (#(str_jfr, str_gze, str_ocl, str_xil).(str_syd$0 < str_vmx$0) or
               not(MAXINT >= str_txk$0))
            |->
            [str_cgx, str_foo, str_iif$0]'str_cov
          )
          (
            rec
              (str_qao: INT,
               str_lef: str_kql,
               str_ipn:
               {str_nfl$0,
                str_ijy,
                rec
                  (str_lom: NATURAL,
                   str_pkt: FALSE,
                   str_hfs: str_oxr$0,
                   str_rqe: str_rsl,
                   str_jty: str_rtb$0,
                   str_rin: NATURAL,
                   str_blo: NATURAL1),
                [struct
                   (str_mae: NAT1,
                    str_bes:
                    { str_pxs, str_opn, str_rtf, str_ssp, str_vji, str_hle
                      |
                      #
                        (str_wch, str_mbp, str_nba, str_goc, str_uye,
                         str_gkj, str_klg, str_zya, str_bap).
                      ([] <= str_tno) },
                    str_vow: str_xlr)]},
               str_vgx: str_vnu,
               str_vdj: str_dxq$0,
               str_dan: str_rkh)
          )
          (
            { str_gxl, str_ohc, str_odf, str_foa, str_yzx, str_pud, str_bll,
              str_ecv, str_yuj, str_xug
              |
              !(str_gku, str_brn).
              (!
                 (str_kxx, str_nto, str_cmw, str_uom, str_vfx, str_kkd,
                  str_bfl, str_hsa, str_pzi).
               (str_ysh$0 >
                { str_rew, str_hty, str_mhx, str_gvn, str_sdh, str_cym,
                  str_zsg, str_pzu, str_fdu, str_elk, str_jyi
                  |
                  str_xxc >= INTEGER'str_pbt })) }
          )
          (
            ({ str_xcw | str_qmz /<: str_mmz } , STRING) <->
            bool
              ((!
                  (str_rzy, str_ysh, str_qag, str_msh, str_rfj, str_ycv,
                   str_sqo, str_kjl, str_ndh, str_bvt).
                (BOOL /<: INT) <=>
                NATURAL /= FALSE) or
               str_zxb <<: str_tjf)
          )
          (
            {str_fyw, str_ccf$0, "str_tqs"}
            |->
            rec
              (str_efy: str_nse,
               str_lji: [INT, str_crr$0, str_sll, str_pca$0, MAXINT, str_eks],
               str_skk:
               (tree
                  (rec
                     (str_wwk: str_pin,
                      str_ydc: NAT1,
                      str_txn: str_hnj$0,
                      str_ysx: str_tnx))),
               str_vuz: str_zmk,
               str_mww: (str_ief(str_ihx)),
               str_frl: TRUE)
          )
          (
            bool
              (not
                 (not
                    (#(str_hoh).
                     (#(str_ydr, str_tit, str_bss, str_rmd, str_bzq).
                      (#
                         (str_khq, str_vih, str_ilk, str_oen, str_can,
                          str_gak, str_ccf, str_rsq, str_hkd).
                       (str_yvn$0 /: str_qtn$0) <=>
                       MAXINT < MININT)))))
          )
        
        :=
        sons
          (bool
             (!
                (str_qph, str_ofw, str_zys, str_fxn, str_aku, str_mcq,
                 str_zcb, str_ccc, str_ewl).
              (not([] <= str_ezn) & INTEGER /<<: str_nyy$0))
             'str_lmy)
      ELSIF
        #(str_beu, str_dga, str_era, str_ocb).
        (#
           (str_hok, str_tef, str_gsk, str_pfz, str_vve, str_pyi, str_jbw,
            str_qvm, str_ewb, str_pwg, str_bgf).
         (!(str_jfo, str_aug).
          (str_eeu$0(93) <=
           %(str_ilt, str_xwx, str_jcp). (str_mdd$0 /<: 187| []) or
           INT = NAT1)))
      THEN
        str_mmf, str_wss, str_quy
        :=
        [bool((INT > TRUE <=> not({} : FALSE)) <=> [] /<: str_scu$0),
         MAXINT,
         str_sve,
         str_vvc$0,
         (str_anq |-> str_reo$0),
         FALSE,
         str_bzx,
         NAT]
      ELSIF
        str_agb$0 <<: str_fce$0 =>
        {(str_gai(str_npo$0)), str_ogg$0, str_zsb} >=
        {str_psn,
         [str_aqo, str_spj, str_lcr$0, str_tpk$0, str_int, NAT1],
         {},
         str_znl$0,
         bool({} <= str_omb$0),
         INT,
         str_cio$0,
         str_wlf$0}
      THEN
        str_luo, str_lrc, str_jjn, str_hmr, str_lwc, str_usn, str_oxl,
        str_rei, str_axb, str_tme
        <--
        str_odg
          ((str_hzt
              (rec
                 (str_umq:
                  (MININT
                   |->
                   SIGMA
                     (str_eop, str_dim, str_awh, str_egw, str_rpw, str_gsc,
                      str_pnr, str_pim, str_axv, str_yih, str_ezr).
                   (str_iss /<<: INT| str_ghc$0)),
                  str_suc: (NAT1 , FALSE),
                  str_mom: BOOL,
                  str_iyk:
                  %
                    (str_ccm, str_qsz, str_aeq, str_ztv, str_lpk, str_xct,
                     str_wkd, str_nsr, str_hfh).
                  (str_hib$0 > str_pda$0| []),
                  str_wmv: TRUE)))
             'str_fse,
           rec
             (str_tlo: str_fwu$0,
              str_xqi: str_gqh,
              str_njr: str_fmy$0,
              str_liv: str_ncs,
              str_yix: MININT,
              str_flv:
              [MAXINT,
               str_fej$0,
               STRING,
               str_nsv$0,
               {str_nfp,
                ((str_cnl$0 |>> str_jhl) |-> str_ryy),
                str_txh,
                str_ufh,
                NAT,
                str_gyb$0,
                str_zir,
                (str_zin$0 , rec(str_oxa: str_wjj$0))},
               str_rfo]),
           [bool(str_ftd$0 <<: MININT),
            (((str_wvc(BOOL)) , str_xhb) +->
             bool
               (#
                  (str_fvz, str_mpk, str_pye, str_lsl, str_cdx, str_uww,
                   str_klb).
                (NAT1 = NAT1)))])
      ELSIF
        !
          (str_ugd, str_wlu, str_oan, str_jjv, str_wur, str_ctp, str_vjv,
           str_dza, str_skk).
        (STRING > str_hoz) =>
        (str_mqm >= str_jej$0 <=>
         !(str_pku, str_mzb, str_qin, str_umv, str_leo, str_qei, str_asa).
         (not(str_ntf$0 /: str_krg => str_zvo : TRUE)))
      THEN
        str_bwi'str_dqq
        :=
        (father
           ({ str_nwk, str_fgb, str_xja
              |
              !(str_egk, str_gfs, str_ytg).(FALSE : str_bop) })) -->
        [MININT,
         INTEGER,
         rec
           (str_grq: TRUE,
            str_lpa: str_ryi$0,
            str_ibf: INT,
            str_rbc: str_aal$0),
         str_ult$0]
      ELSIF
        not
          (#
             (str_nhj, str_rwt, str_bon, str_npg, str_rai, str_lsx, str_wzo,
              str_npc, str_wfj, str_kaf, str_zhu).
           (NAT1 <: str_fcj =>
            #
              (str_vhs, str_suz, str_dgg, str_yoy, str_nqz, str_txe, str_rem,
               str_uvg, str_fzc).
            (bool(str_kpn$0 > str_qke <=> FALSE : {}) /= {})))
      THEN
        str_dqn 
          (
            card
              ({BOOL, FALSE, str_aej$0, str_gnp$0, str_kqr$0, str_ysl$0}
               |->
               { str_zrx, str_anj, str_emd, str_clv, str_zox
                 |
                 (closure1(str_bfj))'str_fpf <<: str_ntg$0 })
          )
          (
            rec
              (str_mjz: NATURAL,
               str_nyh: str_knj$0,
               str_shb: str_pjq$0,
               str_jae: (str_hph$0(str_oga)),
               str_mkm:
               [rec
                  (str_tel: (MININT |-> NATURAL),
                   str_xfa: bool(str_ddm$0 : [])'str_tvf),
                INT,
                FALSE,
                str_eyp$0],
               str_kuu: str_emv)
          )
          (
            conc
              (INTER
                 (str_zlm, str_cwh, str_xmp, str_mhl, str_nga, str_qub,
                  str_hyu, str_qha, str_oza, str_pdp).
               (str_una = INT| str_aan$0)
                 (bool
                    (not
                       (str_rpa <=
                        struct
                          (str_jyc: str_ioz, str_jiv: STRING, str_pel: BOOL)))))
          )
          (
            rec
              (str_lmu: (str_nag$0 |-> str_cfz$0),
               str_wdp:
               (bool(NAT1(str_zra$0) /= bool(str_rxd <= BOOL))(str_mwd)))
          )
          (
            struct
              (str_knq: MAXINT,
               str_fhr: str_pej$0,
               str_hcp:
               (({str_egb$0, str_wlr$0, MAXINT, BOOL, str_xix$0} |-> str_ldm)
                  (str_kig)),
               str_ekc: str_yhu$0,
               str_rgn:
               SIGMA(str_ywg, str_ebx, str_mrp, str_dtv, str_max, str_ywn).
               (!(str_qqw, str_vjv, str_ccu, str_rsk, str_mry, str_mgx).
                (str_xeb < MININT)|
                {MAXINT, TRUE}),
               str_nst: str_yhc)
          )
        
        :=
        (bool(str_lgu /= str_ifx$0) ;
         ({str_rgr$0,
           (INTER(str_hxz, str_aiv, str_nyu, str_nhl, str_eiy, str_kid).
            (str_twg$0 /: str_ywc or {} /<<: str_uqw$0| str_htv$0)
              (str_aig))} +->>
          NAT))
      ELSIF
        not
          (!(str_bbv, str_jlk, str_xwd).
           (!
              (str_ioc, str_thb, str_gta, str_oqw, str_mvo, str_tkk, str_urp,
               str_snq, str_vrc).
            (not
               (#
                  (str_zsw, str_htu, str_pow, str_aek, str_mlk, str_nyx,
                   str_hnn, str_hlo, str_cmd).
                (str_xzk$0 >= INTEGER))))) &
        (NAT /<: str_dyx & str_kee <<: str_bsf)
      THEN
        str_caa'str_hmq
        :=
        rec
          (str_seb:
           rec
             (str_cdq: str_wer$0,
              str_tnu: {str_ips$0, ([] mod str_mtb), INT},
              str_frk:
              rec
                (str_hxz: str_vkw$0,
                 str_wki: str_jmv$0,
                 str_ria: str_iyc,
                 str_asd: (str_rnj$0(str_bja))),
              str_fxl: TRUE,
              str_sad: str_scu$0),
           str_zlq: str_sll,
           str_scv:
           [BOOL, str_alx, str_mtl, str_xoz, str_rwo$0, str_pfz, str_cak$0,
            []],
           str_lni: 5,
           str_yeu: str_xir,
           str_ngd: FALSE,
           str_ogw: MININT)
      ELSIF
        #
          (str_can, str_ntr, str_qhy, str_cqm, str_ftf, str_lgh, str_sku,
           str_uax, str_xly, str_mci).
        (str_uvc : str_euz) &
        not
          (not
             ((str_ngv <<: str_odm & FALSE >= str_yoh$0) =>
              !
                (str_efr, str_ylf, str_plf, str_tli, str_kax, str_nng,
                 str_gxx, str_qal).
              (NATURAL1 : str_jnn$0)))
      THEN
        str_axe, str_arc, str_qnt, str_xxp, str_cfe, str_lkz
        :=
        { str_ldt, str_cuv
          |
          { str_brg
            |
            not
              (#(str_jxe, str_rqy, str_hfp).
               (str_nvb$0 |-> str_wps$0 >= str_jjr$0)) } >=
          INTEGER }
      ELSIF
        not
          (bool(NAT <: MININT) /<:
           struct
             (str_gdj: (str_lcv$0 |-> BOOL)'str_xsr,
              str_hih: str_asr$0,
              str_jqf: str_xno,
              str_ily: str_fok,
              str_bft: str_msh$0,
              str_pnp: str_zkh)
             'str_nbr)
      THEN
        str_ken, str_hyy, str_zlc, str_jqu, str_obp, str_dox, str_fnk,
        str_xtj, str_dyd
        <--
        str_zzg
          ((iseq
              (rec
                 (str_hnm:
                  struct
                    (str_lsp:
                     struct
                       (str_edo: str_ozz$0,
                        str_dxo: struct(str_wsw: str_amm),
                        str_jhh: NAT,
                        str_ppq: str_wjj,
                        str_hqi: str_spy$0,
                        str_hgx: str_hsm$0,
                        str_xsn: TRUE,
                        str_zyy: str_mmx$0),
                     str_ufb: str_sqk,
                     str_jlc: str_wwp$0,
                     str_wqv: str_iyi),
                  str_qku: str_vrd,
                  str_lcp:
                  (INT |-> {str_ghb, NATURAL1, str_myj, str_wos, str_nbx}),
                  str_fzo: str_aip$0))),
           SIGMA
             (str_nqz, str_gpv, str_pev, str_baz, str_bxz, str_ryl, str_lkg,
              str_qta, str_gcd, str_wxe, str_ysr).
           (!
              (str_okl, str_glr, str_shn, str_wge, str_bmh, str_taj, str_vgg,
               str_wda, str_vuh, str_hxv, str_vjk).
            (str_stg$0 >= [str_qcg, MAXINT, str_rsy$0]) or
            #(str_qth, str_ebu, str_alv, str_jic).
            (#(str_yjs, str_fis).(TRUE <= str_ueb))|
            str_jpf$0),
           (struct
              (str_hlg: str_qge,
               str_zac: { str_idr, str_mql, str_tsc | str_znm$0 : str_ggf },
               str_tmp: str_fga)
              ([(str_hom - str_ygh$0),
                str_qdk$0,
                (str_zif$0(INTEGER)),
                MAXINT,
                NATURAL]
                 'str_jbu)))
      ELSE
        skip
      END
    ELSIF
      not
        (!(str_aaw, str_fac, str_zdx, str_nhv, str_fam, str_ekm).
         (#
            (str_spd, str_dtm, str_fod, str_jyd, str_ary, str_uaa, str_ijj,
             str_izv, str_sla, str_pcy).
          (str_zsu$0 <= str_yma)) &
         (TRUE /<: str_gvb$0 & str_yuy$0 <= str_uai$0))
    THEN
      PRE
        !(str_qvb, str_wtk, str_nmy, str_dba).
        (#(str_ona, str_qva, str_mhv, str_mbl, str_snw).(str_ssa$0 = MAXINT) <=>
         !(str_efv).
         (!(str_lib).(not(str_wem /<<: str_ebo$0) <=> TRUE <= str_zjj)))
      THEN
        str_eey, str_mtp, str_yqd, str_kui, str_kfb, str_qqr, str_jgo
        <--
        str_ood
          (struct
             (str_lrp:
              {%
                 (str_wra, str_lpo, str_cnf, str_tbv, str_lwt, str_shr,
                  str_fgs, str_wcc, str_gpo, str_hyw, str_myi).
               (!(str_hqb, str_tpe).
                (str_xbs /= str_wba$0 &
                 !
                   (str_dgf, str_oet, str_fvw, str_dyf, str_vjb, str_bkv,
                    str_anr, str_uwj).
                 (str_hqc$0 > str_ioh$0))|
                str_hgz$0(str_yvl)),
               STRING,
               str_khy$0}),
           struct
             (str_awy: NAT,
              str_pmb: NAT1,
              str_xjd: str_jnl$0,
              str_jko:
              {str_cto,
               {str_aad$0},
               str_yzw,
               str_fou$0,
               struct(str_zya: str_ood, str_cxw: str_ypn, str_nhs: str_fjo$0)},
              str_wud:
              { str_rqe, str_byz, str_nuy, str_pmv, str_jkx, str_gbh,
                str_uin, str_ree, str_zsb
                |
                ([] >= str_jwt$0 & str_ksr$0 = str_fjt) =>
                str_bmd$0 <: NATURAL },
              str_sjk: str_cch$0),
           { str_vsa
             |
             not
               (!
                  (str_vvi, str_tlh, str_rzq, str_yai, str_phi, str_yhi,
                   str_kgy, str_fvy, str_xwz).
                (not
                   (!
                      (str_abv, str_ctm, str_abh, str_ymv, str_udh, str_kjj,
                       str_cfr, str_glq, str_yip, str_hhu).
                    (str_vis$0 /: str_fel => not(str_zgn > str_rfd$0))))) },
           INTER(str_hgv, str_csx, str_foj, str_vlq).
           (not(str_wld /<: str_xzc , str_gxe => str_agu /<<: [])|
            {SIGMA
               (str_qwr, str_gox, str_cpq, str_qqm, str_try, str_lcl,
                str_qcu, str_qnq, str_hgq, str_vkk).
             (NATURAL >= str_oxh| str_aqw)}),
           ((infix
               (rec
                  (str_tgt: str_brt$0'str_nda,
                   str_bub: str_vfh'str_hww,
                   str_ovc:
                   %(str_deo, str_exu, str_nsy, str_xil, str_uml).
                   (NAT /<: str_kmx$0| MININT),
                   str_eup: NAT)))
            ,
            { str_lsy, str_xfj, str_xay, str_ass, str_kea, str_uxi, str_geo
              |
              str_etc > str_ugy$0 }),
           struct
             (str_raj: str_vzu$0,
              str_cul: STRING,
              str_cgn: BOOL,
              str_qkk: str_cka,
              str_kwv: INTEGER,
              str_bcb:
              (fnc
                 (rec
                    (str_vsg: str_ksk,
                     str_yfv:
                     struct
                       (str_mhl:
                        { str_vjz, str_qsk, str_dsl, str_ioq, str_edg,
                          str_osr, str_omm, str_ktr, str_gdk, str_byk,
                          str_rdf
                          |
                          INTEGER = [] & str_msx <: NATURAL1 },
                        str_klm: str_lfe$0,
                        str_hiu: NATURAL1,
                        str_wvn: str_cmb,
                        str_jsl: str_wpt,
                        str_ksv: str_pbr,
                        str_gqp: str_bpu$0),
                     str_bxl: [],
                     str_kze: (MAXINT , str_gng),
                     str_cqm: [])))),
           { str_goh, str_xqf, str_cxh, str_ksl, str_aut, str_uhf
             |
             #(str_ttp, str_rcx, str_lqs, str_jfc, str_acg).
             (!
                (str_dmu, str_nzv, str_ujq, str_wui, str_cpw, str_zal,
                 str_jsj, str_yon).
              (not
                 (NATURAL1 >=
                  %
                    (str_fmh, str_stf, str_ydd, str_vvx, str_all, str_ort,
                     str_gta, str_okr, str_tuz).
                  (str_ojl < INT| { str_brw | str_mps /= INT })))) })
      END
    ELSIF
      !(str_ypg, str_kqs, str_baq).
      (not
         (not(#(str_xwx).(INTEGER , str_xmz /<<: [MAXINT, str_jkq, STRING]))))
    THEN
      str_tgh'str_ifj
      :=
      {rec
         (str_wkf: str_kqc,
          str_wuk: NATURAL1,
          str_twx: str_dts$0,
          str_dev: str_epi$0,
          str_zln: str_ryj$0),
       "str_oyx",
       struct(str_xsr: struct(str_hnx: (str_qwl$0 >+> BOOL)))'str_seq,
       { str_glp, str_oyy, str_zbb | str_mrc$0 = STRING }}
    END
  ELSIF
    not
      (!
         (str_kch, str_bac, str_fve, str_ocl, str_txc, str_ekc, str_byn,
          str_tyy, str_wco).
       ({MAXINT, str_mho$0} , TRUE <
        { str_rkq, str_yah | not(MAXINT /<<: MININT) }))
  THEN
    WHILE
      !(str_bpu, str_ahg).
      (str_mfh$0 =
       struct
         (str_bbg:
          [str_xhh,
           TRUE,
           str_zay$0,
           str_rci,
           str_pye,
           ((prefix(str_rig))(str_nog |-> str_vdu$0))]))
    DO
      CASE
        tail
          ({PI(str_dkl, str_btt, str_pme, str_yjv).
            (str_uws$0 < str_cii$0| MAXINT),
            struct
              (str_lvy: NATURAL1,
               str_bpi: str_pxd,
               str_bvg: NAT1,
               str_mca: str_qiq,
               str_cxp: MININT,
               str_qyg: MININT,
               str_yvf: FALSE)
              'str_vuy,
            ((FIN(NAT1))(INT))})
        OF
        EITHER
          {rec
             (str_cvo: str_uhs,
              str_szq: NAT,
              str_ycg: str_tfz,
              str_fmb: str_xqf$0,
              str_llq: str_hpf$0,
              str_eef: BOOL),
           [],
           NAT1,
           {str_cfl$0,
            struct
              (str_tsp: str_caw, str_vqn: str_ydx'str_szq, str_nxl: str_ide$0),
            MAXINT,
            INTER(str_uwk). (BOOL <= NAT| str_oef)},
           [str_bkm$0]}
        THEN
          str_mjp
          ::
          struct
            (str_ucr:
             rec
               (str_axy: {(str_gmy$0(FALSE)), str_isv$0},
                str_guw: TRUE,
                str_fbd:
                [STRING, str_hvl$0, str_yoj$0, str_nsy, str_xev, str_bsk$0,
                 str_dmx$0, str_azq],
                str_gto: (mirror(str_ntl)),
                str_hwj: [],
                str_sfa: (str_mzm + str_hcy$0)))
        OR
          bool
            (str_seh$0 = TRUE &
             (NATURAL1 |-> {})'str_bhe /<<: (str_xpw$0 /\ INTEGER)'str_kuo)
        THEN
          skip
        END
      END
    INVARIANT
      str_yra /=
      bool
        (not
           (struct
              (str_jjc: {},
               str_mrt: 4,
               str_kgl: STRING,
               str_kxt: str_ryw,
               str_gnb: str_qcn,
               str_ljy: str_tiw) >=
            [str_nuh]) =>
         str_oyo : str_zrb$0)
    VARIANT
      rec
        (str_ehn: str_jie$0,
         str_qlc: ([str_rjv, MININT]({})),
         str_foj: (NATURAL , INTEGER),
         str_ywp: (str_exi , str_iuy),
         str_khn: NATURAL,
         str_mhu:
         SIGMA(str_luz, str_hmu, str_stj, str_fch).
         (str_pwr$0 /<: BOOL| str_hwy$0),
         str_tre: PI(str_rzm, str_yav, str_xps). (str_xdv$0 <<: NAT1| []))
    END
  ELSIF
    {NAT, str_ubb, {NAT}, NATURAL1} |> str_jye$0 /<:
    [(prj1(str_vul$0))'str_puc]
  THEN
    VAR
      str_wtm
    IN
      str_tsy, str_abu, str_uoj, str_qey, str_aap, str_uls, str_tnr, str_bnf,
      str_hlx
      <--
      str_dwq
        (bool
           (!
              (str_iby, str_ttk, str_ors, str_ald, str_xsw, str_wri, str_hsp,
               str_euy).
            ((!(str_ahd, str_umf, str_exg, str_pkb, str_ceb).
              (MAXINT = NATURAL) &
              !(str_tze, str_jkp).(MININT = [])) =>
             not(NATURAL1 >= str_igf$0))),
         { str_nqa, str_shv, str_tzg, str_dnn, str_dqq, str_vnv, str_cic,
           str_vtb, str_vuf, str_ujm, str_weo
           |
           #(str_vpo, str_lpz, str_cta, str_eew, str_xys).
           (not(#(str_mxk, str_lqq).(#(str_yzv).(not(str_lks <: str_sko$0)))) <=>
            str_vih$0 = str_nfy$0) },
         (((NAT , NAT1) --> MININT)
          |->
          bool
            (str_xjx < str_cjz <=>
             (str_fvs <= MININT =>
              (str_syw$0 : str_vwn$0 => FALSE <= NATURAL1)))),
         struct
           (str_txl: str_znh,
            str_qab:
            rec
              (str_uzc: str_qxw$0,
               str_rep: NAT1,
               str_wna: str_suo,
               str_jzh: str_zkt$0,
               str_pfu: str_nbp$0,
               str_zvy: str_vvv,
               str_skj:
               UNION(str_kwv, str_bwi, str_nxq, str_ofn, str_olc).
               (NAT <= str_gia| STRING)),
            str_hgl:
            bool
              (!(str_pby, str_zxj, str_edm, str_amr, str_vzv).
               (!
                  (str_tvz, str_zpi, str_uoq, str_qly, str_xxr, str_ubo,
                   str_yob, str_tcj, str_njz).
                (MAXINT <<: str_ydt$0 => str_zhe$0 : str_ngv))),
            str_nay: str_evo$0),
         ((son
             (struct
                (str_mwr: str_ary,
                 str_ezl: {},
                 str_act: INTEGER,
                 str_jdx: str_hbk$0,
                 str_xgv: str_uwg,
                 str_vhy: str_dsf$0,
                 str_lgn: NAT1,
                 str_wlr: str_tlt)))
            (SIGMA(str_wck, str_zwp, str_qqj, str_qbj, str_mto).
             (#(str_hmu, str_jiq, str_ztc, str_piz).(INTEGER < str_ggm$0)|
              iterate((str_jnz || str_zhx))))),
         struct
           (str_kel: str_cwv$0,
            str_nlp:
            { str_zln, str_mju, str_wqr, str_vrk, str_dzn, str_wxf, str_gjm,
              str_ipj, str_exo
              |
              TRUE /<: str_rgs$0 },
            str_omr: NATURAL1,
            str_ajf: NAT,
            str_zgj: ({ str_zse | 31 < str_xtu } |-> str_nzd'str_bxp),
            str_lfn: str_kxq,
            str_ftv: [str_fru],
            str_hak:
            { str_tzs, str_llq, str_erp, str_owo, str_vbk, str_pat, str_tua,
              str_ikz
              |
              [] < MAXINT }),
         struct
           (str_rse:
            {str_dbc,
             str_tgq,
             rec
               (str_hwg: str_ixe$0,
                str_ota: INTEGER,
                str_gtt: str_zvj,
                str_uep: str_hst,
                str_jzx: str_pvk$0,
                str_jfi: [],
                str_pqu: INT),
             str_oab$0},
            str_ogi: str_zde,
            str_czt: TRUE,
            str_aam: str_vyk,
            str_xop:
            (prj1
               (bool
                  (!(str_cmj, str_itx, str_aab, str_vke, str_rpu).
                   (str_csk <<: STRING & INT : BOOL)))),
            str_oye: str_lxo))
    END
  ELSIF
    #(str_eje, str_qig).
    (!(str_gdm, str_qos).
     ("str_kcg" <<: str_swd =>
      (not(not(str_vod <: NATURAL1)) or str_fro /: STRING)))
  THEN
    str_dcg 
      (
        bool
          (#(str_oeu, str_rkk, str_ydj, str_llf, str_jht, str_gdd, str_uzp).
           (struct
              (str_giz: NAT,
               str_blw: MAXINT,
               str_eaq: (str_fvu$0 + str_beb),
               str_xkc: str_bgd,
               str_llu: str_dup,
               str_amy: MININT,
               str_lkj: str_jig,
               str_srb: NATURAL1) =
            %(str_ldt, str_pzw, str_imo, str_vdn, str_udt, str_awg, str_fwk).
            (!(str_wjf, str_pwk, str_pht).(str_igy = str_whv)| BOOL)))
      )
      (
        struct
          (str_qpg: (str_ojb(NATURAL1)),
           str_sml:
           { str_sgk
             |
             str_xhw < NAT or
             str_obw /<:
             [str_ife$0, str_skt$0, str_lyy$0, {}, MAXINT, str_vmy$0,
              str_dki$0] },
           str_omk: (str_wcw \/ NAT))
      )
      (
        btree
          (rec
             (str_lqk: NAT1,
              str_xsx: str_oih$0,
              str_haz: INTEGER,
              str_goe:
              INTER(str_ygo, str_rur).
              (str_qvo /= TRUE|
               "str_oyr"
                 (UNION(str_kib, str_xsw, str_hsh, str_jbs).
                  (str_xpk$0 /: TRUE| str_tsh))),
              str_jfc: str_ake,
              str_nsg: str_cva$0,
              str_ydg: FALSE)
             'str_evh)
      )
    
    :=
    {(str_tnn$0'str_vyp <-
      ({ str_zsa, str_mkr, str_yqf, str_aby | str_gla$0 < str_alc } - INT)),
     NAT1,
     str_llx$0,
     str_him$0,
     str_apt,
     NAT1}
      (struct(str_ntp: {}, str_sih: str_gjw$0))
  ELSE
    str_qyt, str_gwh, str_tek, str_lml, str_yvi, str_lgi
    ::
    perm
      ({rec
          (str_oyb: str_hyc,
           str_skz: str_qsx$0,
           str_bdk: NATURAL1,
           str_roo: str_eru,
           str_aak: str_vqp,
           str_uuy: (str_utw(str_sji$0)),
           str_bje: str_fzo$0,
           str_rit: str_zza$0),
        { str_jdj, str_ore, str_gcn, str_ohu, str_klw, str_zew, str_rpc
          |
          !
            (str_egj, str_rsa, str_zof, str_axw, str_mze, str_gci, str_diy,
             str_hly, str_eeg).
          (NAT > NATURAL1) }}
         (NATURAL1))
  END;

  str_tov, str_gai, str_fut, str_ten, str_mbw, str_kcf, str_hwo, str_bxu,
  str_eze, str_fjp
  <--
  str_lkm
    (str_cws, str_kzg, str_got, str_kbx, str_hae, str_hxe, str_grr, str_rpa,
     str_sdz)
  =
  CASE
    rec
      (str_uxt:
       (seq1
          ({(str_vet$0
             |->
             { str_ogb, str_bpl, str_swc, str_ash, str_pwp, str_yui, str_sxf
               |
               not(#(str_ipc, str_qyc).(STRING < INT)) }),
            str_ptw,
            NATURAL,
            str_jrs$0})))
    OF
    EITHER
      %(str_lez, str_wgl, str_azn, str_snp, str_zxb, str_vhh).
      (str_lnh /<<: INTEGER => NAT1 <<: str_urh$0|
       rec
         (str_vwp:
          (succ
             ([[],
               str_tas$0,
               str_jmo$0,
               str_ohi$0,
               bool(str_vaw$0 <<: BOOL),
               str_gdt$0,
               ([] , str_mru)]))))
    THEN
      skip
    OR
      [str_hck$0,
       { str_fub, str_cxt, str_ldw
         |
         (str_hsa$0 > str_jad$0 or BOOL <: str_eef$0) =>
         not(str_fqx$0 /: str_tpd$0) },
       (str_hdj -->> "str_qki")'str_ink]
    THEN
      CASE
        { str_oze, str_shd
          |
          !(str_zwj).
          ([{ str_odi, str_ivb, str_cxs | str_wti /= str_bax$0 },
            (FIN(bool(NAT1 <: str_tpr$0)))] :
           NAT1) }
        OF
        EITHER
          rec
            (str_bzm: str_nrk,
             str_otn:
             (bool(str_lfg$0 /<<: str_nil$0)
                (str_zrr -->>
                 (rec
                    (str_qlt: TRUE,
                     str_exb: str_kiq,
                     str_bot: INTEGER,
                     str_xfl: str_xwn,
                     str_kfc:
                     [MAXINT, [], str_mkn, INTEGER, NATURAL1, str_tzn$0],
                     str_ylj: str_azw) <+
                  str_kcd$0))),
             str_jgl: str_dpu,
             str_zbu: str_ooq)
        THEN
          ASSERT
            #(str_jwb, str_ici, str_fks, str_hob, str_dgn).
            (!
               (str_jaa, str_xby, str_cie, str_yjf, str_llu, str_voj,
                str_cyk, str_ijk).
             (str_cig < str_noh)) &
            { str_kbl, str_uae, str_qsx, str_zyp | str_zbh /: {} } , str_kkq /=
            bool(NATURAL1 < str_oqd$0)
          THEN
            str_els, str_uty, str_yiv, str_gfz, str_jee, str_zbz, str_eou,
            str_aty, str_sba, str_yzk
            <--
            str_rvz
              (bool
                 (!(str_sip).
                  (struct
                     (str_wtw: str_sna,
                      str_hsv: str_vod$0,
                      str_gms: str_cux$0,
                      str_ddn: NATURAL1,
                      str_ftj: str_zoa,
                      str_nfy: str_klb$0) =
                   {str_lmy,
                    { str_zac, str_klg
                      |
                      #
                        (str_lwo, str_lwa, str_lul, str_jnq, str_qrd,
                         str_lev, str_mev, str_bdi, str_rmd, str_mge).
                      (str_xvh$0 = str_zxd$0) }})))
          END ||
          ASSERT
            #(str_phy, str_noc).
            (str_lmr +-> {[str_zvj, NATURAL]} :
             bool(FALSE /: str_ojb & str_tyu$0 /= FALSE))
          THEN
            WHILE
              #(str_keu).
              (not
                 (!(str_ofi).
                  (!(str_dxv).
                   (str_jrf$0 < str_tkn or not(str_gqo < str_glo$0)))))
            DO
              skip
            INVARIANT
              not(not(str_zag <: str_brh)) =>
              ((6 = str_ljo or BOOL /= str_cks$0) <=>
               !
                 (str_exw, str_cxw, str_jsd, str_ztg, str_chv, str_mjs,
                  str_ssd).
               (!
                  (str_edb, str_tua, str_zuo, str_lye, str_olf, str_sso,
                   str_dnd, str_gjj, str_odj).
                (str_qtu$0 < str_zzi)))
            VARIANT
              { str_xlm
                |
                #
                  (str_auv, str_ayn, str_tac, str_tqi, str_lxa, str_ttg,
                   str_cgg).
                (str_vao : id(str_ziv , str_ise'str_qyx'str_aeh)) }
            END
          END
        END
      END
    OR
      rec
        (str_lfv: str_swn,
         str_mar: (str_dhp((btree(NAT)) , bool(str_par$0 /<: str_xkl))),
         str_hxu: str_emn$0,
         str_hht: NAT1,
         str_dao: {},
         str_szv: str_pnc$0,
         str_vtb: {{str_udz$0, str_nqc}})
    THEN
      IF
        !(str_ujm).
        (#(str_ugp, str_mhf, str_jys, str_alt, str_ggv, str_ndh, str_vak).
         (!
            (str_dlx, str_bed, str_qnc, str_lzx, str_rha, str_htu, str_eji,
             str_una, str_svj, str_jrd, str_bkh).
          (#(str_xke, str_eil, str_rkn, str_cnq, str_odw, str_fmx, str_bip).
           (!(str_xzz, str_lkr, str_jjb, str_tnu, str_lli, str_hvo).
            (#(str_ojr, str_nan, str_ogk).(not([] /<: str_bfw$0)))))))
      THEN
        str_hdt, str_dvc, str_zdi, str_gdn, str_lnu :(
          str_jbm = str_rcb &
          {{INTEGER,
            str_aoc,
            struct
              (str_uil: str_jkl,
               str_cnw: str_bvx$0,
               str_vqv: str_vel$0,
               str_chr: str_sas,
               str_neu: NAT,
               str_bua: MININT)},
           str_koe$0,
           str_cxv$0,
           str_yfi,
           str_axw$0,
           str_mfo,
           [str_efn$0, NATURAL, str_xgk$0]} <
          str_irn
        )
      ELSIF
        not
          (!(str_hjg).
           (not
              (#(str_sel, str_lmu, str_xxg).
               (not
                  (str_mps$0 <=
                   rec
                     (str_gkp: str_tsj,
                      str_izi: MAXINT,
                      str_jru: [],
                      str_nfn: TRUE,
                      str_sez: str_ibb,
                      str_wmb: [],
                      str_via: str_wsg))))))
      THEN
        str_nbb, str_tst, str_gwa, str_juo, str_xmi, str_ekb, str_lny,
        str_vlk, str_xyo, str_qwr :(
          !
            (str_saq, str_rfr, str_qpn, str_fep, str_rgu, str_jrk, str_llc,
             str_ltv).
          (#
             (str_ffg, str_uni, str_jkk, str_fqi, str_fxp, str_aup, str_xst,
              str_fjf, str_gpq).
           (#(str_hyx, str_set, str_rxt, str_fam, str_foc, str_wlc).
            (!(str_zjf, str_mxv, str_ici).(str_lqk /<: str_gun$0)) &
            INT > struct(str_bkb: str_jpk$0, str_eww: {}, str_vdm: str_qut$0)))
        )
      ELSIF
        not
          (!
             (str_pwo, str_mul, str_kxk, str_kzh, str_ixw, str_bee, str_qoc,
              str_gxz).
           (not
              ((BOOL <= str_izb or {} : INT) =>
               not(str_kpx$0 < str_zak <=> str_qig /<<: str_xsb$0))))
      THEN
        str_gbf, str_lzw, str_ixz, str_zxb, str_krq, str_iyd
        :=
        (rec
           (str_qhc: NAT, str_ohs: struct(str_naz: str_swj), str_ibj: MININT)
           ([str_bnu, str_xuj$0])) /|\
        (pred(arity(str_kaf$0)))
      ELSIF
        str_nmt(STRING) /<<:
        rec(str_ise: (tree((INT mod (str_beh$0 ** MININT))(NAT))))
      THEN
        str_xmn'str_zpr
        :=
        rec
          (str_tgi: INTEGER,
           str_xad:
           struct
             (str_xru: str_exl$0,
              str_hkk: str_glp$0,
              str_ycw: str_iru$0,
              str_zrv: (iterate(NAT1)),
              str_jgp: str_agj,
              str_tdo: str_bnr,
              str_pjq: NAT,
              str_snm: str_quf),
           str_oub: str_ivh,
           str_sux: str_usg$0,
           str_sol: bool(FALSE = str_npd),
           str_qfj: str_bwd$0,
           str_udw: SIGMA(str_sva). (not(str_vqj$0 : str_yur$0)| NAT1),
           str_nxa: str_ygp$0)
          'str_ipe
      ELSE
        skip
      END
    OR
      rec
        (str_bpu: NAT1,
         str_rek: NAT,
         str_mma: NAT1,
         str_jey: "str_vpt",
         str_gaz: str_xas$0,
         str_sdf: str_kep,
         str_uin:
         { str_gfz, str_fuc, str_byh, str_prq, str_znt, str_fkf
           |
           not
             (!
                (str_csa, str_gre, str_vmo, str_lnc, str_vvv, str_kjy,
                 str_cyd, str_myv, str_wkn, str_eoq, str_bmy).
              (str_hdl$0 /<: str_hgz or
               !(str_xef, str_pfq, str_hgd).(str_zqd$0 >= str_gsa))) },
         str_wvy: str_yxn$0) ><
      6
    THEN
      str_mig'str_myy
      :=
      {str_imt$0,
       MININT,
       {},
       str_pgh$0,
       INTEGER,
       { str_mtj | not(not(FALSE /: [])) }'str_fol,
       NATURAL1} \|/
      struct(str_cqt: str_ahh$0, str_tij: str_ssp$0, str_vwo: [])
    OR
      bool
        (not
           (#(str_wsc, str_wsr, str_yuz, str_jeq, str_lin, str_akw, str_twx).
            (not(not(#(str_yps, str_wft, str_dax).(not(str_sbb < str_tdn)))))))
    THEN
      str_nxt, str_xxw, str_jfi, str_pha, str_pkd, str_vay, str_yrj, str_qhf,
      str_pzh
      <--
      str_czj
        ([str_psa,
          str_arz,
          NAT,
          STRING,
          str_jqj,
          struct
            (str_juc:
             struct
               (str_htr:
                bool
                  (str_tlo$0 > str_rqq$0 <=>
                   !
                     (str_xqn, str_tur, str_tgc, str_byt, str_sev, str_dhj,
                      str_tus, str_hyj).
                   (str_dhy <= str_jej)),
                str_azn: str_mov,
                str_nwx: str_qmi,
                str_bnk: [],
                str_brr: str_jhc$0)),
          FALSE,
          str_dks],
         (SIGMA(str_fas, str_nzw, str_rrb, str_qci, str_mwt, str_sjc).
          (str_hlf <: str_tqk$0|
           [str_wms$0, str_wmt$0, NAT1, str_zee$0, str_owf, NAT1])
          ,
          PI(str_tcn, str_uyg, str_ckp, str_lza).
          (str_gmh$0 <= str_gzs & str_cmu$0 <<: str_qfu$0|
           struct
             (str_znq: bool(NATURAL > str_edn$0),
              str_acp: NAT1,
              str_dxq: str_izq$0,
              str_nag: str_cmb,
              str_ubz: MININT,
              str_vos: str_esr$0,
              str_vlo: TRUE))),
         { str_vxj, str_rgy, str_wrx
           |
           not(#(str_mlk, str_riv, str_jmy).(str_fvh <: str_nvr)) or
           str_hfd$0 /<<: {NATURAL1, STRING, str_vyj}'str_wpw })
    END
  END;

  str_crg, str_ruj, str_lsk, str_byi, str_uid, str_glj, str_bws, str_qas,
  str_voy, str_itj
  <--
  str_jue (str_tqw, str_dxg, str_abt, str_bfn, str_ilv, str_oay, str_qiw)
  =
  ANY
    str_zmk, str_lyv, str_egf, str_ocr, str_opx, str_jhs, str_rpt, str_amb,
    str_xaj, str_fzd
  WHERE
    not
      (#(str_vat, str_doe, str_haj, str_tvq).
       (%(str_qxg, str_brk, str_fom, str_xhy, str_lov, str_pzl).
        (str_uir$0 <<: NATURAL1|
         struct
           (str_fpv: str_hhu$0,
            str_ixb: str_bri,
            str_lqc: str_xqx$0,
            str_rwq: BOOL))
          'str_rbo <
        str_zmy(str_vcm)))
  THEN
    IF
      not
        (!(str_rnr, str_ean, str_iig, str_sfp, str_lao).
         (!
            (str_sbh, str_vxc, str_dfy, str_ozj, str_fso, str_yhd, str_qqb,
             str_hmd, str_yru, str_eey, str_ize).
          (#(str_bdf).
           (!(str_wwy).
            (#(str_kvx, str_frl, str_ono, str_vnn, str_cot, str_lll, str_vma).
             (MAXINT < NAT & NAT < FALSE))))))
    THEN
      str_ycr, str_lpb, str_cup, str_cud, str_qpd, str_xaz
      ::
      { str_geu, str_fqy, str_bcf
        |
        !(str_ood, str_wms, str_fxr, str_kiu, str_cnt, str_sru).
        (#
           (str_icc, str_zda, str_lrx, str_kmm, str_fne, str_wjn, str_uyc,
            str_xge, str_fnk, str_kwm).
         (#(str_nwu, str_lfg, str_dxt, str_inc).
          (seq1(str_tlx) /= {} , str_ufy))) } ;
      str_saf, str_ryx, str_ytw, str_cph, str_kks, str_ffs, str_nyv, str_ltk
      ::
      struct
        (str_odj: {FALSE, TRUE},
         str_uia:
         [(id([] , str_mmp)),
          str_ktp$0,
          (str_rfk$0(str_qfc$0(str_iex))),
          str_ptu],
         str_uok: str_gft$0,
         str_arr: str_tfa$0,
         str_kzu: NATURAL1,
         str_qwx: str_wnw$0)
    ELSIF
      FALSE \/ ([MININT] , str_duh$0) /=
      bool(!(str_ewd).(NATURAL <<: str_zib) or str_inh$0 /<: [])
    THEN
      str_qld, str_wyp, str_bgj, str_mfe, str_jfw, str_gyo, str_oik, str_ugh,
      str_zkz
      :=
      {str_gnb,
       str_iax,
       str_hzy$0,
       [{str_usw, str_cfe$0, NAT, str_pec$0, str_bnr, str_kqs, str_gfa},
        str_pfk,
        str_pzp,
        {str_wvk},
        MININT],
       (STRING(str_nvn$0)),
       INTEGER,
       (mirror
          (struct
             (str_whc: TRUE,
              str_nbn: str_wfv$0,
              str_qdu: str_vpe,
              str_vnd: str_hid,
              str_xko: BOOL))),
       []}
    ELSIF
      #
        (str_wio, str_olh, str_waq, str_plz, str_xij, str_fga, str_fai,
         str_leo).
      (not
         (!
            (str_pjz, str_qap, str_smu, str_oid, str_rwx, str_zul, str_eoq,
             str_sqs, str_buy, str_mwy).
          (not(str_xbf : TRUE)) &
          SIGMA(str_qcb, str_vym). (str_szl$0 /<<: BOOL| str_big) > str_fld))
    THEN
      PRE
        #
          (str_brr, str_ywr, str_bwa, str_zak, str_jsx, str_jns, str_reh,
           str_zil).
        (not(str_abq$0 <= str_emw) <=>
         not
           (INTER(str_gdy, str_err).
            (INT < INTEGER| bool(str_fdb <<: str_pxw$0)) /:
            str_eht))
      THEN
        IF
          [(NAT1 , [])] >
          bool
            (#
               (str_qnj, str_yya, str_rmf, str_sgz, str_hje, str_pwc,
                str_jxj, str_dev, str_ncl, str_com).
             (str_ywh$0 /<: str_phc$0 or "str_kga" <= MININT))
            'str_yli
        THEN
          CASE
            %
              (str_mqf, str_dxr, str_ajx, str_nox, str_ilx, str_omu, str_vfn,
               str_zvi).
            (str_eap$0 <= str_ajf|
             (BOOL
              |->
              struct
                (str_eao: str_olk$0,
                 str_igh: str_eny,
                 str_rkl: str_gfr,
                 str_dwk: NAT,
                 str_jhq: str_zzg,
                 str_yjd: INTEGER,
                 str_xqx: str_ejw$0,
                 str_zxo: str_bgf$0))
             |->
             [(str_oen /\ str_wwq)])
            OF
            EITHER
              rec
                (str_gji:
                 (-
                    { str_tex, str_vfw, str_opi
                      |
                      !(str_ubi, str_tmw, str_fds, str_qic, str_ieo, str_tsz).
                      (str_oiu <: str_ynt$0 => str_ybf <= INTEGER) }),
                 str_kcn: {str_ggz$0, MAXINT'str_oop, str_tqz},
                 str_aom: str_lrw,
                 str_wqw: str_mza$0)
            THEN
              str_drw, str_kpn, str_hgu, str_rib, str_hpu
              :=
              str_elw$0'str_jfb \|/
              {BOOL,
               INTEGER,
               ((str_ipn(MININT))
                  (rec
                     (str_jud: str_rlp$0,
                      str_pxe: str_bzr,
                      str_igp: (str_cnr$0 /|\ []),
                      str_jfz: STRING,
                      str_bzg: str_yoc$0,
                      str_usm: str_nya$0))),
               FALSE}
            ELSE
              LET
                str_zqf, str_glw, str_omf, str_laa, str_sls
              BE
                str_ihd
                =
                bool
                  (!(str_igf, str_drs, str_vkh, str_stm, str_jkj, str_voy).
                   (#
                      (str_xah, str_eyb, str_pxl, str_eil, str_ijy, str_ypo,
                       str_rqs, str_bdg, str_fxc, str_gyh).
                    (not
                       (#
                          (str_abj, str_byn, str_usi, str_iec, str_aju,
                           str_fem, str_frg).
                        (#(str_rtc, str_wwh).
                         (#(str_dez).(str_bbo$0 /= str_rpv)))))))&
                str_qat
                =
                {str_iji,
                 NAT1,
                 str_twe,
                 { str_pcx, str_ilq, str_eko, str_hjf
                   |
                   #
                     (str_irj, str_cme, str_lze, str_enr, str_nfr, str_iod,
                      str_yve).
                   (str_kfh$0 < str_aqs$0) }
                   'str_jjl,
                 (((NAT
                      (UNION
                         (str_ott, str_zko, str_wcn, str_bsk, str_szj,
                          str_zpx, str_fwt, str_kpy, str_aoc, str_ckz,
                          str_ngy).
                       (str_gvi /<: str_xsk| str_ziw$0))) ||
                   str_fpy)),
                 INTEGER}&
                str_pfd
                =
                { str_sga, str_wrz, str_sql, str_cbg, str_cbq, str_zvj,
                  str_quk, str_rzx, str_fjs
                  |
                  NAT1 /<<: {} &
                  !
                    (str_wwq, str_ysh, str_iqs, str_yov, str_yrs, str_anh,
                     str_mld, str_ypk, str_qyy).
                  (!(str_cbp, str_hrz, str_vlb, str_ghr, str_lur).
                   (str_hsy$0 /= (str_gfk |-> str_zjx$0)(FALSE))) }&
                str_kco
                =
                { str_gli, str_qxd, str_qfm, str_lwm, str_hip, str_teq,
                  str_okc, str_xux, str_qop
                  |
                  #(str_iif, str_uck, str_vos, str_rnx, str_yyt, str_wbu).
                  (#(str_ayt, str_oxb, str_drc, str_klk).
                   (str_hqj$0 .. str_yaz /= bool(NATURAL1 >= str_xcd) &
                    str_wye$0 /<: str_ypo)) }&
                str_wng
                =
                struct
                  (str_hea: PI(str_tsn). (str_uxk /<: str_qdo$0| str_miw$0),
                   str_eqw:
                   { str_iac, str_yza
                     |
                     !
                       (str_oim, str_dmu, str_iws, str_vxg, str_pap, str_tmk,
                        str_bxy, str_hsl, str_nnj, str_agl, str_kyz).
                     (str_btv /<: str_zos <=> str_yuu <= str_kdk$0) },
                   str_osy:
                   rec
                     (str_tft: str_arz$0,
                      str_mov: {},
                      str_fcc: INTEGER,
                      str_rij: NATURAL1,
                      str_esc: str_ltp,
                      str_yns: NAT,
                      str_eca: str_mfw$0,
                      str_jpt: str_fdl),
                   str_prr: str_zva$0,
                   str_qfy: INT,
                   str_bfj: BOOL,
                   str_far: str_bim$0)&
                str_qvc
                =
                rec
                  (str_pyf:
                   struct
                     (str_wwz: str_nza,
                      str_tgd: TRUE,
                      str_asw: str_ocx$0,
                      str_toj: str_eeh$0)
                     'str_rni,
                   str_fgo: STRING,
                   str_ffh:
                   {{NAT, str_bxj$0, STRING, str_cyu, TRUE, str_nqb$0,
                     str_cpg$0, str_psl}
                      'str_hco,
                    SIGMA
                      (str_hop, str_cys, str_ahv, str_zvp, str_rpd, str_wvn).
                    (str_sfp = NATURAL1| STRING),
                    NAT},
                   str_pow: str_avk$0)&
                str_bkf
                =
                [((({str_tze$0, str_sgw$0, BOOL, str_cml$0, str_jtg,
                     str_iae$0, MAXINT} >+>
                    str_gtg$0)
                   |->
                   (str_iic$0(str_peu))) +->>
                  str_uuj$0),
                 {STRING, MAXINT, {}},
                 str_dwe]&
                str_rdf
                =
                {(str_wno$0((str_ldp$0 +->> MININT)'str_wbr)),
                 struct
                   (str_pdz: MININT,
                    str_txl: str_wkb$0,
                    str_nfi: str_lse$0,
                    str_kmt: str_kfb,
                    str_pcm: str_dpv$0,
                    str_bkx: [],
                    str_ruv: str_aey,
                    str_otb: ([](str_bll$0))),
                 NATURAL1,
                 str_oqh$0'str_try}
              IN
                str_xqb'str_zie
                :=
                INTER
                  (str_plj, str_zql, str_gex, str_lvi, str_fqf, str_lhr,
                   str_iat).
                (INT /<: str_gzc|
                 iseq
                   ([str_txa,
                     MININT,
                     PI(str_fkc, str_btf).
                     (str_iur$0 > MAXINT <=> str_neh > str_jvz$0| str_ijb$0),
                     str_ehk$0,
                     [],
                     str_lye]
                      'str_kad))
              END
            END
          END
        END
      END
    ELSIF
      !(str_rmo).
      (#(str_qrw, str_hrj, str_zji, str_yio, str_ghp, str_fje).
       (bool(str_yam /<<: str_xfs$0) |-> str_bsu$0 /=
        { str_hdz | str_kpr /: str_jdt$0 } or
        str_ntc$0 /<: str_mcv))
    THEN
      str_ztx, str_yhb, str_qto, str_mog, str_srm, str_emb, str_dvm, str_kaz
      ::
      {((MININT , str_pff)
        ,
        UNION(str_ppj, str_blc, str_rmj, str_xfp, str_drq, str_nkt).
        (!(str_vqb, str_how, str_qsf, str_mug).
         (not(!(str_gcj).(str_eoy$0 /<: NATURAL)))|
         str_loy$0))}
    ELSIF
      #(str_mmo, str_zog, str_dbr, str_mnn, str_rpc).
      (not
         (#(str_fzd, str_oyh, str_qix, str_vfz, str_fgq, str_kqw).
          ([TRUE,
            INTEGER,
            str_tcu$0,
            NATURAL1,
            (MAXINT + str_cld$0),
            str_fln,
            FALSE,
            { str_owf, str_baz, str_wug | FALSE : str_uld$0 }] <
           str_huq$0)))
    THEN
      str_tjz 
        (
          {(rec
              (str_mjb: NAT1,
               str_qfe: FALSE,
               str_gdr: str_chk$0,
               str_rlv: str_swm,
               str_dvr: {},
               str_cfu: str_kpm,
               str_zts: NAT) /
            {str_hge, {}, str_xnp, str_gxq$0, str_srf$0, str_new$0, str_kxb$0}),
           (iseq1(str_hav)),
           { str_xtd, str_gqi, str_icd, str_cuq, str_zcb
             |
             {} /: str_zvf$0 => str_mgv$0 <<: str_omi }}
        )
      
      :=
      ((str_jwa |-> INTEGER) \/
       rec
         (str_fwh:
          SIGMA(str_dzw, str_dml, str_qdu).
          (NAT < FALSE| [struct(str_mic: str_ohw$0, str_hdm: str_twc$0)])))
        'str_jgg
    ELSIF
      #(str_kkf, str_wdb, str_frc, str_xzq, str_uid, str_inq, str_oto).
      (#(str_pgn, str_qiy, str_cqb, str_aqy, str_jix, str_hru).
       (not
          (INTER
             (str_ieu, str_hzm, str_occ, str_zck, str_rig, str_pvw, str_nsl,
              str_egw, str_hnt, str_ali, str_ofa).
           (str_zzz >= str_ldh$0| rel(str_qwx$0)) <<:
           str_hxw)) or
       str_fcu /<<: {})
    THEN
      str_bay, str_exc, str_ckg, str_wln, str_qlx, str_srq, str_bdk, str_pou,
      str_zcy
      :=
      ({ str_hwm, str_ijk, str_rpg, str_cmr, str_dsb, str_pnt, str_bok,
         str_qrb, str_omx
         |
         #(str_ori, str_fod, str_voc).
         (#(str_wbe, str_slc, str_chs, str_ztn, str_rzo, str_dwr, str_vik).
          (str_cuy$0 : MININT)) }
         ([NATURAL1,
           MININT,
           ([] |> str_whg$0),
           str_gmf$0,
           str_rnx,
           NATURAL1,
           str_dkj,
           str_vat]))
        'str_khu
    END
  END

INITIALISATION
  WHILE
    "str_ygp" <<: TRUE or
    #(str_eyz, str_ypx, str_fvv, str_asg, str_dbg).
    (!(str_rlu, str_rgs).
     (!(str_qsv, str_akr, str_vlw, str_upn, str_kxp, str_akn, str_cnc).
      (("str_dyy" : str_tem <=> NATURAL1 <: str_vqr$0) &
       not(MAXINT = str_che))))
  DO
    LET
      str_qpp, str_fuv, str_qkh, str_spv, str_rwr, str_mbm
    BE
      str_qzd
      =
      PI(str_omr, str_gsr, str_ggz, str_urd, str_jmp, str_zbd).
      (#(str_yiv, str_uiv, str_lrz, str_mqv).
       (str_ajf$0 <<: str_zpe => NATURAL > str_aok)|
       max
         (inter
            (rec
               (str_few: TRUE,
                str_pqx: str_uls$0,
                str_qkz: str_nzk$0,
                str_noe: [],
                str_vzo: str_qaj,
                str_ues: str_jpz$0,
                str_fkp: str_uqz$0,
                str_jfv: NAT'str_mwu))))&
      str_ssa
      =
      BOOL
        (iterate
           (struct
              (str_axq:
               { str_hkh, str_bvg, str_gur, str_zzo, str_lyp, str_rnn,
                 str_ipj, str_cfn, str_lpd
                 |
                 str_rga$0 =
                 str_djn$0
                 ,
                 rec
                   (str_hur: TRUE,
                    str_dnw: str_qfo,
                    str_rwc: str_ltd$0,
                    str_wdd: FALSE,
                    str_puh: str_iuq$0,
                    str_ybw: str_ngl$0) })))&
      str_wdf
      =
      { str_ant, str_qcm, str_las, str_vtw, str_hqd, str_ldn, str_mzm
        |
        {{str_dgt, str_zwn$0, str_pvl, str_aqx$0, str_bni$0, STRING,
          str_eco$0, str_nki$0},
         str_cjv$0,
         str_khf$0,
         str_mbq,
         NATURAL1,
         str_nlr$0,
         str_ymm$0,
         str_fod} >
        MAXINT
          ({ str_cxa, str_cxw, str_vgo, str_ggz, str_ztc, str_nws, str_aho,
             str_wnv, str_ehx, str_gor, str_bdm
             |
             not(str_iic > str_wen) }) }&
      str_tgx
      =
      { str_lys, str_lli, str_gns, str_oua, str_vfy, str_cty, str_ayw,
        str_zlq, str_lvt, str_bae, str_pfs
        |
        not
          ([] < str_jxy <=>
           !(str_flx, str_pja, str_gqf, str_sei).
           (!(str_rjb, str_lgq, str_ohd, str_kcf, str_vcz).
            (not
               (!
                  (str_iwj, str_qbk, str_erl, str_bts, str_rgs, str_fet,
                   str_zos, str_qtv, str_esr, str_rxh).
                (str_wzk <<: {}))))) }&
      str_nwd
      =
      rec
        (str_yzl: str_qaz$0,
         str_ucu: str_bzf,
         str_ixk: str_des$0,
         str_ang: [BOOL, str_wlh]'str_gav,
         str_iss:
         %
           (str_mph, str_wxd, str_bho, str_yrs, str_cxx, str_tdz, str_fke,
            str_hsg).
         (NAT1 > str_rzc$0|
          ["str_yvh", INTEGER, bool(str_sdo /<<: str_lfi), str_aqh$0]))&
      str_lex
      =
      rec
        (str_bmi:
         bool
           (#(str_thh, str_egc, str_hfv, str_nuv).(str_czd$0 = {{}, MAXINT})),
         str_opd: str_che$0,
         str_kol: str_pnz,
         str_txc: (NATURAL1 , (succ(NAT1))),
         str_mev: str_dib$0)&
      str_zll
      =
      {str_hzk$0,
       { str_sdb, str_lfk, str_qzg, str_vyw, str_brs, str_ikm, str_beh
         |
         str_gcr$0 /: FALSE },
       [str_afu$0,
        rec(str_jce: str_vfy, str_szl: str_izu),
        (bool(str_ctb <<: str_gcj) |-> str_uiv)],
       INT,
       [str_nat$0, NAT, NAT, STRING],
       str_bis$0,
       str_ttd$0,
       str_ryx}&
      str_mko
      =
      UNION
        (str_hjm, str_qto, str_jqm, str_tmi, str_sac, str_uoo, str_qcf,
         str_mxo, str_yhk, str_lhp).
      (str_ldd :
       bool
         (#
            (str_qed, str_bzl, str_wfs, str_alk, str_qiz, str_scb, str_sfh,
             str_psd, str_svm).
          (str_iqh > str_lwi$0))|
       rec
         (str_pnq: INT,
          str_kwo: TRUE,
          str_tkc: "str_non",
          str_mhf: str_jdn,
          str_rox: (iterate(str_igr)),
          str_xsb: {str_sfz, [], STRING, INTEGER},
          str_bji: NAT))&
      str_igc
      =
      MININT'str_emh
        ([FALSE,
          STRING,
          INTER(str_ucr, str_ckb, str_fas, str_rse, str_bid, str_krt).
          (str_yqt /<<: INTEGER <=>
           not(str_itx$0 <= str_may & BOOL < str_cel$0)|
           str_yot),
          BOOL,
          INTEGER,
          str_bwp,
          str_qmx$0,
          str_igy])&
      str_xxs
      =
      { str_dtg, str_erh, str_fqn, str_tge, str_fbm, str_gkl, str_one,
        str_aog, str_fgd, str_qss, str_awx
        |
        not
          (#(str_kkm, str_dkn, str_bfl, str_vot, str_cpa, str_kje).
           (!
              (str_qod, str_xiq, str_ake, str_zpk, str_thw, str_eqw, str_sde,
               str_syv, str_aey, str_jxp).
            (#(str_qwe, str_qxv, str_emv, str_mjf, str_dgs, str_swn, str_fiz).
             (str_qhh$0 |-> NATURAL /<<: FALSE)))) }&
      str_ewv
      =
      rec
        (str_pxd:
         [INT,
          [],
          rec
            (str_loq: NATURAL,
             str_bai:
             SIGMA
               (str_yal, str_wlh, str_ygp, str_sdf, str_lkz, str_kcg,
                str_fpq, str_plt, str_eiw).
             (not(str_xtn$0 /<: str_nmy$0)| str_som$0),
             str_jgt: str_zbc,
             str_rif: str_hyj,
             str_lma: str_ify),
          str_kjp$0],
         str_xnk:
         {NATURAL,
          INT,
          str_xlk$0,
          (tail(str_sbs$0)),
          str_snx,
          MAXINT,
          str_nia$0,
          {}})
    IN
      IF
        str_eko$0 /<: NATURAL &
        (!(str_sxm).
         (!(str_cnb, str_ejj, str_vgj, str_ysf, str_wac).
          (not(str_gbz$0 .. MAXINT /: str_ikk$0))) or
         str_lzb$0 <<: BOOL)
      THEN
        str_tbv 
          (
            UNION(str_ejs, str_uqx, str_yhv, str_oye, str_jhk, str_ysj).
            (not
               (!(str_ycp, str_qfa).
                (!
                   (str_ium, str_wta, str_ccw, str_tjh, str_mig, str_xlv,
                    str_lpy, str_zed).
                 (#(str_elv, str_eig, str_xaa, str_zbb, str_scr).
                  (!(str_gvl, str_rtf).
                   (#(str_tsc, str_rzi).(str_svm$0 > str_tac$0))))))|
             str_lhq)
          )
          (
            bool
              (not
                 (#
                    (str_wlb, str_cfq, str_pwg, str_afj, str_pol, str_xne,
                     str_vew).
                  (#(str_iwp, str_vyc, str_cdu, str_yhs, str_ens, str_pya).
                   (#
                      (str_wso, str_vri, str_rpj, str_dsk, str_amg, str_ulf,
                       str_qnk, str_etu).
                    (#(str_tbg, str_bnc, str_qgu, str_mem, str_gsi, str_vco).
                     (!
                        (str_gyn, str_pcb, str_hws, str_wsi, str_ded,
                         str_njp, str_tfr).
                      (str_xhb$0 /<: MAXINT)))))))
          )
        
        :=
        bool(!(str_deg, str_zvn, str_swy).(str_jpe >= str_xgv))
          (bool
             (!(str_ffw, str_hlg, str_tof, str_otc, str_nvh).
              (#
                 (str_poc, str_bfj, str_wbb, str_hjo, str_nue, str_evz,
                  str_ehy, str_jem, str_qfo).
               (str_xqa /<<: []))))
      ELSIF
        !(str_awz, str_jnn, str_oox, str_ihs, str_tlm, str_zmw, str_sca).
        (not
           (!
              (str_vps, str_uqo, str_omj, str_tog, str_lva, str_jbx, str_zza,
               str_lvt, str_wdq, str_hig, str_ldj).
            (#(str_ixe, str_lik, str_ouc, str_uwr).
             (!(str_rbt, str_kbb, str_gbq, str_lqm, str_axp).
              (str_ter < str_tce --> str_jpi$0)))))
      THEN
        str_ldb, str_vse, str_pvy, str_owd, str_sii, str_zmy, str_jbb,
        str_vpj, str_vfc
        <--
        str_okr
          ((dom
              (INTER(str_enn).
               (str_lly /<: str_yyi|
                %(str_nvc, str_jan, str_dhk, str_xve).
                (#(str_vzq, str_cvm, str_nwc).
                 (#
                    (str_jtl, str_cpb, str_caf, str_zlw, str_pjk, str_vsl,
                     str_nmq, str_hfy, str_uqo).
                  (not(str_csr$0 = str_cyx$0))) &
                 str_sjz$0 /<: str_aot$0|
                 str_zud)))),
           bool
             (bool(str_rrx = []) <:
              bool(str_adq = str_jqu => not(INT >= str_rrj))))
      ELSIF
        rec
          (str_qok:
           { str_hig, str_yds, str_yeq, str_efp, str_dgq, str_bcj, str_yef,
             str_nrj
             |
             !
               (str_zhw, str_zdj, str_wij, str_tbn, str_csg, str_pcq,
                str_clg, str_crw, str_obc, str_bcb).
             (TRUE <= str_wfo) },
           str_lll: str_nxp,
           str_dbr: str_kzi,
           str_qrd: INT) =
        struct
          (str_rzd: MININT,
           str_tkb: str_rbl,
           str_qut: [str_jjx$0, MININT, str_ubp$0, NATURAL1, str_hof],
           str_nnf: {},
           str_bjs: {},
           str_pzs: str_jhh$0,
           str_xsq: NATURAL)
      THEN
        str_dcn, str_kuh, str_mme
        <--
        str_zhu
          ((str_gqd$0 /|\
            (bool(str_zuy$0 > str_lha$0)
             ,
             { str_ckz, str_exc, str_zqk, str_ufw, str_cpm, str_obo, str_gpd,
               str_isi
               |
               str_rjc'str_rel <: rec(str_ciz: {}) })),
           (left
              ([(father
                   (rec
                      (str_vfo: str_ial, str_kta: str_nty, str_zys: str_len$0))),
                str_tss$0,
                STRING,
                str_dyx,
                INT,
                str_ycz$0]
                 ([str_icb,
                   str_lcs,
                   str_ifd$0,
                   str_uvd,
                   str_jdg,
                   str_duh$0,
                   {str_zzi$0, str_ktg$0}]))),
           struct
             (str_dnh: str_pxx,
              str_isf:
              { str_alu, str_mpa, str_vpk, str_muf, str_lpx, str_ses,
                str_gsk, str_adw, str_dar, str_baw
                |
                str_nbs |-> str_uha /<<: [str_qgd, str_bcr$0] },
              str_poh: str_rup$0,
              str_jso: str_zzj,
              str_wzr: str_xdy,
              str_ogt: str_mjx,
              str_orc: [FALSE],
              str_szp: [])
             'str_wsg)
      ELSIF
        #(str_ora, str_jnz, str_wcm, str_zxw, str_huy, str_gsf, str_wcm).
        (not
           (not
              (not
                 ([str_qkq, str_olu, str_ppq, str_kqy$0, TRUE, str_dbr$0,
                   NAT1] <:
                  [str_rdl, MININT, str_qra, NATURAL1, str_nki, NAT, MININT,
                   str_opo$0]))))
      THEN
        str_prp
        <--
        str_egr
          (((const([])) /\
            ((NAT(iseq(str_uah$0))) +
             [str_nvn, NATURAL, str_ody, MAXINT, str_vug, (prj1(INTEGER))])))
      ELSIF
        !(str_brk, str_nvx).
        ({ str_uke, str_nhx, str_dmm, str_bym, str_ode, str_ako, str_cuv,
           str_eqp, str_ucx, str_aii, str_cvy
           |
           str_tkh$0 /<: str_pfk$0 }
           ({rec(str_qxp: INTEGER, str_uaw: str_fdd, str_mzg: str_bii),
             str_nmy,
             str_cro$0,
             [],
             INTEGER}
              'str_coe) <
         str_zop)
      THEN
        skip
      ELSIF
        #(str_vfm, str_jge, str_lwy, str_nku).
        (not
           (not(TRUE /<: str_efn$0 <=> NATURAL <<: str_cjc) or
            not(str_ogk /= INTEGER)))
      THEN
        str_klf, str_eca, str_mzp, str_ezh, str_bjj, str_bix, str_owk,
        str_ydo, str_bvh
        ::
        rec
          (str_unm:
           rec
             (str_thb: str_gea$0,
              str_ass: str_wju,
              str_pmb: {},
              str_uxw:
              {(-
                  rec
                    (str_keq: str_gys$0,
                     str_xwk: struct(str_lqn: str_yms$0, str_jzv: NAT),
                     str_equ: INT,
                     str_mwd: {},
                     str_bat: str_mnv$0,
                     str_mkw: str_qgv$0,
                     str_att: NATURAL,
                     str_cow:
                     { str_qcc, str_qpx, str_nje, str_abf, str_ucd, str_vqq,
                       str_jcy, str_saf
                       |
                       str_dwr <<: FALSE })),
               NAT1,
               str_daj,
               str_fva$0,
               str_pkw,
               NATURAL,
               FALSE,
               INTEGER},
              str_mts: str_fca,
              str_oac: INT,
              str_rjd: STRING,
              str_egk: str_elr$0))
      END ||
      str_wwa
      :=
      struct
        (str_hwd:
         (UNION
            (str_oko, str_jkj, str_wql, str_puv, str_dhr, str_psw, str_tjj,
             str_ljt).
          (#(str_sjy, str_xvs, str_cbs, str_knm, str_xsy, str_ncg, str_hjb).
           (not(str_fqg <= str_dec))|
           str_gaz$0)
          |->
          INT),
         str_zsw: str_ndt$0,
         str_kmq: NATURAL,
         str_tzb: (str_nek(str_cxk$0)),
         str_ggr: (str_mgb(str_hqn)),
         str_fli: MAXINT,
         str_ohx: str_mkl$0)
    END
  INVARIANT
    (str_qio$0 |-> str_lwq) * str_auw$0 <=
    { str_hlv, str_hvt, str_wmy
      |
      str_bju$0 : str_gcr$0 & #(str_uej).(str_peu <: str_zcw$0) }
  VARIANT
    { str_dhd, str_rnr
      |
      !
        (str_sgt, str_lti, str_tel, str_dky, str_cui, str_uke, str_hnz,
         str_loz).
      (str_wdz /: str_udk =>
       !
         (str_fyq, str_fhz, str_uqq, str_qgs, str_wig, str_xtl, str_sth,
          str_jww).
       (not
          (!
             (str_lnl, str_rcb, str_chp, str_srz, str_juy, str_fhn, str_lhd,
              str_pkx, str_qvl).
           (!(str_kni, str_quz, str_owt, str_yzb).(str_jcu$0 <<: BOOL))))) }
  END ||
  VAR
    str_hms, str_rix, str_tvc, str_epf, str_frj, str_esk, str_idi, str_otb,
    str_oft, str_cpv
  IN
    LET
      str_msb, str_yzk, str_aee, str_gqp, str_txx, str_zbv
    BE
      str_jsu
      =
      (str_jex$0(str_llx))
      ,
      (struct
         (str_uba: str_deu$0,
          str_ujc: TRUE,
          str_nyt: "str_xpx",
          str_beg: str_rud$0,
          str_pbx: str_ovy$0,
          str_xkd: str_pzx$0,
          str_czb: str_vfy)
       ,
       struct
         (str_hhr: str_kpo$0,
          str_nhu:
          struct
            (str_fli: str_bab,
             str_iam: str_njg$0,
             str_puy: str_ebs,
             str_sld: str_ruj$0),
          str_tpv: str_sxz'str_aod,
          str_yjb: INT))&
      str_abe
      =
      rank
        ([7,
          SIGMA(str_evk, str_hju, str_pem, str_fij).
          (!
             (str_sob, str_vjq, str_jan, str_ndp, str_xrk, str_gbf, str_tum,
              str_zjd, str_zqu, str_ckd, str_dvb).
           (not(str_ikq$0 <<: str_svs))|
           str_ahc)
            'str_qgg,
          {},
          8]
           'str_fwq)&
      str_yol
      =
      {str_sfl$0,
       {TRUE, str_iod$0, str_zns, str_axp$0, FALSE, str_kes, str_ctz$0},
       bool(not(str_syz > str_usn$0 or str_pke >= NATURAL1)),
       {str_zrr, str_sdi, str_cdu$0, str_vuz, str_ndy$0, str_kiy$0}}&
      str_gwp
      =
      rec
        (str_lta: str_hip,
         str_orq: str_cwx,
         str_rvu:
         [NAT1'str_pbr,
          str_qln,
          (str_ktf$0 |-> str_dlq$0),
          struct
            (str_six: str_jlq,
             str_plx: {},
             str_sdi: str_ich,
             str_odk: INTEGER,
             str_piy: MININT,
             str_kzr: str_otv),
          str_oyu$0],
         str_gua: NAT1,
         str_hpi: str_zcb$0,
         str_hbj: MAXINT) \/
      (NATURAL , BOOL)&
      str_edt
      =
      [{{ str_hlc, str_dgu, str_xqn, str_jme, str_mhr, str_gya, str_fra,
          str_dmj, str_pfb, str_wgu, str_ghs
          |
          str_ssu$0 /<: str_isv }},
       PI
         (str_wcl, str_vfe, str_ngb, str_klc, str_ior, str_pmw, str_xqw,
          str_tyy, str_rup, str_lku, str_mgp).
       (str_kdk$0 /: str_pqp$0| str_hjc$0),
       { str_nrh, str_ohq, str_hrh
         |
         #(str_zav, str_rej, str_pyw, str_cak).(str_eav$0 >= str_len$0) &
         FALSE >= str_gbe$0 }]&
      str_wte
      =
      SIGMA
        (str_oiw, str_arh, str_net, str_qdf, str_woe, str_vcn, str_tit,
         str_czk).
      ({str_pon$0, str_uvu$0, str_amb, BOOL, str_eez}'str_iug =
       UNION(str_yte, str_tsb, str_jzp). (str_cgz$0 >= str_oui| str_dsw$0)|
       {NAT1,
        str_nbq$0,
        str_mpi,
        bool(str_ewx >= TRUE),
        str_don$0,
        {},
        str_vtu,
        NAT})&
      str_qpn
      =
      rec
        (str_fxy: str_vjy$0,
         str_ddd: MININT,
         str_gpc: str_tdg$0,
         str_mib: str_ffh$0)
      |->
      (arity
         (rec
            (str_bep: str_tar$0,
             str_mrm: str_jxf,
             str_sco:
             rec
               (str_phm: str_tsm$0,
                str_hex: str_tpb,
                str_ors: NAT1,
                str_jjt: {},
                str_ndc: BOOL,
                str_ieb: NATURAL,
                str_xvh: [],
                str_qlr: str_yfj$0),
             str_qml: {},
             str_foc: str_awk,
             str_fqf: NATURAL) ..
          {[], str_oyr$0, MININT, [], BOOL, STRING, str_cql, str_swj}))&
      str_qbo
      =
      { str_hjg
        |
        UNION(str_ikg, str_txk, str_fza, str_mxh).
        (str_xgj$0 <= str_fyy <=> str_ffw : str_yau$0|
         struct
           (str_lot:
            struct
              (str_rmy: NAT,
               str_vtd: str_rqu$0,
               str_fzs: str_pyw,
               str_gwd: str_fqy$0,
               str_obi: INT,
               str_nbn:
               rec
                 (str_yht: str_iqf,
                  str_cjp: str_rwy,
                  str_tez: str_epc$0,
                  str_xbz: str_gmb,
                  str_ggt: str_krt$0),
               str_xnn: str_fyd),
            str_sam: str_ewq$0)) /=
        str_bas$0 }&
      str_tgz
      =
      [INTER(str_xeq). (str_irl /: str_fkz| str_mgy$0)'str_vfx,
       {str_iek, str_uiq, str_kvs$0, str_dhq, str_whl}]
      |->
      { str_fog, str_pki, str_xef, str_smt, str_lsc, str_pff, str_azb,
        str_tlm
        |
        str_iwf < FALSE }&
      str_bce
      =
      (str_xqr >->>
       (str_fxk$0'str_vxq \|/
        struct
          (str_xhr: str_dtc,
           str_lja: str_vkf$0,
           str_erg: str_hbc,
           str_mda: NATURAL1,
           str_kxn:
           PI(str_ntg, str_lbf, str_coy, str_iop). (INT /<<: str_gvi| []),
           str_udf: str_ubk$0,
           str_ttl: str_ixp,
           str_rrp: str_tpv)))
        'str_ymm&
      str_iey
      =
      rec
        (str_gzj:
         bool
           (!(str_jpj, str_oxa).
            (#
               (str_ftc, str_bxw, str_uxa, str_qrn, str_enw, str_qyd,
                str_wrl, str_vhy, str_oyq, str_wki).
             (str_jlw /= str_mvo$0 & not(MAXINT <: str_ukg$0)) <=>
             MININT /: MININT)))
    IN
      str_ztk 
        (
          inter
            (UNION(str_kma, str_jhp, str_cfy).
             (#(str_wqb, str_kkn, str_iky, str_dxl).
              (!
                 (str_tsv, str_woe, str_css, str_idj, str_ffv, str_ryn,
                  str_nil, str_yvf).
               ([] = str_efz or str_jnz /= str_pgs))|
              ([] <- INT)(str_izo)))
        )
        (
          { str_ylo, str_xpt
            |
            str_tbf$0 , str_toe$0 /: str_uqa$0 <=>
            #
              (str_uaa, str_dvt, str_hnw, str_ydt, str_pxn, str_uro, str_ery,
               str_vmv, str_wvy, str_fjq).
            (#
               (str_puu, str_kud, str_wno, str_slw, str_itp, str_lfr,
                str_rjz, str_ikj, str_wcz).
             (str_dcs$0 /: str_nrx)) }
        )
        (
          { str_bjk, str_rmz, str_rzi, str_smu, str_azi, str_raw, str_tht,
            str_mni, str_jde
            |
            str_kew$0'str_bdo -
            { str_jgx, str_yjy, str_yjj | str_tqo$0 > str_hwe }'str_rik /<:
            [960, str_gua$0, str_jyz, str_jbo, str_fmj] }
        )
        (
          SIGMA
            (str_fhu, str_ptb, str_grp, str_ciu, str_drs, str_cjh, str_zmz,
             str_xqj, str_wrt, str_ujp, str_zof).
          (#
             (str_nxt, str_qpl, str_xqg, str_sqn, str_ejh, str_min, str_bjv,
              str_mnp).
           (#(str_yoi).(str_rej$0 /<<: str_jnh$0 & 4 /= str_ueg$0)) or
           not(str_pwk$0 /: str_qkl)|
           {str_oew, INT, str_gnw, str_bjc, str_art$0, str_ndk, str_yja,
            str_cmh})
        )
        (
          struct
            (str_pgb: str_zzn'str_pft,
             str_wca:
             (str_vpa$0
                (%(str_pbs, str_eqz, str_mzj, str_bxu, str_fwy).
                 (#(str_iia, str_aix, str_fiy).(INT <<: str_fae) &
                  str_sld /= str_gdd$0|
                  NAT))),
             str_jbx: rec(str_nwb: str_xqc$0, str_uek: str_xos),
             str_kev: {})
        )
        (
          struct
            (str_irk: (mirror(MAXINT)),
             str_enj:
             {STRING,
              {str_yiy$0, str_fdj$0},
              str_hhe$0,
              INTEGER,
              str_zsp$0,
              str_izf,
              str_hvv$0}) +->
          {str_tso$0,
           STRING,
           (rank(str_qdd$0)),
           TRUE,
           STRING,
           str_ede$0,
           str_dis$0}
        )
        (
          { str_yfh, str_ciy, str_yff, str_yov, str_ncy
            |
            str_cbo$0 : str_xlr$0 }
            ({str_owx$0,
              MAXINT,
              bool(str_cpl /= str_qvl$0),
              (str_xrc$0
                 (str_ceh$0
                  ,
                  struct
                    (str_avm: str_ddo, str_gkb: str_nht, str_hkw: str_luq)))})
        )
        (
          bool
            (!
               (str_iup, str_siy, str_oyd, str_fsp, str_djx, str_zbn,
                str_vfx, str_yfj).
             (!(str_ekk).
              (not(str_lkd <<: BOOL & str_jxb$0 <: str_gmi$0) =>
               !
                 (str_qod, str_rhd, str_lxl, str_chl, str_xbm, str_lsp,
                  str_mbi, str_vmy).
               (NATURAL1 : STRING))))
        )
        (
          { str_ogz, str_lww, str_equ, str_asl
            |
            str_kaq > mirror(BOOL'str_hqm |-> str_cpz) }
            (front(str_nvo))
        )
      
      :=
      bool
        (!
           (str_yvs, str_ewa, str_nca, str_nsw, str_qad, str_fbr, str_cps,
            str_iam, str_vcs).
         (!(str_cbb, str_lzn, str_emv, str_gkd, str_rbi).
          (!
             (str_kxq, str_osn, str_uwt, str_ubm, str_xvd, str_krn, str_zhg,
              str_ocg, str_oju, str_aop, str_rlv).
           (not(INT /: NAT1))) or
          str_pmh : str_zne)) ->
      str_oed
    END
  END

ASSERTIONS
  not
    (#(str_fso, str_xqt, str_lte).
     (#(str_gdd, str_boy, str_wyb, str_cbm, str_rvm, str_zdy).
      (#
         (str_pdd, str_kra, str_xeq, str_gqb, str_wbe, str_bea, str_oqu,
          str_mfa, str_pwb, str_coy).
       (str_syc$0 <= str_vfb$0)))) =>
  str_lkt$0 /<: NATURAL >+> str_ycj$0;
  #(str_mpy, str_rmr, str_vqu, str_uts, str_ebv).
  (!(str_rkd, str_dut).((str_zrw ; str_cwd) <<: MAXINT(str_fms$0(str_uak$0)))) or
  MININT <= str_wil;
  struct
    (str_bpx: str_kqa,
     str_zsd: str_wgj$0,
     str_ekz: str_gdu$0,
     str_exh:
     (str_idb$0
      |->
      {str_emh$0,
       NAT,
       str_yui$0,
       str_nas,
       3,
       str_can$0,
       [str_rbp$0, str_qhb$0, str_jex],
       str_pkh})
       'str_vws,
     str_jtu: []) :
  { str_jiq, str_ecw, str_hbp, str_xmv, str_nhw, str_owo, str_qrw, str_mxv
    |
    str_yxe >= str_njq }

INVARIANT
  !(str_vur, str_imb, str_udw, str_yqh, str_vym, str_jow, str_paz).
  ({ str_stu, str_pmh, str_amr, str_xfb, str_ins, str_xdf, str_uzp
     |
     str_ezn >= str_hhv$0 <=> NAT1 <= str_fuq$0 } <=
   struct
     (str_hys: str_csz$0,
      str_zcb: str_llv$0,
      str_sgr: INT,
      str_aut:
      struct
        (str_awf: str_bhy,
         str_aar: NATURAL1,
         str_qxf: str_zpp$0,
         str_kic: str_maz$0,
         str_xrg: NAT,
         str_baj: str_lfm$0,
         str_ahl: "str_itd"),
      str_rpz: str_hbl,
      str_jnd: str_hcv$0,
      str_ssb: str_uox)
     'str_cfn)

VARIABLES
  str_kkg

CONCRETE_VARIABLES
  str_ery, str_ztz, str_nlm, str_lbm, str_xvo, str_ist, str_zcz, str_eyf,
  str_nff, str_efy

PROPERTIES
  !(str_sra, str_dsp, str_xta, str_wqk, str_qds, str_yfm, str_igf, str_eqq).
  (!(str_yay).
   (str_lyy <= NAT1 or
    !(str_hws, str_pff, str_nfj, str_ssq).
    ({ str_inr, str_ghy, str_nqr, str_gvd, str_lvl | str_pyt$0 <: str_ioj$0 } <<:
     str_suz$0)) or
   INT <: str_fzy$0)

ABSTRACT_CONSTANTS
  str_rfq, str_gmf, str_wdj, str_dum

CONSTANTS
  str_zhe

SETS
  str_xsr;
   str_jiy = { str_meq, str_hpk, str_okl, str_ykw, str_obc, str_qvf } ;
  str_flt;
  str_lxm;
  str_pdc;
  str_nzi;
  
    str_wue
    =
    {
      str_aqr, str_huq, str_nik, str_nzi, str_rcf, str_cwo, str_dtw, str_wxs,
      str_hxz, str_mwl
    }
  ;
   str_rtc = { str_cym, str_vlk, str_opf, str_laz, str_zmi, str_lqn } 

EXTENDS
  str_ogu (
    (subtree
       (UNION(str_wcw, str_ytn, str_abg, str_wlv, str_sun, str_ojb).
        (str_uqw /: str_dcw|
         str_clq
         ,
         { str_tjg, str_osj, str_htj, str_jar, str_joz, str_hjg, str_pnb,
           str_nbc, str_bjd, str_cou, str_wqf
           |
           not
             (#(str_czn, str_nxg, str_rze, str_zrz, str_hcu, str_abb).
              (str_mpt$0 <: NAT1 => str_knq <= FALSE)) })))
  ),
  str_iui (
    ((father
        ({ str_ozb, str_rqw, str_ukf, str_wmj, str_bzl, str_miu, str_spp,
           str_apb, str_fcn, str_dhi, str_fgy
           |
           [] >= str_aph }
           (rec
              (str_fzk: str_qzt$0,
               str_etv: {},
               str_qxi: {str_upw$0, str_qoy$0},
               str_pwm: str_imf$0,
               str_jtw: NAT,
               str_pmf: str_wrw,
               str_rid: str_utv))))
     ,
     {}'str_ssu),
    (str_bpe'str_ssp -->>
     ({ str_hkv, str_knm, str_ymk, str_erc, str_gcs, str_lcz, str_aen,
        str_tyu, str_yjd, str_xla, str_cnj
        |
        #
          (str_nir, str_ihi, str_vfj, str_yru, str_fle, str_vjm, str_zep,
           str_ouv).
        (str_mmv$0 = str_twj$0) }
        ({ str_own, str_quc, str_rrw, str_zcm, str_vlx, str_myi, str_ntd,
           str_haj, str_oce, str_yfn, str_icv
           |
           !
             (str_pkc, str_gjo, str_xbi, str_bri, str_jkk, str_ttk, str_trp,
              str_jlt, str_kyz, str_msd).
           (2 : str_lzx) })))
  ),
  str_pgm (
    rec
      (str_dro: str_prn$0,
       str_ota: str_zyw$0,
       str_cio: NATURAL1,
       str_lmw:
       rec
         (str_all: str_rme,
          str_rgb: str_hza$0,
          str_gpk: str_zkq,
          str_pgk: TRUE,
          str_pyd: str_idd),
       str_nyr: [str_oey],
       str_bby:
       {{ str_qyp, str_yzo
          |
          !(str_mtb, str_jyy, str_umm, str_frw).(str_yve$0 /= str_dgi$0) }},
       str_gzh: str_itz),
    rec
      (str_cij:
       {(str_ynm
           (struct
              (str_ywq: NATURAL,
               str_ppl: NAT1,
               str_vnk:
               INTER(str_mnt).
               (BOOL < str_fga|
                struct
                  (str_xyq: str_ond'str_hmq,
                   str_qfh: str_lzc,
                   str_oom: str_ilz$0)),
               str_cet: str_sgs)))},
       str_mde: str_xac,
       str_ulp: INT,
       str_rzo: str_fkq$0)
  ),
  str_zjp (
    bool
      (str_uui$0 <= str_jeg or
       bool(!(str_rov, str_wth, str_gbs, str_lce).(str_zzm$0 /: INT)) \/
       [str_dci$0, str_vcs] <=
       str_spm$0),
    PI
      (str_yui, str_clg, str_tqk, str_ebf, str_tvc, str_kuw, str_gvj,
       str_mnu, str_pep).
    (str_nch > str_yim|
     rec(str_oxz: (NAT1 ^ bool(NATURAL /: str_ujj$0)))
     ,
     { str_nsg, str_atn | not(str_oks <= str_elb) }),
    bool
      (STRING /= str_exg =>
       #
         (str_rnd, str_ksa, str_wdq, str_tfw, str_mqz, str_isg, str_whs,
          str_wtd).
       (!
          (str_haz, str_lys, str_kwd, str_tjx, str_qmf, str_dah, str_cha,
           str_aex, str_via, str_egb, str_nwv).
        (str_oen$0 < FALSE) =>
        not(str_ncf$0 /= str_nsr)))
  ),
  str_lxo (
    PI(str_sqc, str_agz, str_yyo, str_ecd, str_kld).
    (#
       (str_pmg, str_lgk, str_duf, str_phw, str_ntv, str_rer, str_ujo,
        str_ztu, str_vau, str_dpi, str_sqp).
     (str_rdf$0 = INT)|
     sizet
       (PI(str_npb, str_nnk, str_yvf, str_snn, str_nnh, str_xqq).
        (str_rzt$0 /<: NATURAL|
         INTER
           (str_vtj, str_ofj, str_mtg, str_ttx, str_idv, str_tbx, str_wjn,
            str_wjp, str_vpl, str_elg).
         (str_bwk$0 /<<: str_puy$0|
          rec
            (str_pio: {},
             str_sbc: str_hmu,
             str_lty: str_nxf$0,
             str_hwx: INT,
             str_boy: NAT,
             str_hhc: NATURAL1))))),
    rec
      (str_aux: str_cuz,
       str_eag: str_kap$0,
       str_pbn: str_ltp$0,
       str_hmi: bool(str_gww <= str_nis$0),
       str_lox: (str_zso$0 |-> str_lry),
       str_rbd:
       ((NATURAL1 >< str_cqk$0)({ str_tuq, str_mov | str_qdi = str_xky$0 })),
       str_wjc: str_uud,
       str_yru:
       struct
         (str_brz: str_yer,
          str_deg: str_jyl$0,
          str_kum: str_lcr,
          str_sap: str_lvb$0,
          str_gpq: {},
          str_aux: str_wuf$0)),
    (last
       ([str_ubc$0,
         NATURAL,
         str_vca,
         (NAT(str_yqj)),
         struct(str_ldr: str_ewx$0, str_vrm: str_mcx$0),
         NATURAL1'str_wcc,
         bool(NATURAL <<: str_egp$0)'str_taq]))
  )

PROMOTES
  str_rmd, str_jfu, str_tht

SEES
  str_oam, str_vas, str_qwv

END 