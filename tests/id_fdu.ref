REFINEMENT
  id_fdu(
    id_pyy, id_aud, id_sao, id_xbv, id_zgp, id_tyk, id_fkf, id_mrf, id_uxa
  )

REFINES
  id_wga

SEES
  id_aha, id_nwz, id_gyd, id_yqc, id_kxa

INCLUDES
  id_iqq (
    {struct
       (id_zsl: str_odg,
        id_pgn: str_gmx$0,
        id_fpc: top(STRING),
        id_usl: (str_iba --> str_vkm$0),
        id_dqr: [],
        id_sjy: bool(not(str_drf$0 <: str_hlc))),
     str_cqg$0,
     NATURAL,
     struct(id_tif: str_pjg),
     str_cqg,
     NATURAL,
     INT}
  )

PROMOTES
  id_uir, id_gil, id_dzy, id_wcz

EXTENDS
  id_xrl (
    (FALSE -
     INTER
       (id_eiz, id_cos, id_zbf, id_vri, id_eda, id_fax, id_dcd, id_fyw,
        id_mvp).
     (not(str_pzh = str_sph)|
      [str_fxo,
       str_njb,
       {bool
          (#
             (id_ltn, id_yza, id_dpb, id_ypz, id_mji, id_xkn, id_cos, id_ksa,
              id_tcu, id_dvp, id_ibe).
           (BOOL < {}))},
       str_jul$0])),
    const
      ((struct
          (id_apn: MAXINT,
           id_sqk: STRING,
           id_ccy: str_gir,
           id_swz: str_kqi$0,
           id_qwa: str_gtw,
           id_vpl: bool(not(NATURAL /<<: str_jwy)),
           id_prq: str_tqb$0,
           id_ggu: str_nyb) ||
        bool(STRING /= str_vxa$0)'id_lui))
  )

SETS
  id_dez;
  
    id_nzh
    =
    { id_owp, id_lag, id_cwk, id_ebd, id_fuv, id_amd, id_ebd, id_zxi }
  ;
   id_qtn = { id_boz, id_ret, id_epa, id_owx, id_wuk, id_har, id_hgc } ;
   id_dge = { id_gkb, id_leg, id_hsn, id_uwd, id_aws } ;
  id_wlq

CONSTANTS
  id_brs, id_hdc, id_axr, id_faq

ABSTRACT_CONSTANTS
  id_vtf

PROPERTIES
  not
    ([] /:
     {str_mes,
      INTER
        (id_ooz, id_mpj, id_zft, id_byo, id_wpq, id_ysg, id_cqt, id_rsg,
         id_wxv, id_elu).
      (str_orh$0 /= "str_ofp"| str_nht$0),
      MAXINT,
      [],
      %(id_mbr, id_zvj, id_axz). (str_mwe <= 271| {}),
      INTER(id_uya, id_pkc, id_vyx, id_ybm).
      (str_icg /: str_qfe$0 <=> str_qpo$0 < str_lpi$0| str_dxx$0),
      str_mxo})

CONCRETE_VARIABLES
  id_uol, id_ruc, id_fdm, id_mjg, id_ilx, id_xsy, id_jdn, id_gcj

VARIABLES
  id_otl

ASSERTIONS
  str_obs >= str_vny$0 =>
  (#(id_fxs, id_lhf, id_uhy, id_dxt, id_uqj, id_puv, id_gss, id_ahy, id_hzb).
   (#(id_rqk).(str_col > NATURAL => str_lmp <: str_inx$0)) or
   #(id_orb, id_ivf, id_zsc, id_jpm, id_dcz).(str_xrb$0 = MININT));
  !
    (id_wsq, id_oxh, id_fqu, id_scn, id_lrz, id_ovi, id_eev, id_hdm, id_lng,
     id_rtx).
  (not
     (#(id_uaa, id_dcy, id_tbv, id_bhq, id_kje).
      (!
         (id_zeg, id_szz, id_izr, id_fls, id_wwh, id_qol, id_jgh, id_ksw,
          id_ksh).
       (not(str_uiz$0 < str_icm or str_snr$0 /= str_hpf) <=>
        "str_bic" > str_fdu))));
  not
    (#(id_ydn).
     (not
        ({ id_ixs, id_tjk | MAXINT : str_prl$0 } <<:
         {%(id_mzu, id_wyf, id_vpj, id_xzn, id_awa).
          (str_xqn$0 /= str_mdo$0| NAT)})));
  NAT <-> str_qqj /<<: str_nte$0 <<| rec(id_ajn: str_fut, id_vru: str_zst$0) or
  not(TRUE <= str_pyr$0 or 864 = {});
  #
    (id_xlm, id_xtp, id_qlp, id_vdj, id_hnl, id_xvo, id_vkb, id_lhm, id_emj,
     id_gdt).
  (#(id_nir).
   (not
      (!
         (id_ybq, id_phb, id_sst, id_kzn, id_kdh, id_evp, id_nte, id_kcq,
          id_efa, id_zff).
       (INT > str_wbb$0 <=>
        ([] /: INTEGER <=>
         #(id_zox, id_eup, id_gbo, id_not, id_mpp, id_gui, id_lpg, id_jok).
         (MAXINT : str_gcw$0))))));
  {str_psg,
   {str_aky},
   POW([str_kwq$0, str_zyf, str_gud$0, str_yvw, NATURAL]),
   str_ymk$0} <=
  str_tpu$0 <-> struct(id_twm: str_cfl, id_lms: str_vws$0);
  ((INTEGER = str_egf => str_aqg$0 = str_jkh$0) => NATURAL <: str_aur) or
  !(id_uxq, id_qpi, id_eyq, id_qom, id_ogm, id_ewr).
  (not
     (#(id_qxr, id_kcu, id_pqn, id_zfs, id_bqn, id_wzx, id_twp, id_mfa).
      (#(id_toa, id_dic, id_ulk, id_qbb, id_apn, id_nbl, id_vif).
       (str_auy >= NAT))));
  #
    (id_brn, id_zyz, id_smg, id_bry, id_jpl, id_xmw, id_xec, id_ciu, id_jkk,
     id_kkr).
  (#(id_bkr, id_zlt).
   (#(id_hdx, id_axb, id_lnb, id_gtc, id_tzf, id_zhk).
    (!(id_pfj, id_ctn, id_fhm).
     (not(not(str_sgx$0 /<: str_spq <=> str_zya$0 < str_msv))))));
  !(id_ixq).
  (not
     (card(str_pkg) <:
      rec
        (id_ikp: {},
         id_ptn: str_unr$0,
         id_svy:
         SIGMA
           (id_lht, id_vao, id_yxi, id_dvm, id_mpq, id_vfg, id_ytr, id_med,
            id_hsl, id_gnh, id_ktt).
         (str_qre < str_fte| str_sak),
         id_kuj: str_tfe,
         id_gzw: str_uyw$0,
         id_srm: bool(INTEGER <: str_shp))))

INITIALISATION
  ASSERT
    #(id_bij, id_yjv, id_wgq, id_ype, id_mcq, id_rme).
    (not
       (!
          (id_bkb, id_uyj, id_wdl, id_xdh, id_orw, id_ozg, id_axv, id_qvt,
           id_lfi, id_kbn).
        (#(id_xby, id_vqs, id_itu, id_bmh, id_amt, id_pfo, id_rcq).
         (str_jpl /= str_ljn)) <=>
        (str_wcq$0 /= str_fdu or str_dqs$0 <= str_ewq$0)))
  THEN
    VAR
      id_rpf, id_zrs, id_jpx, id_goh, id_yzn, id_jiu
    IN
      ASSERT
        not
          (#(id_epz, id_eia, id_zjz).
           (!
              (id_jgi, id_tom, id_xcv, id_uct, id_cjf, id_ajt, id_rrl,
               id_mmh, id_lbw, id_lyg, id_vev).
            (!
               (id_shf, id_jwz, id_gvd, id_dqq, id_ocm, id_ogr, id_ukv,
                id_htm, id_ntx, id_jdk, id_alc).
             (str_kxe$0 /<: str_qlw$0) or
             !(id_ajt, id_qut, id_roo).(not(str_ubo$0 = str_nmk)))))
      THEN
        CHOICE
          CASE
            rec
              (id_wro:
               pred
                 (bool
                    ({ id_svq, id_zzp, id_kqg, id_adj, id_avw, id_snv, id_zdq
                       |
                       BOOL >= str_kde } /<:
                     struct
                       (id_tsl: str_blw,
                        id_vla: str_poi$0,
                        id_ofw: MININT,
                        id_aqx: str_axd$0,
                        id_gdy: str_cal,
                        id_hjz: str_syj)
                       'id_hbr)),
               id_bjy: str_msa$0,
               id_eel: str_ott$0,
               id_xal: MAXINT,
               id_bdm: [],
               id_fvd: BOOL,
               id_lei: INT)
            OF
            EITHER
              {bool(not(str_wbb$0 /: MAXINT)), str_wnk}'id_wkb
                [struct
                   (id_jvf: INT,
                    id_iof: 5,
                    id_zkp: [],
                    id_jkh: str_vrg$0,
                    id_lyk: INT,
                    id_cij: [],
                    id_gbi: str_tnp,
                    id_ygg: (INT \|/ str_gkw))]
            THEN
              ANY
                id_fec, id_kph, id_hdb, id_dki, id_xit
              WHERE
                !
                  (id_pxf, id_kqm, id_kmb, id_bzd, id_cnf, id_fxp, id_mwc,
                   id_xvt).
                (bool
                   (!(id_ide, id_qrj, id_fll, id_cmy).(str_piw$0 /<<: NAT1)) ..
                 MAXINT <=
                 rec
                   (id_mxb:
                    struct
                      (id_igk: MAXINT,
                       id_znl: str_vpj$0,
                       id_vjh: str_dch$0,
                       id_qcl: TRUE,
                       id_bhp: str_ldb$0),
                    id_nfl: str_yoc$0))
              THEN
                id_fvz, id_cjf, id_qdn, id_eye, id_mim, id_dud, id_xsj,
                id_vwf, id_tvi, id_adq, id_xip :(
                  str_shc <
                  bool
                    (#(id_fqn, id_ven, id_gvi).
                     (not
                        (!
                           (id_jzz, id_yjz, id_gou, id_msd, id_kke, id_fis,
                            id_abk, id_bdw, id_znu, id_tea).
                         (str_jrh$0 /<<: {BOOL}))))
                ) ;
                id_gun, id_mah, id_phk, id_wrb, id_eow, id_nky, id_uup
                ::
                {bool(FALSE /<: str_buj),
                 str_vsd$0,
                 bool
                   (!
                      (id_wsk, id_loj, id_foh, id_kmt, id_jic, id_crb,
                       id_kst, id_sbg, id_vai).
                    ({ id_gyi, id_rzk, id_jim, id_hnd | str_ijr$0 /<<: INT } >
                     MININT))}
              END
            OR
              top
                (struct
                   (id_fbf: str_pyq$0,
                    id_fij:
                    struct
                      (id_hkm: str_wjq$0,
                       id_srp: str_lru,
                       id_olu: str_ziw$0,
                       id_pvn:
                       struct
                         (id_zxp: str_wfn$0,
                          id_oio: str_fpn$0,
                          id_xzo: STRING,
                          id_wcb: NATURAL,
                          id_xss: str_igi),
                       id_ctl: str_wuo$0,
                       id_kji: {NATURAL, NAT},
                       id_iqx: NAT),
                    id_wpj:
                    { id_fad | str_ohb <= str_zqa$0 & str_ckc <: NAT }))
            THEN
              id_crs
              :=
              {str_tqc$0,
               NATURAL1,
               str_klq,
               {str_dta, bool(str_rfd$0 : FALSE), NAT, {NATURAL1}, BOOL},
               { id_cvh, id_hnh, id_pus, id_tcy, id_bsc, id_vhp, id_axr,
                 id_qfx, id_chw
                 |
                 #
                   (id_lef, id_rsd, id_yxq, id_cpz, id_ckb, id_fec, id_tdn,
                    id_hfg).
                 (str_nuh$0 /= NATURAL => str_xls /= TRUE) }}
            END
          END
        OR
          id_scr, id_cxn, id_qmj, id_chl, id_uyd, id_bdn, id_ycq
          <--
          id_stb
            ({ id_bcn, id_rxk, id_rvm, id_mbc, id_fhm, id_fqn, id_wye
               |
               str_ubi$0 : NATURAL =>
               (#(id_hae, id_cki, id_zey).
                (#
                   (id_eak, id_cgd, id_klz, id_iic, id_zxe, id_pfa, id_kaf,
                    id_rkc).
                 (str_hgl$0 /: str_afw$0)) or
                (str_vnb /= INT & str_jxz /: str_nld$0)) },
             { id_esv, id_beq
               |
               !
                 (id_det, id_doh, id_nnw, id_udw, id_knb, id_gsh, id_oxo,
                  id_yku, id_juq, id_itz, id_lqk).
               (!(id_yym).
                ([FALSE, str_byd$0, str_iim, NAT1, TRUE, []] >=
                 bool(str_jmy >= str_kub))) &
               str_uon$0 /<: str_qdo$0 },
             rec
               (id_hxe:
                bool
                  (!(id_aoe, id_kdi, id_kez, id_kgx, id_skt, id_wgd, id_sfz).
                   (MAXINT <<: NAT1)),
                id_jrx: POW({ id_pok | not(str_nfy <: STRING & FALSE < []) }),
                id_caa: str_vkp),
             [NATURAL,
              [rec
                 (id_ekh: NAT,
                  id_lrr: str_zdz$0,
                  id_ovo: str_hha,
                  id_ixd: 386,
                  id_vso: BOOL),
               str_ndq$0,
               { id_mkd, id_ovs, id_shx, id_cyz, id_sui, id_ovo
                 |
                 MAXINT /: str_nvm$0 & str_xge$0 = str_bul$0 }],
              TRUE,
              [],
              str_oju$0,
              {NAT, str_chy$0, NAT, str_yjz, str_bcx, MININT, NAT1, str_mmi},
              MAXINT]
               'id_nmu)
        END
      END
    END
  END

OPERATIONS
  id_kxh, id_lmi, id_nct <-- id_tcm =
  VAR
    id_bfo, id_cri, id_thf, id_jzc, id_mkd, id_ctq, id_sdl
  IN
    IF
      (!(id_tkk, id_kwt, id_xjh, id_rsq).(str_lhr$0 >= str_kys) =>
       NATURAL1 /= str_kvc$0) &
      postfix
        (struct
           (id_iaw: str_jxv$0,
            id_jnd: str_uye,
            id_znv: str_yyn,
            id_fyh: str_kcv,
            id_qur: str_rad,
            id_cew: str_kfl,
            id_zka: INTEGER,
            id_wla: str_qbw$0)) <=
      str_wbu
    THEN
      id_qsw, id_qwz, id_hfm
      :=
      ((str_glt \/ INT) +-> {}) <|
      struct
        (id_eiq: {str_bpi$0, str_uag, [], str_wlm$0, 54},
         id_jqz: rank(str_lza),
         id_fdj: str_zwp$0,
         id_zdq: str_cym)
        'id_iav
    ELSIF
      #(id_jcy, id_ric, id_dmu).
      (!(id_wcj, id_zdi, id_gyc, id_ugp, id_kvt, id_vwo, id_sfe).
       ({} <
        [1,
         bool
           (#
              (id_pun, id_wtz, id_tmq, id_dro, id_hjn, id_jtd, id_ghc,
               id_nkl, id_cxb, id_ytz).
            (str_pvm$0 >= str_urs) &
            str_iun$0 /: [])]))
    THEN
      IF
        not
          (str_iix /: str_diw$0 &
           { id_cjz, id_wci, id_qnh, id_jdj, id_lff, id_das, id_khf
             |
             not(str_vpv$0 <: bool(str_sug$0 /<<: str_ymk)) } /=
           str_sku)
      THEN
        ASSERT
          not
            (!(id_ihi, id_bpl).
             (not
                (not
                   (not
                      (#(id_ffx, id_azv, id_vfb, id_nys, id_yxh).
                       (not(str_ewf$0 >= BOOL)))))))
        THEN
          ASSERT
            not
              (not
                 (bool(#(id_aec).(str_vkq$0 : str_gbp$0)) /<<:
                  [SIGMA(id_mnq, id_fjd, id_hrq, id_hhn, id_oan).
                   (INTEGER /= MAXINT| str_eeq)]))
          THEN
            id_apt 
              (
                struct
                  (id_iya:
                   struct
                     (id_sod:
                      rank
                        ([str_yly$0,
                          str_rpa$0,
                          str_lgc$0,
                          NAT1,
                          {str_mll, str_psn$0, str_itg$0, str_wic$0},
                          str_plj,
                          NAT1,
                          str_ljz])),
                   id_qln: str_azt,
                   id_whf:
                   {str_lip,
                    str_gee$0,
                    449,
                    NAT1,
                    struct(id_mjx: str_rdi$0),
                    str_gze$0},
                   id_szc: 34)
              )
              (
                {str_fgr$0,
                 %
                   (id_yel, id_txn, id_adw, id_uks, id_evm, id_ane, id_ytt,
                    id_vcy, id_muj, id_ufq).
                 (str_jpq$0 > str_uxp$0| 2),
                 rec
                   (id_frm:
                    bool(not(BOOL > str_qyv$0 or INTEGER = str_ghh$0)),
                    id_tfc: str_gfx,
                    id_zan:
                    [INTEGER, "str_jfk", NAT1, str_vct$0, str_yzj, str_bcw])}
              )
              (
                [{ id_igd
                   |
                   !
                     (id_tik, id_zzq, id_tam, id_lmg, id_pnt, id_der, id_bge,
                      id_xnc, id_aqz).
                   (#
                      (id_fjl, id_mrs, id_tsi, id_alg, id_pdy, id_sid,
                       id_gme, id_yya, id_pdx).
                    (#(id_vdy, id_uso, id_aco, id_man, id_tbg, id_oka).
                     (#(id_uez, id_ade, id_lfq, id_zng).(3 /<<: str_efa$0)))) }
                   'id_ylo]
              )
            
            :=
            struct
              (id_wav:
               rec
                 (id_xbk:
                  rec
                    (id_pwo: INTEGER,
                     id_yzo: str_dpt$0,
                     id_oty: {str_olp$0},
                     id_cep: str_vll),
                  id_xhm: str_jia$0,
                  id_vtl: str_tyq$0,
                  id_yye: str_lue),
               id_scs:
               ({str_igb$0, str_aud$0, 30, str_qxm, str_owh, str_sry, str_mcq} >->
                str_kda$0),
               id_fpm: {str_adj$0, "str_sru", NATURAL1, str_bvr, str_bsv$0})
          END
        END
      ELSIF
        #(id_rtj).
        (#(id_vxg).
         (PI
            (id_vyw, id_grm, id_kss, id_nrg, id_adw, id_gag, id_rna, id_jje,
             id_jnw, id_kqi).
          (str_uas <<: str_zor$0|
           SIGMA(id_xmf, id_fes, id_ier).
           (!(id_qxb, id_qxt, id_esz, id_qhp, id_xqm).(NAT1 <= str_xuo$0)|
            str_cpm'id_xvo)) /<:
          str_gix$0))
      THEN
        id_uso, id_rpg, id_klf, id_hti, id_gze, id_pen, id_djk, id_iak
        ::
        bool
          (#(id_aad, id_hmn, id_tob, id_srl, id_hvk, id_epr, id_ocx).
           (not
              (!(id_fxu, id_gye, id_syl, id_qqo, id_zlj).
               (!(id_rps).
                (#(id_gcg, id_xao, id_zbk, id_pki, id_grm).
                 (!(id_gmw, id_khs).(str_wiv$0 /<<: str_bpl$0))))))) ||
        IF
          str_ugb$0 /<<: NAT1 or
          !
            (id_bdh, id_ssv, id_zif, id_tlz, id_vjb, id_dgw, id_pvu, id_tyh,
             id_mqz, id_jro, id_niw).
          (#(id_hkz, id_ryz, id_hkn, id_bfp).
           (str_ttk$0 =
            { id_mxz, id_rjs, id_bym, id_dwu, id_twz, id_otw, id_ott, id_tij,
              id_olr, id_for
              |
              !(id_xpj, id_mpi, id_bev, id_shw).(str_fxp$0 <= str_dlm$0) }))
        THEN
          id_olh, id_ivc, id_cuy, id_mrf, id_aie, id_tvs, id_gck, id_vlg
          ::
          %(id_zzr, id_wzl, id_brs, id_vxw, id_uuu, id_hck).
          (not(str_tfv <<: 4 or str_dyz <: str_jdw$0) => str_spl <<: []|
           [[INTEGER], str_pjk$0]'id_ijj)
        ELSIF
          #(id_idv, id_xhe, id_poj, id_mto, id_jka, id_nmd, id_oeh).
          (not
             (str_ivq$0 /= str_ghb =>
              (not(!(id_chz).(INT /: str_vuj => str_woc$0 /= str_zmu)) &
               str_nst$0 /: str_ifu)))
        THEN
          id_mph, id_cqv, id_hki, id_hae, id_ntr, id_vsl, id_qdw
          :=
          { id_khz, id_nzp, id_mel, id_tpn, id_ofo, id_igk, id_qbo, id_got,
            id_uwh
            |
            #(id_avc, id_xor, id_dfh).
            (!(id_zxl, id_ixb).
             ({147,
               str_exx,
               MAXINT,
               str_mbg,
               FALSE,
               PI(id_ssi, id_xle, id_wfz, id_rum, id_wwk, id_mpp, id_rou).
               (INTEGER < str_hyg$0| str_qjh),
               str_uol'id_pgq,
               str_kss$0} <=
              INT)) }
        ELSIF
          not
            (!(id_uwz, id_dko, id_gtj, id_wkd, id_tal, id_ysv).
             (!(id_yhd, id_jzi, id_ytl, id_kjr, id_thr, id_gll).
              (str_cfi /= str_jqg <=>
               #
                 (id_pvv, id_njx, id_ruu, id_gpl, id_cut, id_jto, id_wug,
                  id_hgs).
               (not(not(str_tsx < str_fdh))))))
        THEN
          id_zum 
            (
              { id_qnd, id_nqn
                |
                #
                  (id_qbb, id_xyn, id_ugu, id_dwn, id_ljm, id_fsl, id_uze,
                   id_bct, id_jih, id_zki, id_hah).
                (!
                   (id_afa, id_wqo, id_gsd, id_edu, id_qsz, id_dak, id_qtq,
                    id_yut).
                 (not
                    (str_bmo > "str_dfg" <=>
                     !(id_sdc).(str_rwn /= str_orj or str_zjr$0 /: 689)))) }
            )
            (
              bool
                (not
                   (not
                      (!
                         (id_ixf, id_utp, id_exw, id_bst, id_ypa, id_xyt,
                          id_qlu, id_adh, id_wnx, id_nlg, id_xvu).
                       (not
                          (#
                             (id_pul, id_hhw, id_mrg, id_vmu, id_mii, id_apz,
                              id_pbc, id_wru, id_odo, id_vxt).
                           (!
                              (id_aay, id_xju, id_cmh, id_diw, id_xqx,
                               id_ikx, id_yhg).
                            (str_zmf$0 /<: str_hrw)))))))
            )
          
          :=
          { id_gfu
            |
            str_qsw /<:
            {str_rth$0,
             { id_yaa, id_vpw, id_ogg, id_iin
               |
               !(id_uua, id_tkx, id_der, id_xox, id_ref, id_fyh).
               (str_mze$0 <= "str_hbo") },
             [[], bool(MAXINT /<<: str_pva$0), str_xtw, str_php$0],
             str_zcn$0,
             str_skw$0} }
        ELSIF
          rec
            (id_csy:
             struct
               (id_ixj:
                rec
                  (id_fwg: str_yla,
                   id_hsq: str_dxu,
                   id_clj: str_hbg,
                   id_jnk: (NATURAL1 \/ 34),
                   id_ggt: str_wiq,
                   id_eth: str_uyv,
                   id_lrd: NAT,
                   id_tpa: str_ftf),
                id_qaf: str_nhz,
                id_fnu: INTEGER,
                id_hgu: str_esh,
                id_uvp: str_tmv$0,
                id_mkp: INT,
                id_ggh: str_mwt$0,
                id_bxc: str_mnx),
             id_iuj: str_jyr$0,
             id_vub: 13,
             id_ema:
             left
               (struct
                  (id_ntv: str_xul$0,
                   id_tok: NATURAL1,
                   id_pod: str_pvn,
                   id_dzr: str_tbc$0))) <
          str_cmb$0
        THEN
          id_nol, id_xft, id_xdp, id_ocy, id_giy, id_izg, id_dzg, id_ikj :(
            #(id_wnr, id_vmt, id_guz, id_vyr).
            ({} <= str_tcn$0 & str_zbj$0 >= str_tvp$0) &
            not(bool(FALSE < STRING) /: fnc(str_eic$0))
          )
        ELSIF
          #(id_zaw, id_wpu, id_xtx, id_dhd, id_qhi).
          (bool
             (!(id_xwr, id_qeq, id_oci, id_oqf, id_hhn).(str_pqu /= INTEGER)) /<:
           [str_zru$0,
            { id_ols, id_tss | INT /<<: MAXINT },
            str_tzt$0,
            str_pgo$0,
            str_oqz$0,
            { id_gro, id_ton, id_jkn, id_vsx, id_swf | TRUE /= str_gvh$0 }])
        THEN
          id_qgv 
            (
              { id_snc, id_vfi, id_yrn, id_psf
                |
                #
                  (id_jhf, id_qux, id_inl, id_sbp, id_dnf, id_abf, id_wlf,
                   id_mck, id_gab, id_bef, id_uar).
                (!
                   (id_ahi, id_anv, id_bbu, id_vfr, id_bqh, id_uvj, id_wck,
                    id_uzy).
                 (not
                    (#(id_eck, id_pek, id_gof, id_ttq, id_jii).
                     (#(id_tfi, id_hux, id_eph, id_zum, id_tnh, id_rqi).
                      (NATURAL1 <: str_qbd$0 <=> str_rgh > BOOL))))) }
            )
            (
              bool
                (NAT > str_emg$0 <=>
                 ((INT >= MININT or str_lko$0 /= str_emi) &
                  !
                    (id_gqs, id_oux, id_shp, id_ytp, id_xdu, id_ryx, id_wwf,
                     id_zfd, id_vst).
                  (str_ogf$0 <= NATURAL1 or "str_xyu" = 1)))
            )
            (
              sons
                ([86,
                  INT,
                  [0,
                   TRUE,
                   {{ id_osc, id_lzo | str_bej /: str_yoz$0 },
                    INTEGER,
                    UNION
                      (id_rhw, id_hrj, id_uzm, id_wgn, id_luy, id_vid,
                       id_exd, id_uku).
                    (TRUE = str_bpw|
                     struct
                       (id_rza: str_woj$0,
                        id_tto: BOOL,
                        id_rob: str_bfv,
                        id_tol: str_txz$0,
                        id_avv: str_tqw,
                        id_bcd: STRING,
                        id_yko: str_qce,
                        id_pdw: str_crr$0))},
                   str_ram$0],
                  str_uez$0])
            )
            (
              SIGMA(id_srt, id_hou, id_qbg, id_mrn, id_uhw).
              (not
                 (MININT /<:
                  rec
                    (id_qcf: str_mdf,
                     id_kbo: str_cdi,
                     id_tmz: str_lpr$0,
                     id_bty: str_vwg,
                     id_jky: NATURAL1,
                     id_nyo: str_ypd$0))|
               {str_mfp,
                str_mhc$0,
                str_cwp$0,
                str_ehb,
                str_nub$0,
                str_cfy$0,
                [str_fgw],
                str_prs})
                'id_zih
            )
            (
              [[str_gzc,
                str_udv,
                FALSE,
                (STRING .. str_dmo),
                str_ihs$0,
                str_rpa,
                STRING],
               rec
                 (id_qms: bool(str_jjf <: str_yzg$0),
                  id_rjo: str_isj,
                  id_muk: MININT,
                  id_mja: str_zti$0,
                  id_jru: str_rmz,
                  id_bdt: str_gpb$0),
               NATURAL1,
               bool({} <<: BOOL),
               str_sms,
               struct(id_vqj: str_rto, id_csl: str_txw$0),
               20]
            )
            (
              [rec
                 (id_qpm: str_kbd$0,
                  id_tot: NATURAL,
                  id_vnb:
                  [str_vzz, INTEGER, str_bvh, "str_vel", NATURAL, str_nrw,
                   INTEGER],
                  id_jex: str_zje$0,
                  id_gtp: str_eds,
                  id_qlw: str_btn),
               "str_cfj",
               str_ath$0,
               {str_fdt$0,
                str_ujn,
                str_wqq$0,
                (str_lfb ><
                 { id_sob, id_wck, id_izm, id_bhd, id_dqo, id_vnx, id_piy,
                   id_owr, id_kkl, id_kyz, id_xfa
                   |
                   !(id_jms, id_inc).(FALSE = MININT) }),
                MININT,
                str_uab$0}]
            )
          
          :=
          struct(id_qoe: INTEGER, id_okz: {str_fwn, str_qif$0}) +
          struct(id_vqd: FIN([bool(str_ayw$0 <= MAXINT)]))
        ELSIF
          prj2
            (NATURAL1,
             bin
               ({ id_qzs, id_ywe, id_ucm, id_bjl, id_jod, id_rxh, id_cha
                  |
                  INT /: str_fnw }))
            'id_yzl =
          prj2
            (str_evy$0,
             rec
               (id_yjy: str_qzy,
                id_jld: MININT,
                id_nyn: MININT,
                id_bgj: MININT))
        THEN
          id_vwm, id_fzn, id_bxl, id_yho, id_oep, id_svd, id_yfz
          ::
          rec
            (id_czy: (str_duy$0 +->> str_ane$0),
             id_krg: TRUE,
             id_hmz:
             {MININT,
              str_wrl,
              INT,
              BOOL'id_ojt,
              str_qzp,
              str_oab$0,
              {},
              str_elv$0},
             id_ipw: str_tkx$0,
             id_kjn:
             SIGMA(id_xvf, id_bni, id_zmj, id_xol).
             (#(id_wjw).(FALSE /<<: str_hke$0)| str_hru)
               'id_uit,
             id_zku: str_rqu$0,
             id_nln: {})
        ELSIF
          not(not(#(id_mzz).(str_pju$0 <= str_rzn & str_tlp /<: str_rqn$0))) &
          !
            (id_knf, id_igu, id_hdn, id_ubt, id_cnx, id_ttk, id_wkc, id_usi,
             id_cew, id_psm, id_vqa).
          (not(STRING >= str_fns$0))
        THEN
          skip
        ELSE
          skip
        END
      ELSIF
        not
          (#(id_vuf).
           (str_nyd < str_dzl or str_ami$0 >= left(right(NAT) + NAT)))
      THEN
        id_zef, id_pgz, id_mta, id_cli, id_stj, id_ntz, id_cvd :(
          #(id_hph, id_krv, id_dkw, id_uwk, id_das, id_kbm, id_kdt).
          (not
             (bool(not(MAXINT <: str_rwv)) <:
              {STRING, BOOL, STRING, str_ifd$0, INTEGER, INTEGER}))
        )
      END
    ELSIF
      not
        (#
           (id_jon, id_eos, id_gtc, id_xoq, id_ppr, id_xsm, id_yxu, id_kju,
            id_xku, id_wlt, id_pnq).
         (bool([] : str_uhy$0) <<:
          const
            ({INT, {STRING, str_aoa, NATURAL, str_vlj}, str_zby$0, str_tps$0})))
    THEN
      skip
    ELSIF
      #
        (id_fyg, id_jgm, id_zmk, id_rrr, id_qeo, id_chu, id_wpj, id_gbe,
         id_vre, id_kap).
      (bool(STRING > MAXINT) /:
       rec
         (id_zxq: str_wxw$0,
          id_hpi: str_yub,
          id_wpi: MAXINT,
          id_zdk:
          struct
            (id_eit: str_nbk$0,
             id_yqt: TRUE,
             id_ahh: str_nee,
             id_cmv: str_utv$0,
             id_ziy: MININT,
             id_cwh: str_vsi),
          id_zqu: str_bpq,
          id_mqn: str_kwm) <=>
       !(id_ugs, id_azu, id_tkz).(str_cvn /= str_kti$0))
    THEN
      id_kkp
        ({ id_dcn, id_lmv, id_feb, id_nvk, id_enj, id_kko, id_ypj
           |
           !(id_vmp, id_odc, id_jua, id_naz, id_znr, id_nxz, id_nmc, id_ekm).
           (#(id_gpu, id_twg, id_kmk, id_ynp, id_fve, id_hzo, id_igs).
            (!(id_glc, id_zub, id_tss).
             ({{}, str_qco$0, str_baa$0, str_rpy$0, [NAT1, str_mky$0]} <<:
              MAXINT))) },
         { id_dac, id_jig, id_hfz, id_idj, id_huz, id_egw, id_bud, id_kzj,
           id_uwu
           |
           {str_atb, 89, STRING, MAXINT, str_anq, str_bmr$0} >
           {NATURAL1,
            father(str_rzq),
            struct(id_xjm: NATURAL, id_tft: str_fok),
            front(str_kww$0)} },
         (bool(not(str_cbm$0 >= str_atz) & str_yrg$0 <= str_vic$0) |->
          bool(BOOL /<: str_aot => str_ogn <<: str_ayg))
           'id_lgh,
         rec
           (id_nyr:
            bool
              (!(id_msq, id_wic).(str_kuh /<: str_mvb$0) or
               not
                 ((str_qvk >= str_oqc$0 & INT <= str_ofp$0) =>
                  str_kqm /<<: str_vly))),
         %(id_snl, id_szi, id_rwm, id_xiw, id_eah, id_jju).
         (not(str_ffu$0 = str_lmk)|
          {MAXINT,
           str_tfx$0,
           sons(UNION(id_hsw, id_lmn). (str_wuq <: TRUE| TRUE)),
           infix
             (INTER(id_hgg, id_zxu, id_tuk, id_yrs, id_gpa).
              (FALSE /<: MAXINT| INTEGER)),
           str_zeb}),
         (bool
            ({ id_edq, id_lhs, id_fuz, id_sus
               |
               !(id_bei, id_gjs, id_vhf, id_cvz).(INTEGER /= str_hav$0) } /<:
             seq1(str_kpe$0)) >->
          rec
            (id_chd: str_mny,
             id_jbx: NAT1,
             id_gpt: str_fkv$0,
             id_oae: str_xys$0,
             id_yxf: str_etp$0)),
         struct
           (id_zce:
            { id_knc, id_kol, id_gxp, id_pyk, id_utp
              |
              !(id_rax).
              (!(id_vvb).
               (!
                  (id_mfe, id_mwd, id_odp, id_dlg, id_enp, id_fpj, id_eyd,
                   id_rgq, id_zaw).
                (INT <<: str_rwf))) },
            id_eef: {str_rso$0, str_hok$0, str_uqz, str_nys},
            id_njp: str_cca,
            id_vuj: bool(NATURAL >= NATURAL1)),
         struct
           (id_gyk: INTER(id_api, id_pni). (str_jzo$0 = []| str_jco$0),
            id_nwt:
            id
              (prj2
                 (NATURAL1[str_pvw],
                  {TRUE, str_yen, TRUE, str_wuj, str_xkv$0})),
            id_ahp: str_chf,
            id_roz:
            INTER
              (id_cqu, id_kgo, id_wxf, id_jli, id_iqb, id_pdg, id_rfs, id_gez).
            (NAT /<: {}| str_ayw),
            id_nxw: str_sxe$0))
    ELSIF
      [str_zhx$0] <<:
      [str_put$0,
       {str_bes$0,
        { id_ejb, id_veo, id_bkf, id_nns, id_alq, id_wxb, id_gpx, id_nrs,
          id_qub, id_obk
          |
          str_zqc$0 /=
          { id_hci, id_kgk, id_ttj, id_wxd, id_jkm, id_arh, id_ask, id_oar,
            id_flc, id_cch, id_fwz
            |
            str_vjx$0 <<: str_smp$0 } },
        str_jov$0},
       str_rpa$0,
       str_uzr]
    THEN
      id_tnr, id_rcu, id_nvm
      :=
      ({ id_hxv, id_wtz | INTEGER <: BOOL } ** str_zhb$0) <->
      (UNION
         (id_psl, id_dho, id_sox, id_myi, id_hss, id_ihn, id_kzp, id_pmh,
          id_epl, id_hfs, id_flc).
       (str_cwj : str_omc$0| str_ccv$0) ;
       { id_zjd, id_mgb, id_ilj, id_vvz | 20 = str_zpn => str_mbx$0 = str_bda })
    ELSE
      skip
    END
  END

END 
