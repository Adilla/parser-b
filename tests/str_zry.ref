REFINEMENT
  str_zry( str_dxb, str_ofa )

REFINES
  str_tiv

OPERATIONS
  str_alc, str_auz, str_nxp, str_xyd, str_ibp, str_vxv, str_xbz, str_tvk
  <--
  str_rfj (str_ucc, str_wdk, str_leg, str_hzw, str_uta, str_gmn)
  =
  ANY
    str_uvf, str_ubs, str_zzw
  WHERE
    #(str_dck, str_ido).
    ({rec(str_gfk: str_gln$0, str_hjo: [])} >
     struct
       (str_xef: str_xqe,
        str_pvz: STRING,
        str_ymy: (str_csx$0(NAT1)),
        str_dxt: NATURAL,
        str_uxo: str_iga$0,
        str_ius: {str_aoj$0, str_mih$0, str_dyc$0, MININT, str_ezx$0},
        str_zqo: FALSE))
  THEN
    SELECT
      #(str_pqm, str_thf, str_odk, str_drb).
      (not
         (!
            (str_lqk, str_kie, str_wqc, str_pgg, str_umw, str_rsd, str_glx,
             str_naa, str_ttc, str_xos).
          ({ str_dxq
             |
             #
               (str_qan, str_onj, str_zxz, str_xfv, str_uym, str_qaa,
                str_qtt, str_hjk, str_phi, str_rlq, str_igc).
             (TRUE /<: str_pik) } >
           NAT1)) or
       str_rtv$0 <: str_ong)
    THEN
      ANY
        str_cds, str_zsk, str_pfx, str_pyc, str_lue, str_zyx
      WHERE
        str_btk$0 |-> str_ehc <:
        bool
          (#(str_nxg, str_sax, str_ctq, str_rtl, str_cum).
           (str_qxg$0 /=
            { str_cho, str_eew, str_ybi, str_ubr, str_qpt, str_blo, str_qxh,
              str_paa
              |
              not(NAT1 >= str_gor$0) }))
      THEN
        IF
          #(str_fzx, str_loy, str_gri).
          (#
             (str_czk, str_ayl, str_jtn, str_eon, str_bgh, str_jze, str_akf,
              str_qzw, str_pbj, str_gwp, str_swt).
           (not
              (!(str_aav, str_arq, str_rfk, str_qdy).
               (!(str_uxu).([] <: TRUE |> str_mae$0)))))
        THEN
          IF
            #
              (str_xhn, str_hdw, str_sqm, str_vnz, str_tob, str_bqv, str_wrz,
               str_qvl, str_aoc, str_czo, str_oxf).
            (#
               (str_jmp, str_knh, str_psf, str_sap, str_zjb, str_uck,
                str_rhh, str_wby, str_uuy, str_yrd, str_bis).
             (#(str_oub, str_gzq, str_gjn, str_ltw, str_fid).
              (!(str_ggt, str_lde, str_hkt, str_cmj, str_kma, str_tnp).
               (UNION(str_ucy, str_dvx, str_wfd, str_rhl).
                ({} /: str_ciy| str_oef$0) >=
                str_jwk(str_ynl$0)))))
          THEN
            str_wsa, str_rat, str_rpg, str_dbd, str_soq, str_bby
            ::
            {str_dnh$0}
            |->
            [(TRUE(str_uyz)),
             {str_vmh},
             str_vzw$0,
             INT,
             str_mwl,
             str_wjx,
             str_pdw$0,
             (first
                (PI
                   (str_qyu, str_ryi, str_niu, str_zdr, str_gzf, str_hhy,
                    str_odp, str_vjb).
                 (str_ocv$0 < str_pza$0| str_qtf$0)))]
          ELSIF
            #(str_bar, str_qqi, str_lfy, str_btq, str_efe, str_osx).
            (!(str_mpc).
             (str_hxo$0 =
              bool
                (not
                   (#
                      (str_bce, str_xor, str_nqb, str_iel, str_veh, str_vuq,
                       str_adt).
                    (str_erj$0 > str_wzx$0)))
              ,
              MAXINT))
          THEN
            str_rmi, str_rge, str_vvr, str_ovd, str_bee, str_eky, str_dam :(
              rec
                (str_lah: str_xhm$0,
                 str_iyd: str_xzx$0,
                 str_xso: str_bmv$0,
                 str_inr: (str_qcf >-> str_btl$0),
                 str_quc: bool(NATURAL : str_ujy))
                'str_otg <:
              [](bool(str_uls$0 >= str_plh$0))
            )
          ELSIF
            #(str_odx, str_zcd, str_iwq, str_lyo, str_dpc).
            (#
               (str_ypf, str_roj, str_pgf, str_xmo, str_cud, str_nqm,
                str_tma, str_uhj, str_myp).
             (NAT1 /<: {str_cyg$0, str_dlj} & not(str_idk$0 < NATURAL)))
          THEN
            str_lnk, str_giv, str_bqo, str_zrx, str_qlc, str_gyu, str_pud,
            str_uyh, str_clb
            <--
            str_gsn
              ({ str_bvy, str_ihz, str_omm, str_dah, str_csq, str_ofl,
                 str_boe, str_pou, str_xgq, str_fff, str_eys
                 |
                 str_vud /<:
                 { str_jzb, str_wtq, str_nvf, str_ptq, str_ths, str_ohs,
                   str_vgv, str_paj, str_rvh
                   |
                   #(str_lvx, str_gdc, str_acn, str_lkp, str_buu).
                   (str_wqj /<<:
                    struct
                      (str_nrc: str_ean$0,
                       str_xzj: str_jqk,
                       str_hea: MAXINT,
                       str_drp: str_kje$0,
                       str_haj: str_xqs$0,
                       str_cuy: str_kdq$0,
                       str_zvb: str_nrn,
                       str_vmr: str_dwm)) } }
                 'str_zst,
               { str_xeb, str_mmv, str_qud, str_xyv, str_pjg
                 |
                 !
                   (str_tdg, str_kkf, str_zxd, str_ysb, str_nad, str_jrz,
                    str_jgr).
                 (#(str_jme, str_dbv, str_qzc, str_fwr, str_iae, str_dhd).
                  (#
                     (str_oss, str_vur, str_hyn, str_qvy, str_hrh, str_rff,
                      str_jqf, str_jhz, str_erp, str_fks).
                   (PI
                      (str_pfm, str_nab, str_xtg, str_gup, str_dua, str_qqh,
                       str_wqg, str_fza).
                    (str_ffo <= BOOL| NATURAL1) =
                    [30, str_yut$0, str_ave, str_krd, str_ibm, str_ucj,
                     NATURAL, str_iin$0]))) },
               struct
                 (str_qsl: [str_rcx$0, str_trb$0, str_tvg$0, INT, str_fcp$0],
                  str_qdc: STRING,
                  str_uzs: str_mca,
                  str_uyb: STRING,
                  str_tfk: str_qjx$0,
                  str_vtc:
                  (str_vxz$0
                   |->
                   { str_oxa, str_qev, str_ymm, str_qso, str_flz
                     |
                     card(NATURAL1) /=
                     { str_jvt, str_tlc, str_vcb, str_qjj, str_qdy, str_wvj,
                       str_elc, str_qjr
                       |
                       BOOL /: [] } }),
                  str_wvy: str_lse,
                  str_jxr: str_xst))
          ELSIF
            [NATURAL, str_poz, {}, str_yuc$0, BOOL, [], str_xht$0] <:
            INTER(str_bmi, str_pko, str_aix, str_sfj, str_rtb, str_ayl).
            (FALSE /= INT * (btree(str_ivi$0))| bool(NATURAL <: NATURAL))
          THEN
            str_tff, str_upe, str_lbn, str_ygz, str_vyc, str_qpi
            ::
            %(str_wcc, str_zpa, str_uvs, str_qpx, str_dgp).
            (#
               (str_vdd, str_rqf, str_pxi, str_noi, str_ffz, str_arr,
                str_lgf, str_tae, str_aar, str_dnq).
             (#
                (str_hdd, str_fge, str_emd, str_yvl, str_ahz, str_fbw,
                 str_xmr, str_aeb, str_wlq, str_ouh, str_xag).
              (!
                 (str_qgc, str_nvo, str_xzs, str_yxr, str_gwr, str_fbg,
                  str_pxl).
               (!
                  (str_ibm, str_cqj, str_epg, str_zxv, str_xmj, str_eod,
                   str_ojb, str_fzv, str_wpy, str_wuf, str_iyj).
                (str_wwp <: str_bkq))))|
             { str_brb, str_ogd
               |
               #(str_gmn, str_jha, str_cqh, str_ppu, str_ioc, str_uko).
               (INT <= str_jkb$0) })
          ELSIF
            !
              (str_tsm, str_crp, str_czq, str_zyi, str_qcp, str_dic, str_ykm,
               str_aim, str_ctu, str_gsj, str_sfd).
            (not
               (rec
                  (str_awn: MAXINT,
                   str_gok: str_rmm$0,
                   str_qtv: bool(str_zwq = str_gky & NAT /: INT),
                   str_lrx: str_wid,
                   str_lrw: NATURAL,
                   str_lwi: (tree(str_obk$0)),
                   str_fwd: NATURAL1) /<:
                str_rio$0))
          THEN
            skip
          ELSIF
            (!(str_fsk, str_yuo, str_yno).(str_xjl$0 <<: str_umo) or
             #(str_irz, str_sph, str_ykt, str_dzf).
             (#
                (str_rag, str_qub, str_hni, str_suj, str_fth, str_icx,
                 str_jze, str_rtj, str_rxk, str_feo).
              (str_mxh$0 = str_hof))) &
            str_xdh$0 -> str_zob = MAXINT
          THEN
            str_bie, str_fwo, str_bpd, str_jwv, str_phy, str_csa :(
              !
                (str_djc, str_nhr, str_pkt, str_zfh, str_uey, str_vda,
                 str_lmr, str_gwy, str_gls).
              (!
                 (str_vic, str_gln, str_sjg, str_mht, str_wmx, str_szj,
                  str_rvb).
               (#
                  (str_okm, str_ooy, str_bje, str_cjw, str_jkb, str_mgg,
                   str_uww, str_yjg, str_gpl, str_omi, str_qoy).
                (#
                   (str_oco, str_ols, str_arz, str_beh, str_aun, str_esc,
                    str_lmr, str_glm, str_ojj, str_ioe, str_yvs).
                 ([str_ppe, TRUE, str_eer$0, str_fta$0, NAT, str_ztv$0,
                   str_zke] <<:
                  MININT |-> MININT))))
            )
          ELSIF
            !(str_pxd, str_gmn, str_iti, str_pwt, str_ars, str_uyv).
            (!(str_uar, str_kho, str_wha, str_imp, str_kxk, str_yff, str_vqc).
             (#
                (str_wma, str_gel, str_yah, str_hwn, str_knp, str_cni, str_kym).
              (#
                 (str_cbb, str_hkk, str_hid, str_ocg, str_obv, str_ezv,
                  str_roj, str_axi, str_rjt, str_dai).
               (str_gaj$0 > str_ryq$0) <=>
               not(NATURAL1 <<: str_bgj => str_uer$0 < str_pln$0))))
          THEN
            str_vnr, str_wfs, str_uyv, str_qmj, str_jsb, str_kxr, str_btk :(
              str_sba <<:
              rec
                (str_zjw:
                 {(str_npp(STRING)),
                  str_lgd,
                  struct
                    (str_waz: str_qhn$0,
                     str_idy: str_nqw$0,
                     str_eou: str_iep,
                     str_nin: str_hns$0,
                     str_cgf: str_ozu$0,
                     str_gjq: str_rjs,
                     str_fbu: str_ogg$0)},
                 str_svc: str_gor,
                 str_bnn: INTEGER,
                 str_dkp:
                 (POW1
                    (rec
                       (str_esh: {},
                        str_mbr: [],
                        str_gtz: str_ire,
                        str_mwu: str_wdu))),
                 str_saj: STRING)
            )
          END
        ELSIF
          not
            (not
               (#(str_jhy, str_xvf, str_fqo, str_zip).
                (not
                   (!(str_ymm, str_orx, str_rki, str_jcr, str_zaa, str_gro).
                    (not(NAT1 /: str_fze => str_woq$0 > str_gui$0))))))
        THEN
          str_ngv, str_bbe :(
            not
              (str_jkn$0 /=
               (([rec
                    (str_aoi: TRUE,
                     str_igt:
                     [NATURAL1, str_yky, str_ykn$0, FALSE, str_gxa,
                      str_rtm$0, str_fzb],
                     str_tch: str_izi$0,
                     str_osf: NATURAL)] ||
                 TRUE))
                 'str_amb)
          )
        ELSIF
          {}(TRUE'str_qch) /=
          (closure1(bool(str_iws$0 <<: str_nrp$0)))
            ({ str_tae, str_nvl, str_bqh, str_uos, str_fxa, str_voa, str_jiz,
               str_xjd, str_unr, str_qwb, str_ktp
               |
               str_aoc$0 /<<: str_hyx })
        THEN
          str_kru'str_dof
          :=
          {(top
              ([{{ str_lkg, str_wam, str_ync, str_jmh, str_suf, str_usm,
                   str_rfn, str_scr, str_pkt, str_din, str_jtb
                   |
                   [] /<<: str_cjf$0 }},
                [str_gde$0, str_kli, [], str_aog, str_ege, str_tvv]])),
           bool({} >= INT),
           INTEGER,
           str_gsq$0,
           str_hdv$0,
           str_ixc,
           NAT1,
           str_squ}
        ELSIF
          #(str_hob, str_djp, str_nyz, str_acg, str_oxy, str_oms, str_dpx).
          (INTER(str_fuf, str_xhs, str_omm).
           (MININT /: str_pkd|
            {NATURAL,
             (str_gmp$0 /\ []),
             str_ijo,
             str_afd,
             str_ttk,
             (MAXINT(str_jyt)),
             str_vir,
             str_hdt$0}) =
           str_ddx$0)
        THEN
          str_vjx, str_grf, str_wwz, str_oqa
          ::
          { str_qmj, str_ezj, str_qqy, str_drz, str_rzo, str_exb, str_qnk,
            str_ret
            |
            [str_ief, str_dqu, {str_bcz$0, str_mxs}] <
            bool
              (#(str_qqu, str_csq, str_mwe, str_pmf, str_cbi).
               (#(str_xwk, str_cec, str_mds, str_lnp).(str_gdx = str_srl$0))) }
        ELSIF
          not
            (#
               (str_fia, str_zvu, str_zam, str_icc, str_wfg, str_tzx,
                str_qdq, str_fov, str_hol, str_fax).
             (#(str_tdt, str_mxu, str_lwi, str_abo).(str_dkm$0 /<<: str_fao) or
              str_agn$0 /= NAT1) &
             (#
                (str_sli, str_ebf, str_nov, str_fbx, str_wxb, str_vdf,
                 str_reh, str_wuh).
              (str_cqo /= str_kks$0) =>
              str_kob$0 : str_crj$0))
        THEN
          str_ekt'str_zjs
          :=
          struct
            (str_abz:
             bool
               (!(str_nnl, str_kpm, str_oju).(str_uwv$0 < str_zjk$0) or
                str_wvc$0 >= str_mjv),
             str_bva: str_oum$0,
             str_btu:
             SIGMA
               (str_ivy, str_csc, str_xle, str_mov, str_qxg, str_iro, str_tod).
             (MININT = str_yii$0| str_twe$0),
             str_kuz: str_jwi)
            (struct
               (str_ave: str_tcv$0,
                str_lct: str_oea$0,
                str_sgl: str_xca$0,
                str_fyy: BOOL,
                str_odh: str_glx,
                str_yvd: str_qeu$0,
                str_hmo: NAT1)) ;
          WHILE
            not
              (fnc(str_sbi) <=
               bool
                 (!(str_yvw, str_ees, str_fem).
                  (not(not(str_jfw$0 < str_nav$0)))))
          DO
            str_hsa 
              (
                [str_xip$0,
                 (str_axv
                    (INTER(str_wjs). (str_ywj$0 <= str_dbc$0| str_lzf$0))),
                 (str_nca$0 |-> str_cfl$0),
                 [str_dom$0, [str_tle], (id(STRING)), str_enf, str_aub]]
              )
              (
                rec
                  (str_xpy: MININT,
                   str_uod:
                   { str_oqa, str_nqx, str_aka | str_kus /<<: str_irs },
                   str_akd:
                   struct
                     (str_bfd: (str_atm |-> str_zoj$0),
                      str_oes: (str_xui$0 |-> str_mlu)),
                   str_akn:
                   {INTEGER, str_ixd, str_gos$0, str_xbl$0, str_ylp$0,
                    str_pbq},
                   str_rhn: bool(str_hnc <<: str_cel$0))
              )
              (
                struct
                  (str_flg: str_wcd$0,
                   str_eek: str_kto,
                   str_syu: str_kvn$0,
                   str_vpy:
                   ({ str_jpu, str_sku, str_ydo | not(str_cph$0 /= str_igb) } >->>
                    rec(str_xyg: bool(str_dre$0 >= INT))),
                   str_ptd: NATURAL,
                   str_jsc: str_erq)
                  (str_ucp$0)
              )
              (
                [NAT1,
                 ({ str_fjp, str_nzq, str_ijc, str_ljo, str_rco, str_gqj
                    |
                    str_dch >= INTEGER }
                    'str_mbi
                  ,
                  str_ybv),
                 MININT'str_kkj,
                 {str_nrg$0, str_ndi$0, (INT(str_jxp$0)), INT, str_upf},
                 "str_sgn"]
              )
              (
                SIGMA
                  (str_irb, str_phn, str_wla, str_kso, str_csv, str_ekh,
                   str_iak, str_ulz, str_ldt, str_thj, str_rhq).
                (#
                   (str_zda, str_nfw, str_wgu, str_uem, str_ydi, str_zbl,
                    str_txx, str_baq).
                 (MAXINT >= str_jge)|
                 rec
                   (str_tww: {str_piz$0, (prj1(NATURAL1)), 213, str_ebm$0},
                    str_iaj: str_kpk$0,
                    str_dim: (str_qqg(NATURAL1)),
                    str_eif: {})
                 |->
                 str_jqf)
              )
              (
                { str_jfi, str_uab
                  |
                  !
                    (str_ifm, str_wnw, str_yhw, str_kfk, str_rhk, str_jjc,
                     str_mqs, str_uls).
                  (INT : {}) }
                |->
                {(union(BOOL)), [STRING, str_uuo$0, ({}(5)), str_vkj, NAT]}
              )
              (
                { str_vdt, str_uwt, str_yjy, str_dge, str_zgb, str_tyf,
                  str_ccb, str_bha, str_hid
                  |
                  !(str_jni, str_uvz, str_bzn, str_krn).
                  (not
                     (!
                        (str_ywk, str_mcw, str_ahf, str_xee, str_lfu,
                         str_ggr, str_hzg, str_yog).
                      (not
                         (!(str_shc, str_yre, str_zps, str_hgm, str_ebp).
                          (str_waw /: str_zmw$0 <=> NAT > INT))))) }
              )
            
            :=
            struct
              (str_rpz:
               [rec
                  (str_gyp: str_rqr$0,
                   str_qut: NATURAL,
                   str_iiy: str_pwl$0,
                   str_tna: str_vwm$0,
                   str_qxh:
                   %(str_xpa, str_qjx, str_rmq, str_qbl).
                   (str_ics$0 <<: INT| str_lch$0),
                   str_jnd: NATURAL1,
                   str_rva: str_vif)],
               str_mjg: str_zkp,
               str_bof:
               struct
                 (str_uhg: str_aqy,
                  str_sav: str_gci,
                  str_vbp: str_rbo$0,
                  str_cqs: str_roc$0,
                  str_fmb: str_cbl,
                  str_lgf: str_abs$0,
                  str_xtf: str_sfl$0,
                  str_shc: str_nzb),
               str_qsy:
               INTER(str_psf, str_nah, str_ngj, str_znn, str_zgg).
               (str_wbo$0 : str_zst$0| str_tlj$0),
               str_aod: str_jpz)
              'str_knu
          INVARIANT
            rec
              (str_myb: { str_xag | !(str_ipg).(str_roz : str_ivo$0) },
               str_xfu:
               %(str_amw, str_rco, str_dvq).
               (str_atn >= str_nnv|
                { str_yng, str_kdd, str_rjs, str_ahp, str_uiv, str_qep,
                  str_yit
                  |
                  str_bxl >= str_qtx })) <
            { str_syw, str_xpv, str_hna, str_hue, str_ihz, str_ivx, str_juh,
              str_xke, str_lvq, str_oui
              |
              str_fyc <= str_klw$0 }
          VARIANT
            { str_arn, str_crx, str_iin, str_tdj, str_iwm, str_zru
              |
              !(str_mbs, str_uce, str_mgi, str_gbd).
              (#
                 (str_oyu, str_sfi, str_flo, str_wca, str_rtu, str_ygx,
                  str_fka).
               ((MAXINT /<<: str_vcq$0 <=> NATURAL1 /: str_edp$0) or
                not(str_ysa$0 = str_lez))) }
          END
        ELSIF
          rec
            (str_gcs:
             [str_qkx$0, str_oru, INTEGER, str_iyd$0, str_mff$0, str_lpx,
              str_ufz, str_unt],
             str_iks: MAXINT)
            'str_qsr /=
          NATURAL <=>
          !(str_ell).
          (!(str_yhr, str_hkh, str_qph, str_gvv).(str_mta$0 <= str_hbf$0))
        THEN
          str_xlv, str_uft :(
            str_xkh =
            { str_kjl, str_vmk, str_msh, str_sls
              |
              not
                (#(str_zas, str_ibl).
                 (str_sij$0 <:
                  { str_xij, str_wdi, str_vxu, str_xki, str_iuc, str_iav
                    |
                    str_fde$0 : INTEGER <=> str_ubt$0 = str_igr$0 })) }
          )
        ELSE
          str_wgl'str_zqj
          :=
          {str_hnq$0,
           str_eyj$0,
           [str_ipa$0, str_zrm],
           str_mkk$0,
           NATURAL,
           BOOL,
           TRUE,
           str_mod}
          ,
          struct
            (str_und: BOOL,
             str_ljo: str_oti$0,
             str_xrv: TRUE,
             str_ogb: str_rwm$0,
             str_owu: (str_fmx |-> str_ekb),
             str_ivz:
             bool
               (#
                  (str_uzc, str_mem, str_vvf, str_qti, str_vwz, str_ojk,
                   str_eqe, str_rde, str_zoq).
                (FALSE /= str_zfv$0)),
             str_coq: str_wax)
        END
      END
    WHEN
      !
        (str_uhj, str_osa, str_als, str_azt, str_mgb, str_ixe, str_ght,
         str_hij, str_sni, str_sxc, str_dvh).
      (!
         (str_jpy, str_xpm, str_ejk, str_dkx, str_jkz, str_xdd, str_lnc,
          str_sht, str_bvv, str_xge, str_vro).
       (#
          (str_jcg, str_luk, str_wlg, str_nec, str_orn, str_het, str_ejr,
           str_fej, str_gou).
        (not(str_foe /<: str_omz$0)) =>
        not(str_dxi$0 <: str_zkp => str_lex$0 <<: NATURAL1)))
    THEN
      str_hcv, str_mxo, str_rlq, str_dqj, str_nqh, str_mqa, str_ebo, str_njs
      ::
      bool
        (not
           (not
              (!
                 (str_mpn, str_cjm, str_xdk, str_hwd, str_hsj, str_bsz,
                  str_onv, str_gip, str_sct, str_zlp).
               (!
                  (str_uff, str_clu, str_trq, str_xvm, str_vjp, str_dqm,
                   str_ltg, str_kea, str_scg, str_yub).
                (FALSE'str_ers <<: str_xre$0)))))
    WHEN
      rec(str_iho: [], str_wka: str_get, str_uzx: str_nfz, str_gjm: NATURAL) <|
      MININT <=
      %(str_jlr, str_kyt, str_aal, str_qro).
      (not(str_iqn$0 >= bool([] <= str_txz$0))| str_owp$0)
    THEN
      str_aoe, str_guk, str_wda, str_dmf, str_wre, str_ocd, str_ykt, str_hco
      ::
      bool
        (not
           (str_htk > str_wqa or
            (#
               (str_idr, str_ugj, str_rbq, str_znp, str_gsz, str_myd,
                str_oxt, str_lca, str_zsn).
             (str_xvd$0 <= NATURAL1 & str_qtb$0 = STRING) &
             NAT1 /<: str_xzl$0)))
    WHEN
      {(rec
          (str_igh: str_jtj$0,
           str_cth: str_nyj,
           str_hct: str_qeg,
           str_oos: FALSE)
        ,
        {str_qbq$0,
         { str_wui, str_plf, str_qql, str_opp | INT /<: FALSE },
         TRUE}
          'str_cez),
       NAT,
       str_pkf$0,
       str_gge} /:
      str_sgg
    THEN
      str_drx 
        (
          {NATURAL1,
           INTEGER,
           str_lhb$0,
           rec
             (str_hhl:
              [NATURAL,
               str_sax,
               [{}, (str_mxx \/ str_lbf)],
               str_dtv$0,
               str_vmh$0,
               str_dzm$0],
              str_tfa: (top(str_lmt$0))),
           {str_tju$0, str_czf, NATURAL}}
        )
        (
          bool
            (!(str_ovx, str_hjg, str_aag).
             (!
                (str_bhg, str_vfg, str_aif, str_gdk, str_zbl, str_zmp, str_tsd).
              (!(str_bdd, str_ews, str_vrf).
               (#(str_mug, str_xic).
                (!(str_alt, str_wzb, str_cnm, str_flc).(str_xyv < NAT1))))))
        )
        (
          bool
            (!
               (str_gxg, str_oeu, str_aqr, str_kmn, str_ayz, str_vig,
                str_fcr, str_nql, str_ehc, str_vpz).
             (not
                (STRING |-> str_eqa$0 >=
                 {str_pnn$0, str_xwz, str_cah$0, str_gfm$0, MININT, str_nyf$0} -
                 INTEGER)))
        )
        (
          UNION(str_adb, str_xbh).
          (str_mar$0 <= str_sat$0 =>
           not(str_fzm >= str_ahi or (TRUE /<: {} => str_duw <= str_swf))|
           rec
             (str_syq: str_sdx,
              str_hos: MAXINT,
              str_rbp: str_ufl$0,
              str_rdm: str_xjd$0,
              str_tyi: TRUE,
              str_wyl: str_qtb)
           ,
           str_ifc$0)
        )
        (
          [{},
           str_xet,
           str_zgd,
           struct
             (str_bmr:
              { str_art, str_lja, str_bqc, str_jzm, str_bwt, str_htv,
                str_qcm, str_hqh, str_xhr, str_hnn, str_pcv
                |
                NATURAL1 <= str_els$0 },
              str_pta: str_iuy,
              str_dnh: str_mck,
              str_cui: FALSE),
           (inter(str_qfw)),
           [FALSE, str_pbr$0, MININT, INT, str_dmx$0],
           str_azm,
           {str_azt$0, str_iau, INTEGER, str_ain, str_joa, {}, str_ddm$0,
            FALSE}]
            'str_qoa
        )
        (
          struct
            (str_blt: str_kxm$0,
             str_xwg: INT,
             str_nqr: {(str_cvb(NATURAL)), str_cou$0, (FIN1(INT)), INTEGER},
             str_upy: FALSE,
             str_kkw: (str_hum'str_yjy <<| str_uvp$0)'str_mhi)
        )
        (
          [str_wed, {}, str_kfp$0, BOOL, ({} mod [])] -
          bool
            (not
               (#(str_lhd, str_cpg).(NATURAL /= 18 <=> str_dod$0 /<: MININT)))
        )
        (
          PI
            (str_xqy, str_ndj, str_tou, str_wrv, str_lll, str_qny, str_ixk,
             str_dex, str_bzu, str_sns, str_wjw).
          (str_oxi > str_ntr => TRUE /: str_hgu$0| str_xwk)
          ,
          ({ str_yek, str_kpj, str_khh, str_wlx, str_cjf | str_lll > str_ogu }
             'str_mrf mod
           [str_iut, str_cuk, str_fza, str_wui, NATURAL])
        )
        (
          {{str_inf, str_ghr$0, bool(str_oer$0 <= MININT)},
           (sons(UNION(str_jqu). (str_xkj$0 /<: MAXINT| str_hyj))),
           str_yps$0,
           (NAT , str_wgm),
           str_iqj}
        )
        (
          SIGMA
            (str_rhc, str_xlz, str_rsg, str_auu, str_cqa, str_auc, str_nbp,
             str_lgb, str_cuf).
          (not(not(str_enn = [str_gnl$0, str_fim, str_jmb$0]))|
           struct(str_dgg: (NATURAL1 <+ FALSE), str_asv: str_jdk))
        )
        (
          bool
            (!
               (str_xww, str_dat, str_ojz, str_cfh, str_uyg, str_naw,
                str_oqv, str_lbb, str_yis, str_wga, str_gbx).
             (not(not(str_fnj$0 , str_ozq$0 <<: str_aef$0 -> str_bme))))
        )
      
      :=
      {rec
         (str_var: str_oni,
          str_abm:
          (struct
             (str_hmt: bool(str_ccy > []), str_czx: str_skh, str_msf: str_veo)
             (str_nkw$0(str_jjl$0))))
         'str_xaa}
    END
  END;

  str_oua (str_tth, str_iex, str_hry, str_tss, str_bfo, str_rrd) =
  SELECT
    !
      (str_pvw, str_htw, str_tny, str_vxf, str_hvg, str_gju, str_vjx,
       str_osj, str_aoh).
    (!(str_kfc, str_tob, str_nkv, str_maq).
     (!(str_mxe, str_yhq).
      (str_dxj |-> str_wrk <<:
       {(father(str_smu$0)), NAT, str_hwb, str_hlo, str_vqs$0})))
  THEN
    SELECT
      STRING <= str_gcl$0 or
      (str_vgu$0 <: str_irc$0 <=>
       not
         (!(str_lpd, str_wob, str_vwh).
          (!
             (str_iwx, str_fji, str_obz, str_gof, str_bdp, str_pcs, str_ofg,
              str_ntj, str_ees).
           (!
              (str_nnd, str_yma, str_zec, str_zno, str_zio, str_iid, str_iai,
               str_lel, str_rfl, str_xbn, str_yka).
            (NATURAL1 <: str_pef$0 <=> str_zmu < NAT)))))
    THEN
      SELECT
        #
          (str_zbv, str_qre, str_nqr, str_ofm, str_tsp, str_zji, str_nje,
           str_yki, str_hzh, str_dhq, str_ntp).
        (!(str_kfn, str_ekd, str_nyl, str_yle, str_jdq, str_hbk).
         (!(str_uku, str_syt).(!(str_xyq).(str_fbl /= str_yvh)) <=>
          #(str_esv).(str_orf = INT))) or
        7 /= str_jzg$0
      THEN
        skip
      WHEN
        !
          (str_dou, str_lxq, str_jqh, str_bha, str_ccg, str_ont, str_gwp,
           str_psu, str_yku).
        (#(str_ilm, str_wnq, str_odf, str_ihy, str_gno, str_yob, str_fmh).
         (#(str_crb, str_ucb, str_cyq, str_zfo).(str_iqk <<: str_wdl)) <=>
         str_xbo , (str_gdd(str_tjk)) > str_aap)
      THEN
        CASE
          (str_xbw(NAT1)) |>
          ({ str_tyv, str_igx, str_iht, str_vvm, str_ubk, str_yiv, str_zst,
             str_gds, str_hpg, str_zmt
             |
             { str_vij, str_rui, str_wsj, str_hqy, str_ybq
               |
               str_uhz <<: INTEGER or str_jzu <= FALSE } =
             str_rlp }
             (str_hbt))
          OF
          EITHER
            bool
              (not
                 (not(str_jca /<<: str_wnh) or
                  (str_zns$0 : str_tgn or
                   not(!(str_ydw).(str_mxg$0 <= MININT)))))
          THEN
            str_xwz
            :=
            bool(str_gjj /: str_jhs)
            ,
            [SIGMA
               (str_jjo, str_gez, str_org, str_uqo, str_hge, str_jvs, str_gqr).
             (#(str_yjc, str_wem, str_wzh, str_lvv, str_oiq).
              (str_ryt$0 <<: STRING)|
              bool(INT /: str_jeh$0 => str_ehg >= str_lkn))]
          OR
            min
              (struct
                 (str_jwq: str_erf$0,
                  str_evo: NATURAL,
                  str_pid: str_kgy$0,
                  str_erz: MAXINT,
                  str_aud:
                  struct
                    (str_mxf: str_xuu$0,
                     str_lrk: str_moi$0,
                     str_ekg: str_gza,
                     str_qzj: NATURAL1),
                  str_kxu: INTEGER,
                  str_zde:
                  struct
                    (str_yli: bool(NAT1 > str_yqc$0 => {} >= str_edh),
                     str_tbd: str_yll,
                     str_kqg: str_hyw,
                     str_ttt: NAT1,
                     str_tda: str_ilv'str_tyh,
                     str_ymk: str_xkn$0,
                     str_wyu: str_iht$0)))
          THEN
            str_kwv, str_vwy, str_fef :(
              [str_prs,
               str_lwo,
               str_szm$0,
               ((str_ito -->> str_ixq) |-> str_jhh$0)] >=
              (str_vhw <<| NAT)
                ({str_wec$0, str_rvl$0, str_jnl$0, str_cax$0, str_hhp})
            )
          OR
            [str_que$0, str_ctk, str_oxw$0, STRING, str_ibz$0, str_fcw$0,
             MAXINT]
              'str_vjg
              [top
                 ({ str_slb, str_bhi
                    |
                    not
                      (!
                         (str_glu, str_mnb, str_kio, str_xyk, str_kzi, str_njb).
                       (str_slc < str_cqz)) })]
          THEN
            str_dsa, str_lwr, str_qct, str_rtt, str_dro
            :=
            bool
              (!(str_ljq, str_jcd, str_qnk, str_dxt).
               (#(str_vwy, str_yys, str_pxk, str_cib, str_wgm).
                (!
                   (str_xrw, str_vcq, str_ulx, str_cdu, str_dbn, str_zao,
                    str_jgr, str_iwh, str_onn, str_upt).
                 (!(str_gbd, str_msg, str_kzk, str_aes).
                  (str_czc$0 <: str_hmw$0 => MAXINT <= str_ywo) <=>
                  NATURAL >= str_nrw$0))))
          OR
            first
              ({{str_afb,
                 MININT,
                 str_fnr,
                 str_hyj,
                 {str_mpt, FALSE, str_nnr, str_ida$0},
                 str_ngi,
                 (str_jza$0 .. str_tkd)},
                INTEGER'str_eis,
                str_mlo$0,
                (INTEGER /|\ str_ynv$0),
                TRUE})
          THEN
            skip
          END
        END
      END
    END
  WHEN
    !(str_msr, str_yqn, str_tqv, str_qes, str_wyo, str_dio, str_fiy).
    (NAT(MAXINT) =
     { str_nnj, str_tsd, str_tuy, str_rqf | str_vay <= str_hvo }
       ({ str_bof, str_wli, str_jya, str_qfi, str_gjw, str_yfb, str_kki,
          str_jcs, str_rng
          |
          #
            (str_aze, str_knf, str_qjx, str_tiy, str_rdd, str_upc, str_dzt,
             str_sxd).
          (str_txe$0 <<: str_nnk) }))
  THEN
    WHILE
      not
        (not(str_yhw$0 /<<: str_rmk) &
         PI(str_ngl, str_efv, str_uhg, str_vas, str_szf, str_sdn, str_ixh).
         (str_cga$0 = str_ebc$0| NAT1) /:
         str_ust$0
         |->
         rec
           (str_jii: str_ori,
            str_xrl: str_rgi$0,
            str_ggz: str_sjm$0,
            str_gal: MININT,
            str_luu: TRUE,
            str_dgc: BOOL,
            str_ocd: str_eke$0))
    DO
      BEGIN
        str_bbw, str_chu, str_miw, str_qto, str_lyz :(
          !(str_jsb, str_szo, str_zjk, str_nrd, str_eut, str_nen).
          (not
             (!(str_hmn, str_zks, str_tpt, str_wco, str_uzk).
              ((str_edn /<<: STRING <=>
                !(str_dbk, str_iyd, str_fft).
                (!
                   (str_nya, str_sym, str_fuq, str_awz, str_fzl, str_rrb,
                    str_rnt, str_ocg).
                 (str_tin$0 /<<: str_eoo))) or
               STRING /= str_svf$0)))
        ) ;
        str_xqh 
          (
            struct
              (str_xys:
               struct
                 (str_iaf:
                  struct
                    (str_yqx: NATURAL1,
                     str_tug: str_mnb,
                     str_vcl: str_ajq$0,
                     str_xou: str_krg$0),
                  str_hsd:
                  rec
                    (str_alk: str_dwz,
                     str_biy: str_fcv,
                     str_bwr: str_dtz,
                     str_iqg: 73),
                  str_fgx: str_buz,
                  str_awc: str_ris),
               str_jet: INTEGER,
               str_kks: [],
               str_oym: BOOL,
               str_hss: str_rwx,
               str_azv: (bool(TRUE /<<: str_wwh) , str_som))
          )
          (
            { str_wpy, str_mcm, str_chs, str_vhv, str_hrr
              |
              card(str_ulx) /= min(str_kke$0) }
            |->
            ({ str_end, str_bqs, str_lgd, str_bqd | str_vks /: str_jig$0 }
             |->
             STRING)
          )
          (
            struct
              (str_srv:
               { str_hcr, str_nhz, str_pgj, str_bfk, str_lju, str_wxc,
                 str_ihj, str_nhv, str_ave, str_jcy, str_hth
                 |
                 str_gbb$0 /<<: str_vln$0 },
               str_wov: [str_snq, FALSE, (str_iil mod str_xnm), str_rmr$0],
               str_aiy: str_zio$0,
               str_swo: str_zei,
               str_jbi:
               { str_pid, str_wza, str_isa, str_fdj, str_bnt, str_lku,
                 str_lnf, str_aou, str_bwz
                 |
                 str_axk >= str_cqx$0 => BOOL = str_iww$0 },
               str_khd: str_vid$0'str_byc)
          )
          (
            struct
              (str_nrg: [FALSE, (str_kya$0(str_pyg$0)), NAT1, str_ndk],
               str_pkt: NATURAL,
               str_zbe: str_pcr$0,
               str_nnb:
               rec
                 (str_nyw: str_xel$0,
                  str_vxj: TRUE,
                  str_unx: str_giw,
                  str_yug: {str_tpp$0, str_qek$0, MAXINT},
                  str_lcd: [],
                  str_lyq:
                  PI(str_afj, str_kde, str_jmn, str_zgu, str_vke, str_umb).
                  (!(str_jic, str_wao, str_ubf).(STRING /<<: str_vhk)|
                   str_mnq$0),
                  str_vjk: TRUE,
                  str_ytc: str_plh))
          )
        
        :=
        sons
          (struct
             (str_aau: str_gqk,
              str_rbe: str_bsi,
              str_kuh: str_jqq$0,
              str_kzx: str_btb,
              str_wcp: str_ftr,
              str_ydj:
              [{{ str_jgd, str_the, str_aig, str_mtd, str_zmy, str_llu,
                  str_hhi, str_lsd, str_jao, str_nqy
                  |
                  str_rho /= str_cku$0 },
                [str_jxd]'str_lga},
               str_jox,
               str_svy,
               str_lcq,
               str_rar,
               str_eps,
               STRING],
              str_fbu: str_gny$0))
      END ||
      skip
    INVARIANT
      !(str_otv, str_ydh).(str_bje = str_rmy$0 or not(str_wdv$0 = str_hab$0)) <=>
      str_ptp |-> [NAT1, MAXINT, str_awh, [], BOOL, str_ney$0, str_gkm] =
      MAXINT
    VARIANT
      struct
        (str_pqd: (str_qak$0(str_ofq)),
         str_hzn:
         [struct
            (str_iim: str_wtd$0,
             str_ztu: str_mfe,
             str_fdc: {},
             str_ycp: str_hxw$0,
             str_kvr: str_fkj$0,
             str_svf: str_kii$0,
             str_wmz: MININT,
             str_xfd: FALSE),
          (str_qsv$0
             ({ str_fxj, str_xzw, str_ums, str_tzb, str_grw, str_jev,
                str_srl, str_bdv, str_lcn, str_dlg, str_lsu
                |
                not(str_gql$0 /<<: str_beq$0) })),
          NAT1],
         str_unc: str_jno$0,
         str_hsq: NATURAL)
    END
  ELSE
    str_gmd, str_icu, str_rvy, str_ipf, str_aaw, str_hoy, str_guh, str_uug,
    str_kub, str_qnz, str_kwe
    :=
    rec
      (str_yzl:
       rec
         (str_npi: TRUE,
          str_srv: str_bjc$0,
          str_lew: MAXINT,
          str_sxl: str_ttt$0,
          str_tam: str_qbs),
       str_jko: str_mwy$0,
       str_sea: TRUE,
       str_jfu:
       {struct(str_rel: str_xym$0, str_edv: NATURAL1), str_huq$0, NAT},
       str_uru: bool(str_nzl : str_dnb$0),
       str_rmf: str_ucp,
       str_xay:
       {str_vty$0, (str_ihz <| str_eta$0), str_qbp, str_syu$0, str_nbb})
  END;

  str_vnu, str_utp, str_dmi, str_bef, str_gix, str_ovh
  <--
  str_hjy (str_avc, str_zzf, str_owg, str_ufu, str_eom)
  =
  IF
    not
      (not
         (!(str_dse).
          (#
             (str_fae, str_soa, str_sge, str_afu, str_coo, str_lvj, str_cno,
              str_eks, str_emu, str_eae, str_brj).
           (str_ieg$0 = str_zis)) or
          !(str_hcw, str_bjw, str_vyb, str_nws, str_dpl, str_gnt, str_qma).
          (!(str_gmd, str_stn, str_vwu).(str_wnx <<: str_jfv))))
  THEN
    str_oip, str_fdz, str_oax, str_hzd, str_rmn
    :=
    subtree
      ({ str_jrw, str_lwk, str_gos, str_owk, str_ycb, str_frn, str_gey,
         str_lov, str_uom
         |
         not
           (not
              (#
                 (str_sqp, str_idp, str_pjy, str_srt, str_gmi, str_rsi,
                  str_ali, str_ffa, str_sck, str_tyi, str_uum).
               (str_wvr$0 :
                struct
                  (str_rih: NATURAL1, str_pxs: str_dmy, str_mej: str_yng$0)))) })
  ELSIF
    #(str_lcd, str_qvw, str_kqj, str_phe, str_xno).
    (!(str_lbb).
     (#(str_tye, str_lem, str_erx, str_rqe).
      (#(str_dvj, str_spl, str_zxz, str_bdu).
       (MAXINT = { str_otp | str_jdn$0 <: str_wbe$0 }))) &
     str_dwu <= str_fdc$0)
  THEN
    str_lhx, str_yne, str_wmb, str_dia :(
      !(str_xmk, str_swe).
      (#(str_isa, str_csj, str_qrb).
       (!(str_lig, str_ilj, str_lps).
        (#
           (str_rvw, str_rkj, str_hye, str_wps, str_qxl, str_yut, str_fom,
            str_eok, str_bxb, str_taz).
         (!
            (str_byu, str_nmr, str_fvx, str_bvm, str_the, str_lkv, str_xsb,
             str_azl, str_ttc, str_jvg).
          (#
             (str_res, str_fie, str_uir, str_mri, str_pzu, str_xwp, str_tlm,
              str_mms, str_vse).
           (!(str_qvd, str_pde, str_kjd).(NAT1 <<: [])))))))
    )
  ELSIF
    #(str_xnk).
    (!(str_eqj, str_dbf, str_qyb, str_kjj, str_obh).
     (!(str_rlo).
      (not
         (!(str_jic, str_pum, str_mxl, str_wla, str_yxd, str_bwy, str_mjp).
          (bin(NATURAL1) /<: str_rxo$0)))))
  THEN
    str_hej'str_coc
    :=
    [{},
     NAT,
     struct
       (str_rei: str_wxv$0,
        str_qlq: NATURAL,
        str_rii: str_zur,
        str_qna: INTEGER,
        str_bob: str_oav),
     (str_lep
        ((((UNION
              (str_lfp, str_ifo, str_vaw, str_mfb, str_uat, str_uom, str_btx,
               str_jir, str_gpr, str_fhc).
            (str_wtw$0 <= BOOL| NATURAL1)
              (str_lgc$0))
             (INT)) ;
          STRING)))]
  ELSIF
    #(str_pig, str_mva).
    (NAT1 <
     [{ str_oyi, str_vzk, str_bjp, str_zpd
        |
        str_xbt <: str_udz & STRING = NAT },
      (iterate(str_jwy$0)),
      MAXINT,
      str_hdw$0,
      str_ohr$0,
      (closure(str_ajc)),
      {}])
  THEN
    str_tkn, str_nsc, str_fgw, str_knj
    ::
    struct
      (str_jsz: str_xor,
       str_yka:
       rec
         (str_acy: FALSE,
          str_eqz: [str_ett, str_lhl, TRUE, str_aso, str_ajt$0, []],
          str_ver: INTEGER,
          str_ptv: str_qnf$0,
          str_aoq: NAT),
       str_tkd: str_dtn$0,
       str_gdt: str_qiq,
       str_okv: BOOL,
       str_tuq:
       rec
         (str_ble: str_lxc,
          str_flx:
          [str_iyh, STRING, INT, str_ltk$0, str_cpu, str_hqw$0, str_rua],
          str_utx: MININT,
          str_tbt: str_mzb,
          str_gxm: str_gaq$0,
          str_gxy: str_tnp$0),
       str_qgs:
       struct
         (str_dtn: BOOL,
          str_lws: NATURAL,
          str_tzy: NAT1,
          str_bnj: str_quv,
          str_zan: str_ign$0,
          str_dis: str_ooz$0))
      'str_xpt
  ELSIF
    [str_ctd$0,
     {STRING, str_ipd, str_cys$0},
     { str_lac, str_twp, str_bke, str_eba, str_sbx, str_rcl, str_bpi,
       str_zql, str_fhz, str_qou, str_rmr
       |
       str_jsb > str_dyk },
     INT,
     NAT1,
     str_sca$0] <:
    rec(str_vvi: BOOL'str_msq, str_mms: str_vxv)'str_mon
  THEN
    str_hol 
      (
        [str_qwx,
         str_igd,
         NAT,
         str_ctv,
         rec
           (str_gwj: (seq([str_ped$0, str_szx$0]'str_gch)),
            str_ylj: STRING,
            str_xbz: str_fmg,
            str_vmw: str_cap,
            str_uvd: NATURAL,
            str_yvv: str_mus,
            str_yez: str_bxi,
            str_cbs: NATURAL),
         { str_yzj, str_kdp, str_nxl | str_xia /: str_zza$0 },
         str_myu]
      )
      (
        str_knu$0
        |->
        bool
          (((str_tyw = INT or NAT1 <= NAT1) &
            !(str_fjp, str_lfd, str_khh, str_bmn, str_glr, str_htm).
            (#
               (str_kgs, str_ipb, str_quq, str_moz, str_dbb, str_yok,
                str_cnw, str_hkm).
             (str_ffc <= NATURAL))) or
           str_rgt$0 <<: NAT)
      )
      (
        bool
          (#(str_zrh, str_mnd, str_apo).
           (!
              (str_hvm, str_wnf, str_tsi, str_xtp, str_eie, str_vvz, str_wvo,
               str_uno, str_zpy).
            (#(str_uew, str_uwg, str_rtf, str_vhn, str_upz).
             (str_bwz$0 /<<: str_tqx$0))) &
           !
             (str_nbs, str_fxr, str_tju, str_qzy, str_vuo, str_tuj, str_yti,
              str_ipe, str_kke).
           (!(str_apn, str_oln, str_zcx).([] /<: str_hqe)))
      )
      (
        rec
          (str_gaa: str_esc$0,
           str_yiz: str_dgb,
           str_fzw:
           [MININT,
            str_gro,
            str_rcq$0,
            (({}(str_wnf))(str_lxe$0)),
            (str_tiu$0 -->> str_buw$0)],
           str_vzt:
           rec
             (str_onf: str_gqn,
              str_ght: NAT1,
              str_odb: str_ypg$0,
              str_tqm: [str_blg$0, str_faa, str_stg, str_efd, NATURAL1],
              str_vei: str_zkx$0,
              str_nfx: str_wqh,
              str_wfc: str_oyl$0))
      )
      (
        ([struct
            (str_mwr: str_woj,
             str_oiu: BOOL,
             str_iav: str_mtt,
             str_sxi: (str_okj(str_qhg$0)),
             str_asp: (str_otl |-> str_hij),
             str_bmq: NATURAL)]
         ,
         str_usb)
          ({}(MAXINT))
      )
      (
        {(arity(UNION(str_ypd, str_aue). (str_kod > MININT| str_ezk$0))),
         str_uor,
         struct
           (str_gds: str_lgv,
            str_hrj: str_ske$0,
            str_qyq: bool(INTEGER <<: str_vdc),
            str_ezd: str_qlc,
            str_nbq: str_akl$0),
         bool(INTEGER : str_jmo$0)}
      )
      (
        [{},
         [],
         (bool
            (not
               ({ str_apk
                  |
                  #
                    (str_dvq, str_buk, str_bzq, str_cst, str_hzq, str_fvc,
                     str_rwo).
                  (INTEGER /<: str_fyl) } /:
                str_yhz$0)) ^
          str_ihd),
         str_lcx]
      )
      (
        rec
          (str_tci:
           {{str_ppz$0, str_raw$0, [str_hph$0, str_wxn], FALSE, str_aod$0},
            {(STRING(str_hhb)), TRUE'str_wra, str_rvy$0}})
      )
      (
        rec
          (str_szu: str_bnr,
           str_pbt: str_vpb,
           str_zlj: str_jmn$0,
           str_jhr: STRING,
           str_olr: str_vaz,
           str_pbs:
           ({{ str_ozk, str_zvo, str_oiu | str_jhu$0 <= INTEGER },
             str_tja,
             str_rep,
             str_uik$0} |>>
            SIGMA(str_kdx). (str_wkv /= str_gza$0| str_lmd$0)'str_kct'str_svi),
           str_mbw: str_ekv,
           str_nbu: str_mzl)
      )
      (
        SIGMA
          (str_qqy, str_rfm, str_ehk, str_pns, str_oae, str_dij, str_nml,
           str_rmt, str_ytl, str_ilo).
        (#(str_sxk, str_pkf).
         ((#(str_wuh).([] <: TRUE) => str_aax < str_scx) &
          { str_fqw, str_ufn, str_taz, str_cct, str_obq | TRUE > str_cfh$0 } /<:
          str_krj)|
         str_hpu)
      )
    
    :=
    struct
      (str_jdv:
       %(str_wrf, str_pud, str_tyl, str_chd, str_xth, str_btc).
       (not
          (!(str_skw, str_six).
           (#(str_vez, str_bxn, str_xup, str_qey).(NAT >= MAXINT)))|
        seq(str_mar)),
       str_pyi: str_zdv$0)
      'str_chj
  ELSIF
    #(str_lsn, str_gxh, str_alw, str_uhn).
    (str_tqg$0 : "str_wyb" &
     #(str_uve, str_sbf, str_gxa, str_odo, str_oou, str_ude).
     (not
        (#(str_hwe).
         ((MAXINT < NATURAL1 & str_kei < str_ovo$0) <=> str_ssw$0 = str_evq))))
  THEN
    ANY
      str_vzl, str_dwy, str_ehl, str_jvu, str_saw, str_ydj
    WHERE
      !
        (str_pzf, str_bzg, str_dvy, str_tns, str_ost, str_iqk, str_cez,
         str_djo, str_coe, str_ukp).
      (!(str_fqq, str_csq, str_mcv, str_wlm).
       (not
          (not
             (!
                (str_lom, str_rqm, str_haa, str_obb, str_ayi, str_mew,
                 str_och, str_uhd, str_rqw).
              (not(NAT <: str_upl$0 & FALSE < str_jbn$0))))))
    THEN
      ANY
        str_cnp
      WHERE
        !
          (str_qrr, str_ocv, str_zqv, str_qxh, str_rkh, str_vjm, str_shd,
           str_cof, str_lgm, str_uei, str_syj).
        (MAXINT /<<: NATURAL) <=>
        #
          (str_nbg, str_bqv, str_mtf, str_ccs, str_hip, str_isr, str_wnv,
           str_vuk, str_lfm).
        (not(FALSE >= str_hoo$0) <=>
         not(str_jpi$0 /= str_eim$0 => str_bnm = str_thh$0))
      THEN
        IF
          !(str_bmc, str_kmf, str_rtk, str_vbm).
          (!(str_szb, str_brs, str_vmf).
           (not
              (str_xqn <= str_uhq =>
               (str_goq /= str_qhj =>
                (!(str_ndx, str_efq, str_raz, str_dtu, str_cph).
                 (FALSE >= INTEGER) &
                 str_rdz : str_tks$0)))))
        THEN
          str_fkm, str_elc
          :=
          { str_zvr, str_lle, str_cvq, str_rzn, str_wfj
            |
            not
              (str_khp$0 =
               bool(str_vxe$0 /: str_yqn$0) ^
               { str_ner, str_ikz, str_chc, str_mln, str_rzn, str_xtm,
                 str_jhh, str_pdh, str_ghu, str_kuq, str_fau
                 |
                 NATURAL > str_sll$0 }) }
            'str_ygf
        ELSIF
          !(str_vec).
          (#(str_vrx, str_stl, str_nms, str_puf, str_jmq).
           (not
              (father
                 (struct
                    (str_gsq: struct(str_zja: str_rwi), str_cci: str_fdb$0)) <=
               str_uzu)))
        THEN
          str_zfi 
            (
              size
                (SIGMA
                   (str_zpj, str_uip, str_dzi, str_kkl, str_muj, str_dfa,
                    str_mfz).
                 (#(str_jsl, str_vkm).
                  (str_ign /:
                   struct
                     (str_php: NAT,
                      str_bfv: str_jpt$0,
                      str_bsx: INT,
                      str_yec: (str_qwi(INTEGER)),
                      str_skm: str_dwd$0))|
                  str_abg$0 , str_nmp$0))
            )
            (
              bool
                (not
                   (!
                      (str_jxo, str_iwl, str_dub, str_jaj, str_diz, str_cap,
                       str_ekz, str_brq, str_eog).
                    (!
                       (str_dwy, str_bva, str_ztj, str_oop, str_tav, str_htz,
                        str_och, str_oho).
                     (#(str_ilc, str_ewz, str_pws).(STRING : str_obq)))) &
                 (STRING /= MAXINT <=> 365 : str_gcw))
            )
            (
              { str_dax, str_jax, str_zga, str_swk, str_wdv, str_dwk, str_xew
                |
                !
                  (str_uce, str_art, str_vvf, str_lgh, str_ziw, str_mnr,
                   str_tsn, str_dvo, str_uyg, str_ney, str_brn).
                (!
                   (str_vvu, str_lmr, str_utd, str_mgl, str_tgj, str_uuh,
                    str_yit, str_heu, str_dke, str_ybh).
                 (not(NATURAL1 : union(fnc(str_tlz$0))))) }
            )
            (
              rec
                (str_rlu: (seq1(str_kjf$0))'str_ckk,
                 str_yfh: str_cuo$0,
                 str_kvr:
                 rec
                   (str_his: str_rie,
                    str_bdi: str_chf,
                    str_ptt: str_cty,
                    str_vov: str_aaj$0,
                    str_wuj: str_wvl$0,
                    str_qrt: str_bqq$0,
                    str_zuw: str_yoi,
                    str_ytg: []),
                 str_lpg: str_sjb$0,
                 str_ryv: str_exc,
                 str_npy:
                 (struct
                    (str_arw: NATURAL1,
                     str_lup: NATURAL,
                     str_tot: str_dka$0,
                     str_chu: str_urv$0,
                     str_vkm: {},
                     str_ytb: str_lad$0)
                  |->
                  [BOOL, BOOL]))
            )
            (
              rec
                (str_nlk: str_voe,
                 str_amd: str_thy,
                 str_uiy: INTEGER,
                 str_gly:
                 { str_gry, str_tst
                   |
                   !
                     (str_xvu, str_blq, str_taf, str_ihd, str_xfo, str_ixu,
                      str_rqk, str_xyl, str_lsc, str_llu).
                   (!(str_vzh, str_pgc, str_mqb, str_vqm, str_uaz).
                    (!(str_byv, str_igs).
                     (!
                        (str_yys, str_smi, str_mwx, str_znw, str_fkn,
                         str_uqu, str_nbb, str_dzq, str_eab).
                      (not(STRING /<<: str_ctc$0))))) },
                 str_ycx: str_lhj,
                 str_kfi: str_ufn,
                 str_uhl: str_are$0)
            )
            (
              (MAXINT |-> (str_yyx$0 >->> (str_qal$0(str_zdk))))
              ,
              (str_daw$0 , [(rev(NATURAL1))])
            )
            (
              POW1
                ({ str_sqb, str_the, str_orh, str_bho
                   |
                   #(str_gyj).
                   (not
                      (!
                         (str_muq, str_niz, str_kyk, str_pfu, str_bqi,
                          str_vhv, str_ycv).
                       (not(MININT /= str_klv$0)) =>
                       str_jns <: str_rvv$0)) })
            )
            (
              bool
                (str_ivl'str_klp =
                 rec
                   (str_egl:
                    (PI
                       (str_crb, str_wer, str_yls, str_jzt, str_tja, str_uvj,
                        str_zgn).
                     (str_smw$0 /= str_gyj$0| {})
                       (BOOL)),
                    str_iwz:
                    {str_dwf$0, MININT, str_azd$0, str_dpl$0, str_eti$0,
                     str_ieh, str_bup$0, MAXINT},
                    str_zxo: str_ycw,
                    str_upv: str_chd$0))
            )
            (
              %
                (str_cct, str_qli, str_gvt, str_sbp, str_cfw, str_eou,
                 str_hdb, str_mxi, str_zri).
              (STRING /: MAXINT <=> str_oon$0 = STRING|
               {str_rmt$0, str_fba$0, str_rll, INTEGER, str_gag, str_zsm$0,
                "str_sqn", INTEGER}
               |->
               {INTEGER, (str_str , str_yyr$0), str_hsg$0})
            )
            (
              conc
                ({NATURAL,
                  str_wdr,
                  (tail(str_fsq$0)),
                  str_neb,
                  str_jev$0,
                  (({ str_kta, str_bbg, str_mno, str_mhm, str_vvp, str_nhe,
                      str_ptt, str_wjw, str_qdj, str_sot, str_xlx
                      |
                      str_wru = TRUE }
                      (str_xvn))
                     (str_oqv$0)),
                  INTEGER,
                  str_raa})
            )
          
          :=
          bool
            (rec
               (str_lpa: (FALSE(str_ioa)),
                str_yze: str_vml$0,
                str_brt: str_vox$0) /=
             (MAXINT |>>
              rec(str_tcf: str_enx$0, str_jxk: str_pqt$0, str_qqq: str_ozb$0))
               'str_ccw)
        ELSIF
          not
            (!(str_azu, str_ioj, str_sva, str_imo, str_vlo, str_cie).
             (#(str_nyj, str_jrv, str_bft, str_ggs).
              (#(str_rrd, str_jnj, str_myh, str_rbg, str_zqs).
               (str_mcr <= MININT) &
               !(str_tgo, str_kig).(MININT < str_waq))))
        THEN
          str_wkf, str_ccp, str_tgx, str_pgc, str_zce, str_ond, str_rld,
          str_ofx
          ::
          {struct
             (str_tnf: bool(#(str_ijq, str_lia, str_azq).(str_pbw : str_hdo)),
              str_aij: (inter(str_anq |> str_yrm$0))),
           {str_eym$0, str_svw$0, str_gld$0, str_qkx, str_oyt$0, str_dcq}} ;
          str_lbe
          :=
          UNION
            (str_vlf, str_oyw, str_ogw, str_gbf, str_yio, str_iqu, str_bnh,
             str_vld).
          (#(str_uaf, str_lrl, str_npq, str_bju, str_ebm, str_jtq).
           (STRING /<<: TRUE)|
           (str_vgu$0 +->>
            [(prj2(str_bcw$0)),
             str_spv,
             BOOL,
             (str_tvd$0 , MAXINT),
             INT,
             str_daf]) >->
           MININT)
        ELSIF
          #(str_wzu, str_tol, str_owo, str_fto, str_ijh, str_vsw, str_xfh).
          (!(str_npk).
           (not
              (!
                 (str_cwv, str_bsf, str_bnf, str_eel, str_gzb, str_tvp,
                  str_ycl, str_hfn, str_fec).
               (str_tdn < str_dvt$0))) <=>
           #(str_atu, str_eug, str_otc, str_myj, str_isy, str_zcs).
           (str_met > []))
        THEN
          str_xwd
            (bool
               (!(str_wdt, str_qbe, str_niq, str_gkw, str_deh).
                (str_cit$0 >=
                 { str_lrk, str_ofv, str_xhk, str_eze, str_wcr, str_nya,
                   str_bqt, str_bjl
                   |
                   str_mwx /<<: str_fdy } <=>
                 #
                   (str_ibg, str_ifw, str_ydw, str_nxs, str_udm, str_kdu,
                    str_rsj).
                 (#
                    (str_fvf, str_cyw, str_sxc, str_jjk, str_phm, str_umk,
                     str_wti, str_duu, str_mej).
                  (TRUE /= 7198)))),
             (INTEGER
              ,
              struct
                (str_rqz: str_xzd,
                 str_rpt: str_fkx,
                 str_syh: str_khi,
                 str_vmo:
                 [str_mzc$0, str_kly, str_ayi$0, str_vbm, str_qon, str_nhe,
                  str_lkt$0, str_rdy],
                 str_ytr: str_erd,
                 str_btb: str_rae$0,
                 str_vqj: BOOL,
                 str_jrj:
                 (str_uhu
                    ((rev
                        ({ str_eqx, str_rjk, str_iws, str_vqq, str_lnp,
                           str_jvd, str_zvq
                           |
                           str_wwa$0 > str_poq }))
                       'str_cat)))),
             rec
               (str_cxw: str_xtx,
                str_bdh: bool(str_auj = str_xvw$0),
                str_gip:
                struct
                  (str_dnv: str_aip$0,
                   str_rnz: str_sjy$0,
                   str_pdg: [str_myc$0, str_zao],
                   str_deq: {str_lbn$0, NATURAL1, str_ylb$0, str_oss},
                   str_dnh: (str_hle$0 |-> INTEGER),
                   str_ovf: str_fip,
                   str_rey: MININT,
                   str_bfl: (infix(str_ksh$0))),
                str_otw: str_wti$0,
                str_xuk: str_ytq$0),
             {str_lim,
              str_fjq$0,
              MAXINT,
              str_rrf,
              rec
                (str_rdn:
                 [((str_yly |-> NAT)~),
                  str_cjh,
                  INT,
                  PI
                    (str_zro, str_lqe, str_sff, str_xyk, str_gtt, str_kab,
                     str_ubq).
                  (BOOL /<<: str_raf| 87)
                    'str_eis])},
             {MININT,
              bool("str_odg" /<: str_ykr$0),
              []'str_tih,
              bool(#(str_efg).(not(INTEGER < str_pzc$0))),
              str_gti'str_wnv},
             (((str_qap <| str_psk) , (infix(BOOL))) /|\
              (((id(str_ccn))([])) |-> str_qut)),
             [str_mbo$0,
              (str_ysj$0 +->> str_plq$0),
              { str_oav, str_eaj, str_dyi, str_eao, str_iby, str_uul, str_yqa
                |
                str_amr <<: str_ukz },
              str_bir,
              str_tat,
              (str_ipw$0(front(INT))),
              (right(NATURAL1(NATURAL1))),
              NAT],
             struct
               (str_xiq:
                [(prj2
                    ({ str_bxc, str_hbd, str_zra, str_dnw, str_nwn
                       |
                       FALSE = str_gpn }))],
                str_qwa: str_zzm$0,
                str_yzm: (str_ocs([])),
                str_xtu: str_nwo$0,
                str_wzt:
                struct
                  (str_ulp:
                   {str_yly$0, str_srr, str_nnj$0, str_nxu$0, str_hgb$0,
                    str_bcy, str_web$0, str_ohh$0})))
        ELSIF
          !(str_baf, str_srv, str_bvn, str_lkb, str_ctg).
          (!(str_vex, str_gjq, str_nka).
           (!
              (str_tnn, str_hze, str_xgf, str_kvv, str_ful, str_khk, str_sbw,
               str_dyy).
            (!(str_aty, str_bhs, str_olf, str_yvr, str_wdi, str_sgt).
             (not(str_zki$0 /<<: str_qct)))) =>
           not(str_lti <= NAT1))
        THEN
          IF
            not
              (!(str_adl, str_ytq, str_off, str_cbc).
               (not
                  (!
                     (str_eop, str_kjf, str_wow, str_wkb, str_psa, str_gmh,
                      str_rbt, str_gwo, str_mss, str_vsj, str_wsr).
                   (iterate(bool(STRING <= str_bjj)) /<: []))))
          THEN
            str_tli, str_vwk, str_ndc, str_mce, str_xtj, str_gzh, str_ahg,
            str_muu, str_bdi :(
              arity
                (struct
                   (str_fqm: str_mjv,
                    str_yal: str_wus,
                    str_hsv: FALSE,
                    str_reb: INTEGER,
                    str_ahi: str_csu$0,
                    str_pgw: str_uza$0,
                    str_eax: str_fsh$0,
                    str_kmv: str_lus)
                   'str_ljf) <=
              {{NAT,
                str_rox,
                str_tbh,
                str_fza,
                (str_vrc$0 |-> str_iui),
                str_yqe$0,
                STRING}}
            )
          ELSIF
            not
              (#(str_cdk).
               (str_icj /<: NAT =>
                #
                  (str_xkw, str_xwv, str_awk, str_bby, str_bzt, str_dwb,
                   str_gih, str_fsv, str_nri).
                (not
                   (!(str_irf, str_bdc, str_nho, str_jmr, str_bfv).
                    (not(MININT /<: MAXINT))))))
          THEN
            str_qfg, str_pli, str_qhg, str_xph, str_okz, str_wmt, str_evn
            :=
            [str_enw,
             NAT,
             MININT,
             str_ywp,
             FALSE,
             [(front(INT'str_tia)),
              str_ymi$0,
              str_wsk,
              (str_sew$0(TRUE)),
              rec
                (str_cjw: str_qsg,
                 str_oxm: str_dob$0,
                 str_msv: str_nim$0,
                 str_fvg: TRUE,
                 str_pgd: NAT,
                 str_ebv: str_nyw,
                 str_tqi: bool(NATURAL1 < FALSE)),
              NAT1],
             str_fam$0]
          ELSIF
            not
              (#
                 (str_uld, str_ojy, str_xih, str_jiu, str_jlp, str_qni,
                  str_lyj, str_asl, str_kor, str_zky).
               (not
                  (!
                     (str_moo, str_pms, str_zld, str_oku, str_bai, str_xng,
                      str_mst, str_nga, str_wlo, str_oax).
                   (not(str_qvm$0 <= str_wua)))) &
               (str_tpu = FALSE <=> str_biy$0 /<<: str_iel$0))
          THEN
            str_bpc, str_uvr, str_jbg, str_uxf, str_zuk, str_qbp, str_hcs,
            str_vnd, str_hjc
            :=
            ((str_jok$0 +->
              struct
                (str_vmb: NATURAL,
                 str_smo: [],
                 str_nfu:
                 UNION(str_vli, str_yya). (str_ujj /: str_ryk$0| str_fao$0),
                 str_kkp: str_mmh$0,
                 str_qmn: str_xzj$0,
                 str_qax: str_rac$0,
                 str_jrt: NAT)) >->>
             { str_xyr, str_pmt, str_hyj, str_dqk, str_gme, str_qoz, str_cyx
               |
               str_qnp = str_fky })
              (rec(str_cbo: {}))
          ELSIF
            not
              (!
                 (str_agb, str_cmg, str_wbf, str_ikj, str_eau, str_gbi,
                  str_voo, str_yzv, str_qsg, str_cml).
               (str_mug$0 /<:
                { str_szo | str_cov$0 >= str_lcg }
                  (str_xbp$0 >->> str_tzv$0'str_vqf)))
          THEN
            WHILE
              str_rwh$0
              |->
              {str_zpe,
               { str_zkz, str_wri, str_xzf, str_ugx
                 |
                 !
                   (str_gmu, str_nhx, str_laj, str_ope, str_grw, str_zxt,
                    str_zka, str_spt).
                 (str_vud$0 /<<: 9) }} :
              str_oqa({} |-> NAT1)
            DO
              skip
            INVARIANT
              bool
                (!(str_gur, str_uje, str_juy, str_ian).
                 (not(str_bvj$0 <= str_koa$0))) >
              rec
                (str_wem: str_fke,
                 str_wpq: str_ppu$0,
                 str_asb: str_pjl,
                 str_jgm: str_gje$0,
                 str_bin: bool(str_emm > BOOL & [] /<: NATURAL1))
            VARIANT
              (TRUE
               |->
               {struct
                  (str_afa: str_gpv$0,
                   str_mse: NAT,
                   str_gxv: 69,
                   str_yzl: str_yxs$0,
                   str_tyg: str_pem$0,
                   str_qhi: str_pxb$0),
                str_grs$0}) +->>
              struct(str_uid: NAT, str_vxy: str_ove$0'str_mum'str_kcr)
            END
          ELSIF
            not
              (#
                 (str_oir, str_dyg, str_bwj, str_dwq, str_qfc, str_yhp,
                  str_xcr).
               (str_mve /<: MAXINT)) &
            not
              (!
                 (str_any, str_vjm, str_acr, str_all, str_lel, str_bjl,
                  str_lyb, str_bzt, str_dba, str_bsv, str_gpa).
               (str_bwq$0 >= str_fxk$0 <=> str_qel$0 /: INTEGER) <=>
               NAT < str_vdl)
          THEN
            str_qbk, str_vry, str_ckw, str_pgw, str_yge, str_rzm, str_jsc
            :=
            [TRUE,
             str_syy$0,
             (btree(str_dso$0)),
             {(const(str_cvy$0)), [str_scn, str_vko$0]}'str_nuo,
             {str_fmz$0, str_rah$0, NAT1, FALSE, str_ibh$0, str_xxy$0,
              str_dzh$0, str_aro$0}]
          ELSIF
            #(str_iny, str_lsj, str_gdt, str_qng, str_hms, str_tlq).
            (!(str_seu, str_mcp, str_zzt, str_hin, str_xfp).
             (!(str_egy, str_oqf).
              (str_scc$0 /<: str_vxq =>
               #(str_aru, str_vll, str_qlr, str_uzp, str_fis, str_oib).
               (str_gpr$0 = NAT1)))) &
            (str_ucj > NAT1 => str_tke : str_pmb$0)
          THEN
            str_eva, str_kdq, str_brz, str_bba, str_qeh, str_jis
            ::
            rec
              (str_jli: (dom(MAXINT(BOOL(str_qxo$0)))),
               str_xtz: str_tca,
               str_gnn: {str_qge, str_ard$0, str_ajr$0},
               str_zub: str_csl$0,
               str_ann:
               rec
                 (str_dvv: str_kkw$0,
                  str_tgq: str_gce,
                  str_gxo: BOOL,
                  str_ekg: NAT1,
                  str_xzv: str_plo$0),
               str_jaz: str_raq$0,
               str_ndb: str_fss$0)
              'str_oqc
          ELSIF
            !
              (str_tca, str_yio, str_uks, str_swp, str_nlr, str_jqy, str_mmi,
               str_jwv).
            (TRUE = MININT or
             str_ley$0 /= (const(BOOL ** [str_lyw, str_wbo$0]))'str_emb)
          THEN
            skip
          ELSE
            str_fgl :(
              #
                (str_lsy, str_jlg, str_llv, str_xfi, str_ixa, str_dtp,
                 str_nkq, str_jko, str_nde, str_xli).
              (!(str_znn, str_urz, str_lea).
               (not
                  (#(str_hwe, str_wlk, str_vov, str_mvf, str_ktv).
                   ((str_jbp$0 /= TRUE => str_qtx /: str_yom) =>
                    #(str_ety, str_obn, str_qoa, str_toz, str_mqz).
                    (str_eym < str_bsa$0)))))
            )
          END
        ELSIF
          rec
            (str_mpg: str_gjb$0,
             str_tjc: str_hzt,
             str_kyk: str_qss,
             str_xno: str_nog$0,
             str_kzg: ({} >->> ((str_ibz |-> str_stm$0) |-> str_der)),
             str_uoh: INT) <:
          { str_iwa, str_dva, str_uvc, str_vzy, str_gnn
            |
            !(str_vai, str_voc, str_pxk, str_zue, str_jhw, str_oqm, str_ofr).
            (str_epz$0 < str_ntg$0) }
        THEN
          str_xdr, str_wcm, str_vko, str_dhy, str_wxu, str_esi, str_bkz
          ::
          rec
            (str_xgk:
             rec
               (str_abm: str_hwv,
                str_dbo: (NATURAL , str_zzs$0),
                str_kry: str_cou,
                str_jwb: [],
                str_cnq: str_chs,
                str_wmc: INTEGER),
             str_pul: (INT(str_cwy)),
             str_kdb:
             { str_qqt, str_fpz, str_vtx, str_wkz, str_tac, str_bzx
               |
               bool(str_cmh <<: str_psc) <= STRING })
        ELSIF
          !(str_eja, str_ejn, str_wmx).
          (!(str_rir).
           (str_goo$0 /: NAT1 &
            NAT1 :
            { str_rwj, str_bgr, str_nql, str_hqx, str_kaw, str_yft
              |
              #(str_bkd, str_cok, str_sjj, str_uwa, str_bad, str_hau).
              (!
                 (str_egu, str_trc, str_xnn, str_hyp, str_jfn, str_wqs,
                  str_dwe, str_ckn, str_tve, str_mig, str_rhm).
               (str_njf /: str_pef$0)) }))
        THEN
          str_mjs, str_nnm, str_iik :(
            #(str_imu, str_acg, str_erz, str_cyw, str_jur, str_fzg).
            (not
               (str_kuf >->> (conc(str_dys)) >
                INTER(str_kks, str_jzt, str_tyh).
                (str_woz$0 >= NATURAL1|
                 struct
                   (str_enn: str_ipa,
                    str_khc: str_yfm$0,
                    str_mov: NAT,
                    str_osy: str_dxs$0))))
          )
        END
      END
    END
  ELSIF
    #
      (str_ukx, str_cpg, str_gnr, str_uya, str_rla, str_fwv, str_qai,
       str_zyd, str_nrs, str_hfd, str_gsn).
    (#
       (str_szh, str_ohz, str_cdg, str_gof, str_wnl, str_cdk, str_fgs,
        str_vdh, str_eab).
     (!
        (str_pzd, str_vra, str_ydr, str_lyg, str_oaw, str_ukg, str_trn,
         str_ifn, str_zog).
      (str_she /<<: str_msr$0))) or
    not
      (!(str_ugs).
       (!(str_eqi, str_kyq, str_whq, str_fxt).(str_qvo /: str_ryd$0)))
  THEN
    skip
  ELSIF
    !(str_bqf, str_wzg).(str_pqu /<<: str_xpl) &
    not
      (!(str_wba, str_zrc, str_piv).
       (NAT1 /: str_svj$0 or BOOL <: struct(str_pbn: str_jot)))
  THEN
    str_xjy, str_cpc, str_crc, str_hpm
    :=
    struct
      (str_mxn: [],
       str_ltc: str_ben,
       str_voq: str_nro,
       str_ujy: BOOL,
       str_aqs: [],
       str_gnj: FALSE,
       str_qua: NATURAL)
      (bool
         (str_uwk /= str_arz$0 or
          (not(str_rkc /= str_yqg) & str_nva /: str_aoz)))
  END;

  str_wce, str_skz, str_opd, str_pnv, str_pse, str_mew, str_yey, str_dlu
  <--
  str_lti
    (str_hlc, str_ubc, str_tgn, str_xfs, str_cne, str_zqd, str_dno, str_ktx,
     str_kjj)
  =
  CASE
    PI(str_aas, str_roq).
    ([str_enm$0, str_dfs, str_kay, str_coe$0, TRUE, str_zyy, NAT1, str_vxf] =
     NAT|
     struct
       (str_yns: str_cic'str_mpw,
        str_pth: TRUE,
        str_gqg: (min(str_pjy)),
        str_dkc: str_zoh$0,
        str_pxc: (str_epj$0 -->> str_tuf$0)))
    OF
    EITHER
      ([MAXINT'str_umo'str_iqv] |-> str_fkv$0)
      ,
      (((min(str_czm)) || str_drf$0))
    THEN
      str_frv'str_rmd
      :=
      infix
        (PI
           (str_rvr, str_oge, str_vuh, str_bih, str_fgc, str_dno, str_lcl,
            str_jxh, str_pxq).
         (!
            (str_exv, str_bjy, str_bqb, str_mxf, str_lyy, str_pwm, str_ecp,
             str_zxj).
          (str_hvl : str_ljk$0)|
          STRING)
         |->
         {str_zup,
          str_obb,
          str_yus$0,
          str_kqx$0,
          struct
            (str_xij: bool(INT <: str_gbp),
             str_oiy: str_efb$0,
             str_oxx: str_vjc$0,
             str_cbf: TRUE,
             str_dpd: BOOL,
             str_yvz: str_syx$0),
          str_lqk,
          str_ynf,
          str_khw}) ;
      PRE
        !(str_bia, str_vpe, str_nmo, str_mdw, str_rlx, str_llp).
        (!(str_lfy, str_zgv, str_shj, str_zbz, str_lnz, str_tdu).
         (str_sll = str_iyr , str_ltl) or
         !
           (str_yhd, str_boq, str_igl, str_bbz, str_ror, str_uks, str_ilx,
            str_itx, str_css, str_nyi, str_iwp).
         (str_oin <<: str_win))
      THEN
        LET
          str_guf, str_vbf, str_uzr, str_pin, str_qfb, str_zqd, str_rme,
          str_xlc, str_czx, str_qrl
        BE
          str_akl
          =
          [(max
              ([MININT,
                str_the$0,
                str_nyw$0,
                INT,
                str_gkr,
                %
                  (str_mlz, str_mqx, str_ocs, str_amz, str_uvp, str_zyx,
                   str_smu, str_mfk, str_exh).
                (str_exu$0 <<: TRUE| str_pmr),
                str_sdd])),
           bool(str_lpe : INT),
           str_arg$0,
           ([NAT, str_pzl, str_haw$0] , TRUE),
           str_ylz]&
          str_wak
          =
          [str_apk,
           (str_fnz , str_cwj),
           str_wai$0,
           { str_xdj, str_wew, str_uot, str_ctg, str_zbw, str_oqs, str_pel,
             str_unx, str_wno, str_baj
             |
             MININT <<: [] },
           bool(str_bnu /<<: str_dlf$0),
           ([str_kic$0, str_uag, str_slg$0, FALSE, NAT1, str_mie, str_pwc$0,
             str_dve$0]
              (str_jwi$0)),
           []]&
          str_ksv
          =
          (bool
             (str_wzq$0 /<<: str_ysq <=>
              rec
                (str_tia: str_fps$0,
                 str_xjp: MAXINT,
                 str_pqv: str_bxp,
                 str_lbm: str_fxu) /:
              TRUE)
             ("str_heg"))
            'str_usx&
          str_fed
          =
          {(subtree
              ({bool
                  (#
                     (str_hnf, str_bxa, str_wfm, str_pck, str_gad, str_zij,
                      str_yqn, str_zpu, str_dvt, str_mzr, str_ftl).
                   (str_ppi$0 = INT))})),
           str_scn$0,
           rec
             (str_qep: str_rwy$0,
              str_umo: NATURAL1,
              str_mpn: str_bff,
              str_asw: str_sex$0,
              str_gel: str_mnl$0,
              str_zsg: str_edj,
              str_nih: INTEGER)}
            'str_wzr&
          str_eca
          =
          [[{TRUE}, MAXINT, 559, "str_mes"],
           (str_sbq$0(str_izy))'str_sgh,
           INTEGER]
            'str_wrl
          ,
          str_rha&
          str_cnb
          =
          {str_vpg$0,
           MININT,
           INTER
             (str_iny, str_fdh, str_rdy, str_ajm, str_fbd, str_rgw, str_kex,
              str_wqo, str_opu, str_ueo, str_grq).
           (!(str_wgs, str_eqc, str_ado, str_xaz).(not(678 > str_erv$0))| {})}
            (rec
               (str_ctv: NATURAL1,
                str_ogq: INT,
                str_bmh: str_yua,
                str_lbl: str_zdu$0,
                str_deg: str_qdd,
                str_kcs: NATURAL)
               (str_elz$0))&
          str_aky
          =
          PI
            (str_xvh, str_edy, str_qdt, str_njr, str_ezn, str_dee, str_czv,
             str_toy, str_zrl).
          (#(str_yfz, str_ogi).([NAT1, str_iqk$0] /<: str_pxs)|
           {str_vfo, [], str_sxk, str_qoc'str_ork, {}})
          |->
          MAXINT&
          str_cbw
          =
          UNION(str_rwc, str_xsn, str_skf, str_xmt, str_ako).
          (str_wme$0 > TRUE|
           bool
             (!(str_uie, str_rrc, str_nsc, str_sai, str_lbf).
              (str_rdl$0 <= str_msx / str_qst$0'str_plw))
             'str_fjc)
        IN
          skip
        END
      END
    OR
      [struct
         (str_hfw: str_odo, str_ptb: (FIN1(str_hcz$0)), str_kas: str_kfj$0),
       bool
         (TRUE <=
          INTER(str_plw, str_jvi, str_jyc, str_zxa, str_wqy, str_aiz).
          (BOOL <= MININT| str_zjf$0)),
       str_zbs'str_gpv]
    THEN
      str_cww, str_rks, str_cza, str_kpt, str_qmk, str_yfx, str_suc :(
        #(str_exu, str_ksm, str_luv, str_evb, str_mrm, str_dut).
        (NATURAL <:
         {str_itv$0,
          str_qow,
          rec
            (str_yfz: {},
             str_zpv: str_ctp$0,
             str_ong:
             rec
               (str_oov: NAT,
                str_jde: str_yat$0,
                str_dmq: (rev(str_joy)),
                str_wqm: str_kfj,
                str_xjo: INTEGER,
                str_oiy: str_hzz$0,
                str_him: bool(str_wer$0 > {})),
             str_ljx: MAXINT,
             str_aiu: BOOL,
             str_ewp: str_ayg$0)})
      )
    OR
      {struct(str_yrj: str_hcv$0),
       (INTEGER ** str_tsl),
       str_mfw$0,
       str_ags,
       NAT,
       rec
         (str_gap: str_xhn,
          str_ncm: str_ubw,
          str_ivu: {},
          str_mjf: str_igj,
          str_iyp: str_evr$0,
          str_qnx:
          (top([] |>> { str_pbs, str_fon | str_tkr$0 /<<: str_rqv$0 })),
          str_ryg: str_yqe,
          str_qwn: str_sxx$0)}
    THEN
      str_rrx, str_zht, str_usn, str_bpw, str_rju :(
        !(str_gyy).
        (!
           (str_rii, str_pei, str_dzz, str_bsi, str_fxe, str_xlf, str_ron,
            str_wam, str_ycm, str_dpm).
         (struct
            (str_auf: str_piy,
             str_baa:
             rec
               (str_xiy:
                {MAXINT, str_qyt, str_pzw$0, str_rsy, str_nqj, str_ece,
                 NATURAL})) <=
          [str_zdc, str_uiz$0]))
      )
    OR
      {[],
       str_xil,
       str_pyq$0,
       rec
         (str_zce: str_jnq,
          str_wkw: str_kji,
          str_ucd: str_xzz$0,
          str_uxc: str_spl$0,
          str_gej: str_wbt$0,
          str_yyd: MININT,
          str_rtv: str_fdl,
          str_ekm: NAT1),
       struct
         (str_zpu: str_phy,
          str_drd: str_gcy$0,
          str_eki: str_jlv$0,
          str_euo: str_yvx,
          str_ang: str_yxf$0,
          str_tiw: str_wrn$0,
          str_vip: str_mxh$0,
          str_hxg:
          { str_uai, str_das, str_lbk, str_nwz, str_veo, str_dnp, str_bjc,
            str_gzi
            |
            not(NAT1 <<: str_viv) }),
       str_tca$0,
       rec(str_bhs: str_rnz, str_ngy: str_nyr, str_bmh: FALSE),
       str_rfw$0}
        'str_iuu
    THEN
      ASSERT
        rec
          (str_pgm: str_xam$0,
           str_hyx: (STRING(str_plf$0)),
           str_qyi: {str_uoq$0}) /<:
        {str_pri,
         MAXINT,
         str_uyl,
         str_lwi,
         str_dap$0'str_zpv,
         str_vgv$0,
         str_urz$0}
          ~
      THEN
        str_jbm, str_wea, str_xnt
        ::
        INTER(str_zfc, str_tkv).
        (str_glf > str_ysc|
         {rec
            (str_moa: str_nro,
             str_ptl: STRING,
             str_qxl: FALSE,
             str_ezj: str_hdl$0,
             str_eau: str_anh,
             str_zme: MAXINT,
             str_wcs: STRING,
             str_tvx: str_bhk),
          rec
            (str_kbk: str_wtw'str_vbb,
             str_ngk: str_ttw,
             str_twx: NATURAL,
             str_agu: NAT,
             str_efe: INT,
             str_tsl: str_xbh$0),
          bool(#(str_jnw, str_evm).(str_cir /= str_nvh$0)),
          str_vur,
          str_lbl,
          str_alo})
      END
    OR
      {rec(str_wki: str_cvr, str_rbx: str_rnk),
       ({MININT, str_hnv$0, str_ybb$0, str_rve, str_qrm$0}
          ({str_nbd$0,
            (str_aon$0 ..
             rec(str_oqf: str_dep$0, str_tls: str_ujx$0, str_psm: str_ecc))}))}
    THEN
      str_rwj, str_knh, str_gct, str_jnb, str_wys, str_zdo, str_jpu, str_esb,
      str_bni
      <--
      str_egt
        (rec
           (str_fez: FALSE,
            str_ewz: str_llo,
            str_evq:
            rec
              (str_cxj: MININT,
               str_bei: str_pjw,
               str_mbm: [],
               str_lpy: str_gny$0,
               str_dre: str_kir$0,
               str_eut: str_vgl$0,
               str_exq: str_qgl$0)
              'str_soq,
            str_znl: str_pul,
            str_fly: NAT1,
            str_mbu: ((str_zpb(NAT(BOOL))) , (id(str_vnd$0)))),
         PI
           (str_fow, str_ywu, str_tvd, str_mhm, str_vjc, str_syj, str_yrg,
            str_hbi).
         (#(str_jqp, str_cya, str_ldc, str_wyr).
          ((NATURAL <<: [] or BOOL <: str_qoe$0) <=> str_fue$0 /<<: str_kft)|
          [{ str_hiy, str_yxi, str_cwq, str_jzj, str_vmq
             |
             #
               (str_rws, str_tad, str_weh, str_lpw, str_icy, str_pfi,
                str_pnn, str_nxi, str_jnr).
             (MININT = str_hwj) },
           str_aca$0,
           STRING,
           str_yzv$0]))
    OR
      %(str_dsa).
      (not(str_wxo$0 /<<: INT)|
       { str_uhk, str_xib, str_onu, str_hyv, str_oka, str_uzd
         |
         str_aas$0 /: str_bqb })
        'str_vto
      |->
      (arity
         (rec
            (str_zfg: NAT1,
             str_din: TRUE,
             str_txc: str_lcm,
             str_uqm: MAXINT,
             str_bat: str_tto,
             str_oaz: str_ehe)))
    THEN
      str_geg
      <--
      str_odk
        ([str_ikc,
          STRING,
          str_neb,
          [str_vrd, str_dad$0, str_gsq, str_ies],
          str_mhc,
          str_wec,
          (((min(str_hpq)) |-> (str_kej |-> str_gsz$0)) /\ ([] |-> str_ile))],
         [bool(str_fvr$0 /: str_kck),
          str_taz,
          str_nvu$0,
          str_hev,
          ((MININT <<| str_hyb)(rec(str_xzk: str_cog) ** str_jbc$0)),
          NATURAL]
           'str_lsu,
         [(str_sar$0(str_kxv$0)),
          bool
            (#(str_jxq, str_kkh, str_zgk, str_gxz).
             (not(not(not(str_lly$0 /= str_cfj))))),
          str_mlr$0,
          str_efg$0,
          str_eim$0],
         (struct
            (str_pmd: ((str_urt$0(str_ydn))(str_jyh$0)),
             str_hsc: str_fcr$0,
             str_bjw: NAT) >->>
          bool
            (struct(str_njk: str_qwy$0, str_deb: str_kvt, str_msm: str_veq$0) /<<:
             INTEGER)),
         %(str_ldt, str_vuc, str_otd).
         (!(str_qup, str_erh, str_wsw, str_kkp, str_ooq).
          (#(str_cfd, str_hnb, str_zmi, str_lsy, str_yqn).
           (!(str_uja, str_fkr, str_cpl).
            (#(str_vyk, str_kxm, str_dhj, str_hls, str_crf).(MAXINT <<: NAT1) or
             not("str_mst" : str_wpj$0))))|
          str_ihg$0),
         { str_xjo, str_ntb, str_cpv, str_dzi, str_use, str_hja, str_uul,
           str_ztf, str_wwq
           |
           #(str_hja, str_eju, str_rxf, str_vsv, str_cqe, str_wme, str_qyb).
           (str_qxk > str_ccv =>
            (str_guv$0 <= str_vlm => not(#(str_hrt).(str_kdm$0 = str_pni$0)))) },
         ((str_wai$0(str_vtb))
            ((bool(str_wsi$0 <<: NATURAL) + str_bdc)
             ,
             {(str_sqw |> str_efn$0)})),
         struct
           (str_rsj: str_ryb$0,
            str_qvk: str_wmf$0,
            str_cir: str_ohy$0,
            str_lkk:
            (bool
               (not
                  (#
                     (str_mfl, str_kbh, str_yim, str_rxs, str_bhx, str_txw,
                      str_pfc, str_dpp, str_qpq).
                   (str_env < FALSE)))
               (rec
                  (str_zot: str_cqn,
                   str_hkg: str_wri,
                   str_mac: str_trz$0,
                   str_kkw: str_qqb'str_mes))),
            str_jaa: INTEGER),
         { str_tfu, str_dpg, str_nwq, str_cht, str_epl, str_lxm, str_mhk,
           str_avs, str_dxe
           |
           #
             (str_xyl, str_lui, str_qca, str_cff, str_lbx, str_ygf, str_wdy,
              str_wfq).
           (#(str_gfo, str_sex, str_lpo).(not(str_jhs = str_zjh$0)) or
            (INT <<: str_gby$0 => not("str_jzg" >= str_acd))) },
         rec
           (str_jjf: str_plc$0,
            str_sfc: FALSE,
            str_ujz:
            { str_vhb, str_jwz, str_paf, str_xeg, str_vtl, str_eom, str_mrv,
              str_vjs, str_inc
              |
              bool(str_iqe >= str_rcp or INTEGER <= {}) < str_lmz },
            str_ccd: (str_cda$0(str_byx --> str_bec$0)),
            str_oiu: str_lim,
            str_xwv: NAT1,
            str_ffk: str_qrf,
            str_uzx: str_sfg))
    OR
      rec
        (str_cte: (NAT * {str_rot$0, str_vsn, TRUE}),
         str_ifz: str_sud,
         str_klw: str_gam$0,
         str_vrl: MAXINT,
         str_eaa: str_oim$0,
         str_grj:
         (%(str_zbk, str_vol, str_zzn, str_mnn, str_rvv).
          (str_pbj /= str_qkh$0| bool(str_kux >= str_zzk) -> BOOL) <+
          str_cyb$0),
         str_egx: str_fei)
    THEN
      str_glg 
        (
          (PI(str_smw). (MININT : str_azk| NATURAL(str_lnw))'str_yaz
           ,
           rec
             (str_mai:
              { str_hvf, str_qhh, str_owq, str_npz, str_xlv, str_vog
                |
                str_tag /<<: str_wmk$0 }))
            'str_ffv
        )
        (
          bool
            (not
               (#
                  (str_acw, str_ich, str_qmu, str_pvl, str_grn, str_vqc,
                   str_jfa).
                (not(str_sec$0 > {})) =>
                !
                  (str_xju, str_jwf, str_ejo, str_rya, str_isw, str_vam,
                   str_lis).
                (#(str_xti, str_qyw, str_euh).(str_kjz$0 <: str_kfu))))
        )
        (
          [[((MININT , "str_uzc") * str_jar),
            {str_ghp, INT, str_hsr, str_kmq, str_qgs, INT, NAT1}'str_sak,
            str_kek'str_rst,
            str_wxl,
            INT,
            str_yqq,
            str_nhz$0]]
        )
        (
          UNION(str_aux, str_nes).
          (#(str_wmf).
           (bool(not(not(str_syw > str_ioe$0) => str_tvu$0 : str_tzm)) >=
            TRUE)|
           str_mlh$0)
        )
        (
          fnc
            (struct
               (str_gyx:
                struct
                  (str_zru: str_zfe$0,
                   str_loc: NAT1,
                   str_ddy: {},
                   str_ceq: NATURAL,
                   str_cri:
                   bool
                     (#
                        (str_bjm, str_esl, str_out, str_hfj, str_kyz,
                         str_gvt, str_gms, str_sje, str_yad, str_jof, str_ofl).
                      (#
                         (str_wxs, str_dcq, str_xgz, str_ngg, str_lwd, str_ktx).
                       (str_lyv$0 > str_qnz))))
                  'str_dbe))
        )
        (
          rec
            (str_vcq: {[], (str_nfg$0 / str_mzz$0), str_bgh$0, str_hvz},
             str_gmr:
             { str_vtl, str_lzu, str_jsa, str_czo, str_dar, str_ayw, str_hao,
               str_awj
               |
               MAXINT /<<: str_jyu },
             str_nea: str_iaw$0,
             str_kre: INT,
             str_bpx:
             rec
               (str_naa: NAT,
                str_mlr: NATURAL1,
                str_qvs: str_fet,
                str_zdt: MAXINT,
                str_rac: (rel(struct(str_ytx: str_rjq))),
                str_wmr: str_koy$0,
                str_jhg: str_xjs,
                str_bae: BOOL),
             str_dil: str_pxq)
        )
      
      :=
      INTEGER
        ({ str_ydp, str_hee, str_ecm, str_yyh, str_frv, str_zlh, str_kad,
           str_tvl, str_tbn, str_fxm
           |
           {str_lfq$0,
            str_bba,
            "str_rct",
            {INT, STRING, [], {}},
            BOOL,
            str_hpv$0,
            str_ump$0}
             'str_fds /:
           str_bcm$0 , MAXINT }) ;
      str_gip, str_ems
      ::
      { str_hbe, str_wnt, str_got, str_lgw, str_tgc, str_edh, str_ffg,
        str_bws
        |
        #(str_gyt, str_gjz, str_ggx, str_lzt, str_lbo, str_ffv).
        (str_tav$0 < str_xup$0 or
         NAT1 /: str_nbd$0 or
         #(str_lqz, str_iii, str_wqs, str_ulk, str_kxo, str_dhp).
         (!(str_ewg, str_sio, str_ari, str_xsc, str_quu, str_qte, str_vul).
          (not(str_psd$0 /<<: str_sfc$0)))) }
    ELSE
      PRE
        MAXINT /<<:
        bool(str_mln$0 >= BOOL)
        |->
        { str_wwc, str_osm, str_ols, str_erw, str_xcs, str_fxl
          |
          not(not(!(str_nfz, str_vcz, str_dwr, str_mks).([] <: str_zyj))) }
      THEN
        str_qjs'str_amm
        :=
        str_hft /|\
        rec
          (str_usr:
           (str_dju
              (struct
                 (str_lyl: str_xvg$0,
                  str_fmd: str_bgd$0,
                  str_xaa: str_tih$0,
                  str_ezb: str_hrc) <|
               MAXINT)),
           str_ini: str_ybn,
           str_qmn: str_xnb,
           str_ubn: str_irq$0,
           str_qwk: str_zvw,
           str_wna:
           struct
             (str_wea: INTEGER,
              str_env: str_yir$0,
              str_eno: (id(str_fmt)),
              str_fab: str_esp))
      END
    END
  END;

  str_gbo, str_dnl, str_vvs, str_ksz, str_lfp, str_ncc, str_gzb
  <--
  str_pgf (str_obk, str_gzx, str_xqx, str_don, str_dqv)
  =
  BEGIN
    str_mef, str_buv, str_gqk, str_hqh, str_nel, str_icx :(
      str_qut /<:
      bool
        (#(str_pfj, str_ixk).
         (str_scj$0 /= str_mxo$0 or #(str_utj, str_oud).(str_kau /= str_bsh)) <=>
         #
           (str_hwd, str_yhd, str_wmi, str_pah, str_nuz, str_pcp, str_zst,
            str_swa, str_ats, str_lqi, str_aeo).
         (str_lan$0 /: str_wre))
    ) ;
    CHOICE
      skip
    OR
      SELECT
        !(str_zzl, str_xqb, str_rtb, str_rvz).
        (#
           (str_sfk, str_scp, str_ovc, str_aal, str_xcr, str_slj, str_nfu,
            str_uat, str_bud, str_gvo).
         ([str_egy, []'str_diy] < str_pbw <=>
          (str_yul = str_lni$0 <=> str_uok <= str_orj$0)))
      THEN
        str_cvd, str_jdk, str_dun, str_xrv, str_qxh, str_cag, str_srp,
        str_tbb, str_egj :(
          !
            (str_wfn, str_cat, str_ahu, str_cnu, str_zfz, str_vke, str_gvu,
             str_vcj, str_eyv, str_hvf).
          (#(str_vgm, str_ayx, str_hrr).
           ({[],
             str_xvh$0,
             { str_djh, str_tmf, str_uzh, str_nyi, str_tsn, str_qte, str_npi
               |
               not(str_wep /<<: str_utu$0) },
             "str_xgz",
             {},
             str_jqk} :
            str_jjh))
        )
      WHEN
        not
          (not
             (not(not(str_mfp$0 < str_rfb)) or
              #(str_awo, str_tsl, str_vaw).(str_oyy$0 < BOOL)))
      THEN
        str_ikt 
          (
            str_eci
            ,
            %(str_jea).
            (1 <= str_obb|
             [{str_xer, FALSE, str_lwj, NAT, MAXINT},
              struct
                (str_ixc: ((str_yvo$0 <- str_uha$0) |-> str_nzl$0),
                 str_zja: INTEGER,
                 str_jmg: MININT,
                 str_hru: str_dfq,
                 str_dks: str_rgj,
                 str_myf: NAT)])
          )
          (
            ((first(str_llu$0))([]'str_lep)) <+
            {struct
               (str_cdz: str_ffx$0,
                str_zdh: str_hfb$0,
                str_ruc: INT,
                str_pua: str_mhc$0,
                str_pin: str_jas$0,
                str_ocz: str_zyw),
             INTER
               (str_xka, str_cbu, str_qnf, str_eib, str_xlu, str_moa,
                str_cne, str_knn, str_vrb).
             (str_fgm <<: FALSE| str_meu)}
          )
          (
            { str_jjg, str_cga, str_kzw, str_tny, str_ypp, str_cks, str_oox,
              str_bzn, str_izx, str_kcw
              |
              ({} <: INTEGER <=> not(INTEGER = {})) or
              not(str_eed /<<: str_sdq$0) }
              'str_ohp
          )
          (
            bool
              (!
                 (str_rlh, str_azi, str_tun, str_xsn, str_kat, str_spw,
                  str_npu, str_tlf).
               (not
                  ([{ str_xnl, str_tox, str_ngg, str_xok, str_tlo, str_mvg,
                      str_qrw
                      |
                      not(str_own$0 /: str_ogz$0) },
                    str_glf$0] >=
                   [])))
          )
          (
            iseq1
              (PI(str_nwq, str_rja, str_xpa, str_upr, str_xvp).
               (str_qjz /<<: str_udx$0|
                UNION
                  (str_bem, str_fio, str_zxv, str_gpx, str_sqm, str_nny,
                   str_mce, str_jep).
                (INT <= str_etd => BOOL : NAT| str_zaa)
                  (dom(str_lir$0))))
          )
          (
            struct
              (str_lpa: {}'str_odd,
               str_koc: ((3 , str_erb)'str_htb(rec(str_ifw: str_lns$0))),
               str_uyw: (TRUE(str_omz$0)),
               str_pxo: INTEGER,
               str_qcf: str_rtn,
               str_xar: str_cwk,
               str_hdt: str_qqq,
               str_rpt: str_owi)
          )
          (
            { str_xpc, str_owe, str_gfq, str_pkz, str_cjm, str_gli, str_kzc,
              str_fdw, str_tqt, str_dxc
              |
              (str_lmk /<<: str_eku =>
               !
                 (str_ifz, str_ntn, str_fjq, str_hrn, str_mbj, str_ron,
                  str_tht, str_oou, str_cba).
               (str_qne$0 <: INTEGER)) &
              (str_qjc$0 >= str_vhx & str_upv <<: str_wnk) }
              'str_qzp
              (str_aiu$0)
          )
          (
            FIN
              (((prj1
                   ({ str_pyl, str_anh, str_ejt, str_tca, str_wuc, str_wco,
                      str_tdm
                      |
                      #(str_ooa, str_iis, str_bnn, str_ywe, str_ans, str_cpf).
                      (str_bvs$0 /<: str_eyf$0) }))
                  (str_qqp ** NATURAL1))
                 'str_sjh)
          )
        
        :=
        {(rec
            (str_irn: str_ywp$0,
             str_byw:
             (bool
                (!
                   (str_bqs, str_jik, str_mvy, str_osw, str_mrh, str_reh,
                    str_zwi).
                 (FALSE < str_lgl$0)) <-
              UNION
                (str_ngl, str_wja, str_evu, str_qjb, str_yib, str_lzr,
                 str_bfx, str_bnu).
              (INT = str_ajy| str_ulc$0)),
             str_hqo: MAXINT,
             str_pmh: NATURAL1,
             str_mak: str_ewd) mod
          str_ftu$0)}
      WHEN
        !(str_bzi, str_joj, str_qpu, str_hbr, str_fez, str_ipr).
        (!(str_kam, str_pgg, str_dnh, str_hbp, str_jit, str_tzv, str_rtf).
         (#(str_qqq).
          (!(str_woy, str_tji, str_csd, str_jop, str_bam, str_vxr, str_rgb).
           (str_zhj$0 /<<:
            rec(str_mcl: str_grk$0, str_zmm: str_yie$0'str_dxm)))))
      THEN
        CASE
          (sons([]))
            (rec
               (str_nfa:
                struct
                  (str_xmb: str_nij,
                   str_siz:
                   { str_mzr, str_mva, str_zmk, str_gsk, str_gcj, str_zwb,
                     str_zvp, str_oxi, str_jvg, str_cyf, str_hlw
                     |
                     str_pif$0 < str_yrw },
                   str_npk:
                   struct
                     (str_wxg: str_lxh$0,
                      str_lpz: str_pxg$0,
                      str_yqa: str_euj,
                      str_gwr: NATURAL1,
                      str_soe: str_kcr),
                   str_qii: NATURAL),
                str_bqb: (str_gbp$0 , str_fky$0),
                str_ooq: str_fho,
                str_slp: str_izo))
          OF
          EITHER
            INTER(str_kub, str_rxj, str_qpp).
            (!
               (str_zcn, str_oxf, str_ihv, str_rrz, str_tzv, str_nhl,
                str_pxl, str_btk).
             (#(str_yxg, str_ocf, str_xej).
              (!
                 (str_xyh, str_odl, str_sep, str_eud, str_iwo, str_usx,
                  str_wbr, str_axi, str_kxv, str_ezd, str_age).
               (!
                  (str_rpr, str_jsr, str_ydm, str_bzh, str_nnd, str_ttd,
                   str_yvw, str_scr).
                ([] /<<: str_xne$0)) or
               [] : NAT1))|
             { str_ysf, str_jnw, str_gle, str_dfp, str_qxm, str_pkb, str_dko,
               str_plr, str_gxj, str_dvf, str_tbv
               |
               str_sar <= str_zda })
          THEN
            str_ghm'str_qmk
            :=
            rec
              (str_xlw:
               {str_ruj,
                {struct
                   (str_fcj: str_bld$0,
                    str_rcc: str_mgl,
                    str_rjo: str_srf$0,
                    str_acz: TRUE,
                    str_phq: NAT,
                    str_ptx: NAT1,
                    str_bre: str_ceb$0),
                 struct
                   (str_nyo: str_hex$0,
                    str_gue: TRUE,
                    str_mcc: bool(not(str_uxw$0 /<: STRING)))},
                str_hve$0,
                str_fnb,
                BOOL,
                MAXINT,
                str_vuu$0,
                INT},
               str_cls: str_rrw$0,
               str_tmm: MAXINT,
               str_jzf: str_jqu,
               str_dec: str_kxg,
               str_brp: str_dls)
          OR
            iseq
              (rec
                 (str_dpg: str_clb,
                  str_gjq:
                  [[str_yyt, BOOL],
                   struct
                     (str_upw: {},
                      str_wxj: str_lek,
                      str_hvp: str_iyq$0,
                      str_bao: str_kbw$0,
                      str_tgr: str_nek,
                      str_gij: MAXINT),
                   ((UNION(str_aam, str_asp, str_nyb, str_wtr, str_ffs).
                     (str_igx < INTEGER| str_bul$0) ;
                     str_xfd$0)),
                   STRING],
                  str_zze: NAT,
                  str_fhk: 2))
          THEN
            str_gla, str_ejl, str_ifp :(
              ran(bool(str_fbp$0 > NATURAL1)) >=
              struct
                (str_wss: {},
                 str_zeu: str_znf$0,
                 str_yzs: str_fxw$0,
                 str_frs: (NATURAL1 * bool(str_pzj$0 : str_qud)),
                 str_htr: NAT,
                 str_whv: str_ctg)
            )
          OR
            {(POW1(str_hws$0)),
             (str_rbu$0 , NATURAL),
             bool
               (!
                  (str_nbp, str_zcr, str_riw, str_gmc, str_qyp, str_kkk,
                   str_qcz, str_zth, str_uqn).
                (str_jul >= str_fsu$0 <=> str_gsz = str_lgd)),
             str_klf,
             str_jmj,
             str_agm$0,
             { str_wgi, str_eco, str_pcf, str_dfs, str_drq, str_kor, str_uyi,
               str_ztm, str_yzr
               |
               str_vvz = str_goe }}
          THEN
            CHOICE
              str_edo 
                (
                  bool
                    (not
                       (#(str_mgl).(FALSE = FALSE) &
                        !
                          (str_ctc, str_rad, str_shi, str_isu, str_dok,
                           str_dcn, str_bwt, str_uql, str_csp, str_zds,
                           str_ift).
                        (#(str_ipc, str_tpj).(NAT1 /: str_ack$0))))
                )
              
              :=
              {{str_mfl, INT, [], str_zzq, "str_llf", str_ogh, str_afi$0,
                BOOL}
                 'str_efh,
               struct
                 (str_gkp: str_xyr$0,
                  str_kgp: str_atm$0,
                  str_axh: NATURAL,
                  str_ohr: FALSE'str_rer,
                  str_eqc: str_nfj),
               INTER
                 (str_iam, str_yjz, str_gvr, str_dwr, str_fki, str_wfe,
                  str_glx, str_fba, str_tji, str_xdr, str_ffe).
               (MAXINT <<: TRUE| MAXINT),
               (NAT1([]))}
            OR
              str_xcp 
                (
                  bool
                    (!(str_ksj, str_srj, str_pll, str_gxe).
                     ((str_nwm$0
                       ,
                       struct
                         (str_qij: str_ihy,
                          str_hal: NAT,
                          str_wyf: str_exz,
                          str_raj: INT,
                          str_twi: MININT,
                          str_uaz: str_trl))
                        (STRING) /:
                      SIGMA
                        (str_ggp, str_kha, str_xlg, str_gfq, str_qbb,
                         str_wnm, str_gsf, str_mdb, str_gwr, str_cfv).
                      (str_smo$0 < NATURAL| MAXINT)))
                )
                (
                  bool
                    (UNION
                       (str_fmf, str_nnb, str_bdu, str_ava, str_meh, str_sun,
                        str_hel).
                     (#(str_dpb, str_erz).
                      (str_nzm >= str_vxs$0 => str_ztw <= str_vmh$0)|
                      {}) /<:
                     (seq(TRUE))'str_hre)
                )
                (
                  struct
                    (str_cqj: str_llh,
                     str_flv: MAXINT,
                     str_aak:
                     rec
                       (str_pks: str_mft,
                        str_njo:
                        PI(str_onj, str_oir).
                        (str_qhn$0 <<: str_sow$0|
                         PI
                           (str_cpr, str_qer, str_zja, str_vqu, str_zqt,
                            str_dwr, str_meb, str_juc, str_wcx, str_npy,
                            str_hxe).
                         (TRUE <<: str_rhm| str_ens$0))),
                     str_pxc: str_nio$0,
                     str_dxn: str_fll$0,
                     str_cgv:
                     {(NATURAL >-> MAXINT), str_ttq, (MININT(str_dmd$0))},
                     str_jjf: str_ivq$0)
                )
                (
                  ([NATURAL1, NAT1, {}, str_eaz, str_ymo$0, str_qlq]
                   |->
                   %(str_yes, str_phc, str_jnj).
                   (str_gpz$0 < str_zef| str_hqn))
                    'str_qnp
                    'str_bnn
                    'str_nhx <->
                  str_mqr
                )
                (
                  {(conc
                      (struct
                         (str_uxa: str_mhw$0,
                          str_bbx: ((dom(INT)) |>> MININT),
                          str_kis: str_jwy,
                          str_pam: str_cga,
                          str_zsx: str_cfi)
                         (str_bkv)))}
                    'str_tun
                )
                (
                  rec
                    (str_idm: str_geu,
                     str_twx:
                     (SIGMA
                        (str_daj, str_syt, str_dfs, str_urt, str_txh,
                         str_xea, str_atm, str_twd, str_yvc).
                      (str_ivw : NATURAL|
                       str_rjv$0
                         (SIGMA(str_xkd).
                          (MAXINT /= str_nuu$0|
                           {str_mdo, str_bxp$0} --> str_ape)))
                      ,
                      str_ygp$0),
                     str_dvd: str_uee,
                     str_yrs: {},
                     str_cac: str_bsw$0)
                )
                (
                  bool
                    ("str_vnk" >= str_eyf$0 =>
                     #
                       (str_ehz, str_ezr, str_iyv, str_cwx, str_gll, str_hgg,
                        str_jvh, str_yzk).
                     (not
                        (not
                           (!
                              (str_csi, str_ofn, str_wcq, str_wxs, str_qvu,
                               str_npt, str_tvi, str_qhe, str_xfw, str_xbj,
                               str_wpl).
                            (str_ypa < str_bwq$0)))))
                )
              
              :=
              struct
                (str_usl:
                 struct
                   (str_kbc: str_chq$0,
                    str_evq: INT,
                    str_crl: str_fuq$0,
                    str_ajc: "str_vnf",
                    str_uvf: str_rxg$0'str_hol,
                    str_yrj: str_inm),
                 str_ils: str_djw$0,
                 str_qgx: str_nya$0,
                 str_npb: str_gbs,
                 str_olp:
                 [[str_dbu],
                  str_yiv$0,
                  str_mmo,
                  { str_glf, str_jef, str_yid, str_byh, str_duz, str_byn,
                    str_igb, str_frl, str_vfa, str_she, str_cis
                    |
                    not(BOOL > str_hvl$0) },
                  str_lgi$0,
                  str_zgd],
                 str_gey: str_iwj$0)
            END
          OR
            (INTEGER
               (struct
                  (str_nwl:
                   [(NAT1(bool(str_ogb >= str_ktj$0)))'str_aol,
                    str_wsu,
                    str_qku$0,
                    str_ivs$0,
                    str_rqm$0])))
              'str_nxi
          THEN
            str_fea, str_coa, str_tog, str_qtr :(
              !
                (str_dkd, str_yge, str_ype, str_xke, str_qvv, str_lrl, str_wny).
              (!
                 (str_qkc, str_yzv, str_ifw, str_aej, str_lit, str_ltg,
                  str_rrk, str_dfo).
               (not
                  (not
                     (!(str_jdk, str_kwh, str_wss, str_cyx, str_odr).
                      (!(str_rde, str_tqx).(BOOL /<: str_byz$0))))))
            ) ||
            str_jxs, str_odf, str_apu, str_uou, str_wee, str_uln, str_fjz,
            str_xce, str_rwe, str_bhz
            ::
            rec
              (str_aes: str_hzk,
               str_qix: NAT,
               str_kfo: [str_qmf$0, NATURAL, FALSE],
               str_jck: str_rgj$0,
               str_oib:
               SIGMA
                 (str_zwg, str_lsp, str_kim, str_gfd, str_vqp, str_aej,
                  str_exz, str_cix, str_upt).
               (str_mou : str_pad| str_onf$0),
               str_rpu:
               [(str_xwv$0(FALSE)),
                str_nvw,
                struct
                  (str_gvk: str_kzf$0,
                   str_fyc: [],
                   str_irg: str_and$0,
                   str_ash: str_uhk$0,
                   str_zek: str_sfo)])
          OR
            { str_xxd, str_ecv, str_bmf, str_plc, str_wyq, str_hxz, str_adf,
              str_hqr
              |
              !(str_hkc, str_rla, str_ihe, str_itj, str_zsa, str_bxs).
              (not
                 (#
                    (str_asg, str_zwo, str_dnu, str_rav, str_ius, str_lob,
                     str_xas).
                  (not
                     (str_kox < str_gjr$0 =>
                      #
                        (str_ixa, str_uzl, str_goi, str_alh, str_rhm,
                         str_rya, str_bsz, str_anl).
                      (str_dsh /: str_bop))))) }
          THEN
            str_gdr, str_ztj, str_muj, str_vhy, str_feh :(
              not
                ([str_env$0,
                  {str_pkh, str_jht, INTEGER},
                  (str_ion$0 |-> str_slt$0)] :
                 NATURAL(%(str_cka). (str_gkj > str_tdk| str_soa$0)))
            )
          OR
            bool
              (!(str_kia, str_hyj, str_wvn, str_dth).
               (!(str_mqc, str_ltt).(str_lvr$0 /<<: NAT) =>
                str_yek /<<: str_jva) =>
               !(str_fie, str_fyp, str_uwu, str_htj, str_jwk, str_ira).
               (#(str_gcf, str_eiv, str_jlh, str_mvx, str_rew).
                (str_tgc <= str_byj$0)))
          THEN
            str_txq, str_fcz, str_yua, str_ihn, str_jzc, str_rgr, str_fhp,
            str_rvs, str_rud, str_xfg
            :=
            rec
              (str_xzv: str_vbh,
               str_fyb: struct(str_gbn: STRING, str_ogt: str_tiy$0),
               str_gkg: str_eok,
               str_wpv:
               (bool(TRUE >= str_dvq) \/ {str_lvc$0, str_tjj$0, str_lld}),
               str_lrg:
               rec
                 (str_ill: NATURAL,
                  str_agd: str_fmu,
                  str_cpo: str_vsm,
                  str_jyk: str_hgk,
                  str_xvx: NATURAL,
                  str_kyu: str_zmw,
                  str_tho:
                  struct
                    (str_bca: str_tlv,
                     str_ike: str_byi,
                     str_nxn: STRING,
                     str_ois: str_uns$0,
                     str_stg: str_ilf$0),
                  str_cfo: str_zhn$0))
          END
        END
      WHEN
        not
          (TRUE ** str_qft /<:
           str_fbd ..
           INTER(str_nrp, str_yxq). (str_lau /<<: str_cey| str_tnz) =>
           !(str_cwt, str_ukj, str_axb, str_alk, str_wby, str_zaq, str_wcs).
           (str_ucu$0 <: str_aol$0))
      THEN
        str_teh 
          (
            bool
              (not
                 (!
                    (str_wcp, str_gbm, str_het, str_tml, str_ifg, str_twi,
                     str_qjg, str_qot, str_dwr, str_pjh).
                  (str_csw : str_ugx$0 & str_kfs : str_jqs$0) =>
                  !
                    (str_jcm, str_nzj, str_kdc, str_tqq, str_qlt, str_ufk,
                     str_tac, str_eqf, str_xir, str_gsa, str_jws).
                  (#
                     (str_riu, str_xos, str_ojb, str_rmc, str_xme, str_taw,
                      str_ypv, str_cex, str_erw, str_ssk).
                   (NATURAL1 <: {}))))
          )
          (
            { str_rqa, str_nlc, str_mbm, str_bgk, str_otn, str_jik
              |
              [MAXINT, FALSE, str_bne, MAXINT, NAT, str_rqu$0, str_gwh$0,
               str_bee$0] <-
              str_omj$0 <
              bool
                (str_hzl$0 /<:
                 {str_yse$0, str_mtm$0, MAXINT, [], str_mzk, str_mto$0,
                  str_toz}) }
          )
          (
            union
              (rec
                 (str_mwp: str_byy,
                  str_ela: str_lqn,
                  str_gbw: str_zsa,
                  str_rnx:
                  ((bool(INTEGER = str_mzi)
                      (PI(str_spx, str_szh, str_lgz, str_odr, str_taf).
                       (str_ujt /<: str_uue| BOOL)))
                   ,
                   str_ghy),
                  str_kcq:
                  { str_lgf, str_agu, str_dky, str_prq | {} : str_qrh },
                  str_lcu: str_ttc$0,
                  str_amg: NATURAL))
          )
          (
            SIGMA
              (str_azc, str_myn, str_iru, str_bmh, str_zkc, str_ucv, str_siv,
               str_oso, str_tdd, str_ejv).
            (str_hak > []|
             mirror
               ({str_tzs,
                 str_fqj,
                 {str_hdu,
                  struct
                    (str_uvx: str_clx,
                     str_ihn: str_sra,
                     str_mkf: str_fxd$0,
                     str_kmg: NAT),
                  rec
                    (str_mvf: str_itz,
                     str_moz: str_sjk$0,
                     str_dcd: str_iiz$0,
                     str_kvx: str_sez,
                     str_lbk: str_uxt$0)}
                   'str_cmy}))
          )
          (
            [str_lua,
             str_aqc,
             str_ssu$0,
             ((-((fnc(rec(str_ejc: str_btr$0)))(INTEGER))) , str_oet),
             INT,
             str_lgq$0,
             str_skg$0,
             FALSE] -
            MAXINT
          )
          (
            bool
              (!(str_gcy, str_uaz, str_aiz).
               (not
                  (#
                     (str_ozl, str_rfo, str_byk, str_uhc, str_rmu, str_wcv,
                      str_euk, str_gih, str_bdp).
                   (str_vnz$0 /: NATURAL))) &
               str_vto$0 < {}) /\
            {str_avh$0, NATURAL, NAT1, str_lta}
          )
          (
            PI
              (str_ufa, str_dta, str_dlw, str_ifl, str_ssg, str_soh, str_smg,
               str_sjk, str_qqg, str_pdz, str_ury).
            ((#
                (str_qci, str_apx, str_myu, str_shn, str_swa, str_xbz, str_frb).
              (NAT /= str_vmv) =>
              str_adh$0 /<<: MAXINT) or
             !
               (str_omt, str_nio, str_lkp, str_hco, str_tpq, str_bdv,
                str_lls, str_qdg, str_hmh, str_wzu, str_mid).
             (str_dhv$0 <<: str_apx)|
             (str_gwz , str_skk$0) |-> str_fic$0)
          )
          (
            (%(str_oaa, str_jcg, str_igc).
             (str_dep$0 /: str_hfa|
              [str_qeq$0, str_oss$0, str_igj$0, str_xzj, {}, str_koc$0,
               str_fab$0] *
              str_xzg) ->
             (str_rei$0(NATURAL)))
              (str_fur(str_gob$0))
          )
          (
            struct
              (str_hcz: str_qzp,
               str_twq: str_rae,
               str_bao: str_buo,
               str_ipk: str_mza,
               str_rqt: str_mtz$0,
               str_hol: str_fym,
               str_ixy:
               (bool(str_izd <= str_teh)
                |->
                {FALSE,
                 %
                   (str_fwn, str_ahz, str_hgq, str_qer, str_dju, str_xkn,
                    str_zwk, str_kgt, str_cdm, str_vpx, str_pje).
                 (str_tar <: str_vhb|
                  { str_jcd, str_ksy, str_flu, str_mek, str_fpl, str_zgb,
                    str_bqk
                    |
                    str_frb$0 : str_knq }),
                 MAXINT,
                 INTEGER,
                 MININT}),
               str_vfd:
               rec
                 (str_vlk: str_pyt,
                  str_kvw: str_vwr$0,
                  str_hli: str_ftg,
                  str_bss: {}))
          )
          (
            { str_gnx, str_nio
              |
              #
                (str_axk, str_zqe, str_hhz, str_lku, str_ctm, str_hgf,
                 str_uyq, str_lop, str_cgb).
              (#
                 (str_lza, str_nnw, str_evu, str_wwp, str_zzl, str_tpc,
                  str_cik, str_lrd, str_cbt, str_blw).
               (not
                  (!(str_pep, str_pvv, str_skg, str_zut).(str_zcn > NATURAL) or
                   str_gpm$0 : str_dfv))) }
          )
        
        :=
        [str_gde,
         {str_vcn,
          STRING,
          str_zvx$0,
          (str_rtc$0[postfix(str_kqg)]),
          str_xfw$0,
          str_oqr$0'str_prd,
          {},
          bool(not(str_caa <= str_vqh))},
         str_xxe$0,
         NATURAL]
      WHEN
        #(str_kyb, str_qnf, str_fzv, str_wss, str_hvk, str_uia).
        (not
           (not
              (not
                 (#(str_tts).
                  (#(str_qgj, str_zqp, str_igu, str_tgi, str_vyc).
                   (!(str_ftk, str_dsn, str_ksk).(str_uyg$0 <= str_mwc)))))))
      THEN
        str_zdn, str_bsp, str_wmx, str_ygm, str_qho, str_rcc, str_oqt,
        str_qap, str_pnh, str_ljz, str_zjz
        :=
        conc
          (PI
             (str_yhp, str_znd, str_vtp, str_pio, str_muz, str_isi, str_pwu,
              str_dzr, str_vpa, str_whm, str_flk).
           ((str_fyh(str_ros)) , INTEGER /<: str_kvs|
            %
              (str_tec, str_efk, str_bif, str_gwb, str_mgk, str_rni, str_pdk,
               str_rmo, str_ytq, str_svu).
            (not(FALSE >= str_nyc$0)| str_jhu)))
      WHEN
        (str_pnr$0 , INT)
          ([(str_ejb |>> NATURAL), MININT, str_srz$0, str_hnk, str_dea$0]) >
        [rec
           (str_uoz: NATURAL1,
            str_cmi: str_tlq,
            str_zna: STRING,
            str_pvm: str_whl,
            str_cyw: str_tri$0,
            str_fre: FALSE,
            str_jdo: str_uoo),
         NAT1,
         {}]
      THEN
        ASSERT
          !(str_cjh, str_loo, str_sdh, str_wdg, str_ddx, str_kvy, str_uxi).
          (!(str_auy).
           (#(str_eyh, str_ytj, str_bic, str_akd).
            (str_hnz$0 < TRUE =>
             #
               (str_tdq, str_uuw, str_ptv, str_hte, str_bzu, str_kvt,
                str_trb, str_fwc, str_bcg, str_eat, str_yyd).
             (str_kpr$0 :
              PI(str_vvb, str_bpr, str_vxq, str_dpo). ({} <= str_imy$0| TRUE)))))
        THEN
          str_vyt, str_ibi :(
            [str_ffj$0,
             str_rms,
             {str_pdi$0, str_vxx$0, STRING, str_haz, str_wqi$0, MININT, TRUE},
             MININT,
             str_fns$0] >=
            str_unt$0 or
            #(str_mxu, str_say).
            (!(str_wwq, str_egu, str_mvp).(not(str_nci : NAT1)))
          )
        END
      ELSE
        str_qrs, str_atj, str_ymp, str_xai, str_rgj, str_kop, str_ghn,
        str_fui, str_pdj, str_bff, str_vrc :(
          {([{str_iwa, str_iqs$0, MAXINT}, INT, str_atj$0] , str_cbf$0)} :
          (str_nji$0 |-> str_edh)'str_pjn
        )
      END
    END
  END;

  str_gpo, str_hnw, str_bcz, str_vdo, str_ndt, str_djy, str_yam
  <--
  str_aqv (str_cmy, str_asn, str_pfg, str_qxd, str_pdk, str_qsu, str_flr)
  =
  BEGIN
    WHILE
      not
        (not
           (!
              (str_drr, str_uda, str_zom, str_fsc, str_iwr, str_zsj, str_kjq,
               str_gek, str_nsp, str_uqe).
            (564 : INTEGER or STRING(NAT) <: { str_lju | NATURAL < NAT1 })))
    DO
      CHOICE
        str_phg, str_agm, str_lgp, str_fxv, str_plc, str_oxx, str_bab,
        str_dxu, str_ixf, str_wmb
        :=
        %(str_krt, str_cny, str_txx, str_xor, str_vre).
        ((str_ogr |-> MININT)'str_czy /<<:
         struct(str_xtr: str_suu, str_nne: str_rpx'str_wfj, str_nok: str_dvb)|
         str_rux mod NAT1)
      END
    INVARIANT
      #(str_cpt).
      ({ str_csb, str_sga, str_gbz, str_ejl, str_sjf, str_fkc, str_bdh,
         str_uia, str_dtu
         |
         str_ths$0 = str_swi } /<<:
       [str_pdv,
        rec
          (str_wxd: str_ucy$0,
           str_zln: str_uwq$0,
           str_vha: str_lqi$0,
           str_wum: STRING,
           str_idp: str_eie,
           str_ife: STRING),
        (seq1(str_yws))]
         'str_kbe)
    VARIANT
      prj2
        (card
           ({ str_ect
              |
              !(str_kdc).
              (!
                 (str_oaq, str_qjc, str_rdd, str_cdr, str_fkz, str_vnh,
                  str_cgz, str_rub, str_ppa, str_cdm, str_ecf).
               (str_vrr$0 : [str_kox])) }))
    END ||
    SELECT
      not
        (#
           (str_hfd, str_url, str_pey, str_tvq, str_rir, str_eva, str_gwk,
            str_zry, str_oiq).
         ([[], str_ntn$0, NAT1, str_xut$0, str_idu$0] <=
          (str_qxq$0 -->>
           rec(str_bmo: str_gpw, str_lny: str_eyb, str_siu: str_qeo$0))
            'str_jvx))
    THEN
      str_gda, str_alc
      <--
      str_ivq
        (rec
           (str_epo: (((FALSE ; str_xxl))'str_stb , (INT(TRUE))),
            str_iyf:
            struct
              (str_dur: str_tpr$0,
               str_onl: INT,
               str_pqh: str_ccx,
               str_jds: struct(str_rid: TRUE),
               str_jyl: str_xog,
               str_asv: str_aba,
               str_yqp: str_kqv)),
         (subtree
            ({ str_jal
               |
               not
                 (!
                    (str_rvg, str_qsm, str_avc, str_lrj, str_mdw, str_mze,
                     str_fvb, str_qor, str_cyx, str_vje).
                  (MININT : str_bpb$0)) }
             ,
             rec
               (str_owm: NATURAL1,
                str_xlr: str_rhk,
                str_ntv: str_lel$0,
                str_rnr: str_ipt,
                str_qji: STRING,
                str_btr: str_two)
               'str_pqy)),
         PI(str_thb, str_txj).
         (NAT /= str_yrz$0|
          bool
            (str_xzt$0 <=
             struct
               (str_bkl: str_klx,
                str_vct: str_hkk$0,
                str_ija: str_tax$0,
                str_lpw:
                [UNION(str_xoh, str_jie, str_fod).
                 (str_hxz < str_uss$0|
                  {str_epb, MININT, str_tau, str_qbx$0, str_ici, str_xgk,
                   str_bms$0, FALSE})],
                str_ord: str_wpy,
                str_nnb: str_his$0,
                str_bob: str_enr))),
         { str_puz, str_tzs, str_ybq, str_mhr
           |
           #
             (str_gfi, str_gxu, str_emd, str_sgo, str_ltb, str_nia, str_phq,
              str_ckk, str_mfw, str_fxh).
           (!
              (str_ddn, str_wtw, str_eiz, str_fbs, str_sys, str_qds, str_dih,
               str_axh, str_mko).
            (perm([8, str_auw, NATURAL, str_afb$0, NAT, str_cvo]) >= str_ftk <=>
             str_cec$0 <: [])) },
         {{str_grm,
           (NATURAL1 >< str_zwu),
           rec
             (str_gtl: str_yxs,
              str_bgv: MAXINT,
              str_rrq: {NAT, str_sqt$0, str_mtn$0, str_tcy$0}),
           (first(NATURAL1))},
          str_gsm,
          str_pqs$0,
          BOOL,
          bool(FALSE : str_ubv),
          MAXINT,
          str_gnu$0,
          str_mld$0},
         SIGMA(str_hio, str_rqv, str_nli).
         (not
            (#(str_vvq, str_rrr, str_xsj, str_tdf, str_sgg, str_cax).
             (not(str_qmo$0 /<<: BOOL <=> !(str_aqr).(not({} /: str_bvj)))))|
          FALSE),
         ({UNION(str_gwg, str_jkt, str_zlp, str_eqo, str_dun, str_cjm).
           (not(str_pka$0 /<<: str_nev$0)| MAXINT |-> BOOL),
           str_xvn,
           SIGMA(str_fhj). (INTEGER = []| str_dvg),
           str_vjr,
           str_ssk,
           str_ysa$0,
           str_szr$0}
            (struct(str_wgp: str_qzl, str_tup: str_mce, str_vnc: str_fbb$0))))
    WHEN
      not
        (!(str_top, str_okn, str_qli).
         (not(not({}'str_sms /<: { str_ogh, str_tou | str_ksu < NATURAL }))))
    THEN
      str_npg, str_cdo, str_nhq, str_lpr, str_pnj, str_hzl, str_kce, str_dpk,
      str_lwn, str_bkq, str_qtt :(
        { str_dfq, str_uvk, str_uae, str_uix, str_pzs, str_luc, str_oej,
          str_znw, str_hzg, str_dpv
          |
          NATURAL1 < str_oqt } =
        { str_zrw, str_aza, str_xky, str_llu, str_bad
          |
          NAT , INT /<: bool(str_nyf$0 : str_nhm$0) }
      )
    WHEN
      not
        (#
           (str_rns, str_tja, str_zax, str_qgz, str_xug, str_syc, str_unp,
            str_hmq, str_qzz).
         (str_sqh$0 : str_afg or
          #(str_ect, str_xed, str_dqq, str_uze).
          ("str_iye" /<<: str_qhp <=> str_rnt -> str_gjh$0 >= str_pjg)))
    THEN
      str_xke'str_rsf
      :=
      (conc
         (infix
            (%(str_bfe, str_tbd, str_kzc, str_dgv, str_xzg).
             (str_ovv$0 > {} <=> str_hsy$0 <: INT| {INT} /|\ []))))
        'str_uij
    WHEN
      not(str_mbf /<: str_bje$0 => "str_rxp" < STRING) &
      !(str_jma).({str_ycc, NAT}'str_fvi <<: INTEGER)
    THEN
      str_kpl'str_ghm
      :=
      (FIN
         (NATURAL1
          ,
          INTER(str_qbp, str_efb).
          (str_ryg$0 /<: TRUE|
           SIGMA
             (str_euj, str_jyj, str_jpk, str_mpq, str_qwo, str_uup, str_mlg,
              str_sbi, str_okq, str_nve, str_qgm).
           (str_kfh$0 /= INTEGER|
            rec(str_hql: {}, str_dhw: str_lbs, str_wvj: NATURAL)))
            'str_ikk))
        (NAT1)
    WHEN
      not
        (str_ccb'str_wua(TRUE) =
         str_phr'str_vas
           (struct
              (str_sal: str_omg$0, str_lut: [], str_oxn: INT, str_vyr: NAT)))
    THEN
      str_ggh, str_wle, str_tmd, str_ack, str_upj, str_oqh, str_kqc, str_ktm,
      str_qmi, str_qxx, str_woh
      :=
      SIGMA
        (str_ztl, str_cor, str_ixz, str_dmp, str_sxo, str_jik, str_gii,
         str_pwc, str_dma).
      (!(str_ekr, str_zrh, str_ucp, str_yvl, str_mjb, str_upo).
       (#(str_qgk).(str_mea < str_ckc))|
       [str_arc,
        STRING,
        str_urv$0,
        FALSE,
        ((prefix([])) , str_aev$0),
        str_ezc$0]) /\
      str_ynw$0
    WHEN
      [STRING, FALSE, BOOL, str_ehx$0, str_jdb, str_hxk] =
      son((str_pxz(str_unj)) |-> ({} |-> str_kwm$0)) <=>
      str_syn /: str_drr
    THEN
      str_uor 
        (
          (str_wkl$0 -->> (MAXINT * str_xbm$0)) >->
          { str_fgt, str_thu, str_rmh, str_rsi, str_fya, str_iyj, str_jan,
            str_dge, str_sod
            |
            str_vnf$0 <= str_eok &
            not
              (#
                 (str_few, str_opm, str_tux, str_ljf, str_idt, str_lin,
                  str_tum, str_xyj).
               (NAT <= str_xbm$0)) }
        )
        (
          struct
            (str_efe:
             rec
               (str_ifn:
                rec
                  (str_vuv: str_udc,
                   str_aei: FALSE,
                   str_gma: str_tdm$0,
                   str_nis: {}),
                str_ywg: (str_dtd |>> "str_rbi"),
                str_zaw:
                rec
                  (str_jhu: str_coo,
                   str_gzn: { str_qua | str_rgl /= str_bka$0 },
                   str_vvn: str_hus,
                   str_xul: TRUE,
                   str_ezp: str_tuz$0,
                   str_pju: str_oem$0)))
            'str_uyh
        )
        (
          { str_xlb
            |
            { str_zph, str_twp, str_zdm, str_wuk, str_htt, str_tqd, str_hbb
              |
              !
                (str_irj, str_wlk, str_hif, str_dua, str_nsf, str_kwk,
                 str_ept, str_oaj, str_kss, str_ucq, str_qqo).
              (!(str_pwf).(str_kna$0 <= str_sfy$0)) } >=
            struct
              (str_wrg: str_saj,
               str_uqp: str_hdg,
               str_zoe: STRING,
               str_eee: str_mkq$0,
               str_dwj: str_rzq$0,
               str_cfw: str_kfh$0) }
            'str_fna
        )
        (
          bool(not(str_azc < NATURAL))
          |->
          {struct
             (str_hck: str_azj,
              str_iat: str_hda$0,
              str_hzt: str_gwx,
              str_cqi: str_qeo$0,
              str_hhi: BOOL,
              str_jgk: str_dkh),
           str_lrg,
           NAT,
           str_lin$0'str_gyu}
            'str_bbk
        )
        (
          struct
            (str_aed: str_nrt,
             str_lve: {},
             str_nti: (str_dsj , str_btj$0),
             str_bba: str_iwh$0,
             str_iug: (str_chi$0 |-> (NATURAL1 |-> INT)),
             str_asy: str_bra) >->
          PI(str_gas, str_afq). (#(str_eql).(str_hik /: TRUE)| "str_qeo")
        )
        (
          {{str_sga, INT, str_xsb$0, str_lrf$0, str_stg$0, FALSE, str_tzt,
            str_udh}
             'str_lyy,
           bool(not(str_smc$0 /: TRUE))}
            (str_asl$0)
        )
        (
          [(seq1
              (struct
                 (str_win:
                  (str_cuw$0 \|/
                   rec
                     (str_jfr: NATURAL,
                      str_hcg: str_jpq$0,
                      str_gtc: BOOL,
                      str_cad: (str_cru |-> TRUE),
                      str_xnv: str_ung$0,
                      str_iop: str_rto$0)),
                  str_bfn: str_fcd$0))),
           (btree(INTEGER))]
        )
        (
          {rec
             (str_kkp: INT,
              str_lto:
              (NATURAL
               |->
               { str_wuu, str_jay, str_ujk, str_enj, str_mkx
                 |
                 str_gdc /<<:
                 { str_rdb, str_ezi, str_bhn, str_aud, str_lhe, str_vts,
                   str_pfp, str_ovn, str_ahy, str_qfi
                   |
                   str_fgs$0 /<: str_qav$0 } }),
              str_uhb: str_tse,
              str_hxw: MAXINT,
              str_kpd: str_sub$0,
              str_mmg: str_akn$0,
              str_tyk: str_hpi$0,
              str_too:
              {str_fny$0, INTEGER, str_ovs$0, str_ciw$0, str_uda, str_oyk})}
        )
      
      :=
      rec
        (str_fvn: str_mld$0,
         str_cct: NATURAL,
         str_qsv: str_lib$0,
         str_yva: str_jls$0,
         str_elx: (str_gna$0(str_qjy)),
         str_zhq:
         rec
           (str_gwj: str_dfe'str_lni,
            str_zrv: [],
            str_qtf:
            [rec
               (str_uys: str_ptf,
                str_bhn: (str_prv(str_vrm)),
                str_wwm: str_ngu$0,
                str_euf: str_vra,
                str_qlh: NATURAL,
                str_avu: str_goc$0,
                str_mxw: BOOL),
             8,
             str_xaj$0,
             STRING,
             TRUE,
             str_xke],
            str_yqn: FALSE,
            str_mtd: str_bcn$0,
            str_xme: NAT1))
    WHEN
      not(str_lgs$0 : str_eas$0) =>
      !(str_dtc, str_hie, str_adi, str_cux, str_esu).
      (#
         (str_vzm, str_sib, str_wil, str_avd, str_alw, str_dud, str_omv,
          str_apr, str_opt, str_kah).
       (#(str_kno, str_uwh).(FALSE /<: INT(str_len))))
    THEN
      WHILE
        bool
          (not
             (!(str_riz, str_cqh).
              (!
                 (str_xry, str_jbk, str_cdz, str_gtg, str_trp, str_hlh,
                  str_fhb, str_wqi).
               (not(str_hro$0 <= []))))) <<:
        str_mzw$0
      DO
        str_ncc, str_zsr, str_vja
        ::
        rec
          (str_tqt: str_jpy,
           str_exi: {({} >-> str_yec$0)},
           str_ous:
           {MININT,
            str_sgc,
            { str_fkb, str_hbt, str_hkd, str_vyx, str_okt, str_zac, str_djj
              |
              {} = str_fza },
            str_xby},
           str_siu: MININT,
           str_usz: (str_rxd$0~),
           str_gou: {str_xum, str_cwz$0, str_ief$0, str_ymy})
      INVARIANT
        !(str_mzg, str_cnj).
        (!(str_dss, str_gea, str_oay, str_lkc, str_moi, str_fuv, str_run).
         (#(str_mbr, str_pet).
          (#
             (str_hiv, str_vlj, str_ljw, str_hed, str_his, str_alr, str_qla,
              str_yjt, str_lfg, str_fkw, str_drl).
           (not({} >= iseq(NAT1))))))
      VARIANT
        SIGMA
          (str_gmm, str_qzi, str_ktu, str_nih, str_kem, str_rfl, str_xyx,
           str_tjl, str_dbz).
        (str_gem$0 : str_alr$0|
         (iseq
            ({str_cer$0,
              str_vah$0,
              [MININT],
              str_xya$0,
              str_bdl$0,
              (INTEGER >< str_abl$0),
              str_kst})) ><
         str_kgu$0)
      END
    WHEN
      #
        (str_jak, str_sea, str_mmc, str_wat, str_qsr, str_fod, str_ewm,
         str_egj, str_skd).
      (not
         (#(str_see, str_qta, str_xcp).
          (str_vnv \/ str_qeq$0 >
           bool
             (!(str_yoh, str_pee, str_kji, str_dcl, str_ftq, str_bfg).
              (str_tld$0 < str_fav$0)))))
    THEN
      PRE
        !(str_vzn, str_eea, str_bcp, str_kns, str_tjc, str_drg).
        (!(str_tga, str_led, str_moc, str_dov, str_pce, str_krb, str_enm).
         (str_tkx$0(bool(NAT <<: INTEGER) ** BOOL) >= str_aiq$0))
      THEN
        SELECT
          str_exa$0 /<: str_ucf$0 &
          (({ str_klb, str_rus, str_laa, str_isf, str_ahm | str_eed$0 /: TRUE } ||
            NATURAL)) **
          str_nve$0 /:
          sizet(struct(str_gkw: str_ntz, str_zfa: str_ibd))
        THEN
          skip
        WHEN
          [UNION
             (str_bop, str_vbw, str_vgi, str_dgn, str_mfr, str_ycq, str_fuj,
              str_gpy).
           (str_qik$0 <: str_bvp$0| str_kkx),
           (bool(str_kmx /= NATURAL) |> 9),
           str_qei$0,
           str_fon,
           {}] <
          struct
            (str_azn: str_cqz,
             str_kmv: str_xdg,
             str_bag: ({} , str_jiu$0),
             str_eja: str_lyd$0)
        THEN
          skip
        WHEN
          #
            (str_nur, str_gss, str_xjr, str_qsa, str_euv, str_alb, str_brd,
             str_itb, str_tzh, str_kuf, str_gnu).
          (str_ynh /<:
           UNION
             (str_fpl, str_rge, str_vcl, str_ibr, str_keq, str_ywx, str_vjc,
              str_hmv).
           ([] /<<: TRUE <=>
            (str_eke = str_ohj$0 or
             !(str_ggy, str_aba).(str_nyr$0 >= str_pew$0))|
            FALSE(str_xms$0)))
        THEN
          skip
        WHEN
          not
            (not(not(str_iji >= str_mhr$0 => str_gkt$0 <: NATURAL1)) =>
             not(str_urk > str_lya & NAT1 < str_fst$0))
        THEN
          str_hlp, str_ngb, str_eqw, str_ppd, str_ige, str_myl, str_cud,
          str_eri, str_glp
          :=
          rec
            (str_jcw: [str_vnz$0, BOOL, str_qxe, NATURAL, str_nan],
             str_xpo:
             { str_ivx, str_uzf, str_pyt, str_ewz, str_ndy, str_cwm, str_ajm
               |
               #(str_lmb, str_aij, str_ske, str_qeq).(str_rep /<: str_knm) },
             str_mky: str_emz$0,
             str_jsj: (str_zgt$0 |-> [BOOL, TRUE, [], str_kjd]),
             str_mxu: NAT1'str_jhq,
             str_coi: str_fdj)
        WHEN
          !(str_jyf, str_vug).
          (#
             (str_mca, str_gaf, str_gqb, str_vcj, str_zoe, str_egr, str_ozx,
              str_zlb, str_amb, str_mje).
           (str_yxt$0 : NAT) or
           str_knm$0 <: str_dzi$0) or
          NAT1 < NAT1 or
          !(str_jjd, str_ixe, str_crf, str_bej).
          (!(str_ldl, str_ceg, str_jsp, str_nlh, str_hxf, str_mio, str_qhh).
           (str_orz$0 >= str_jha$0))
        THEN
          str_pbd, str_uux, str_oye, str_zim, str_qsc
          :=
          [str_mli$0,
           str_wdy$0,
           (str_qfb("str_gwl" , NATURAL1)),
           ({struct
               (str_ong: [],
                str_bnx: str_bpn,
                str_lwh: str_jpp,
                str_fkr: BOOL,
                str_ogv: {}),
             str_tnr,
             str_rbm,
             str_iby,
             "str_zxf",
             FALSE} -->
            str_kdl$0),
           (STRING(MININT))]
        WHEN
          #(str_ulr, str_mrd, str_zup, str_lrj, str_vbp, str_heo, str_wyb).
          (not
             (not
                (not
                   (!
                      (str_lvp, str_lzc, str_uiq, str_uua, str_ckc, str_pkv,
                       str_qip, str_kie, str_vam, str_edj).
                    (#(str_hsj, str_gze, str_ery, str_oeu, str_haz, str_gqu).
                     (str_hqo$0 /: str_sxl <=> INT >= str_rdw$0))))))
        THEN
          str_tbj'str_kqo
          :=
          {str_yqt,
           str_psb$0'str_czg,
           (str_oeo$0 , str_owy),
           PI(str_sxy, str_yzw, str_qvb).
           (str_jzq /= str_vyj|
            { str_gdq, str_cmi, str_cis, str_eqq, str_fbs | str_hni /= NAT }),
           INT,
           str_agj'str_wkx,
           STRING}
        ELSE
          str_hdp, str_jtk, str_ajh, str_zou, str_grb, str_yrh, str_nnj,
          str_rqr, str_drz
          ::
          rec
            (str_yzr: (str_kcz |-> (str_wmg$0 |-> str_iut$0)),
             str_efc:
             (struct(str_tel: str_nie$0, str_qyr: str_zoj, str_eoz: [])
              ,
              str_gil),
             str_buh: str_qli,
             str_sgp: (str_vou(str_bxy)),
             str_ocf: struct(str_wes: str_uvl$0, str_peh: MININT))
        END
      END
    ELSE
      str_nri, str_umm, str_lei, str_hav, str_qqt, str_ywe
      <--
      str_ewj
        (struct
           (str_ptw: str_ejk,
            str_uwn: str_qjr$0,
            str_dqi: [str_odu$0, str_uoq, str_nwt$0, str_cfl$0],
            str_tti:
            ({NATURAL, {}, str_gcs$0, str_gna$0, str_qoe$0, str_luh$0, INT,
              str_lob$0}
             ,
             { str_mgr, str_pmg | str_zxi$0 /= [] })
              'str_ufo,
            str_kqj: TRUE,
            str_min: str_cis$0,
            str_eis: str_xxw))
    END
  END;

  str_jpx, str_kem, str_qzv, str_jkr, str_npj, str_dgy, str_ivu, str_hnf,
  str_vun
  <--
  str_xye (str_kvp, str_qdo, str_hpc, str_qbi, str_obq)
  =
  CASE
    SIGMA(str_wmi, str_pnz, str_ubw, str_ubs, str_gti, str_wlo, str_yjz).
    (#
       (str_irz, str_ywh, str_snt, str_rau, str_tst, str_vrs, str_tkd, str_tlt).
     (not(not(str_jwp$0 /: {str_zgs$0})))|
     str_exn$0)
      (str_zkf$0)
    OF
    EITHER
      INTER(str_fyu, str_oiw, str_pnk, str_jqv).
      (str_yhx$0 /<<: str_dyr|
       [NATURAL1,
        str_mgf$0,
        (str_ggu$0 |-> str_wlt$0),
        NATURAL1,
        (str_ifk(INT))])
        'str_glr ..
      rec
        (str_cbs: str_qsj,
         str_uza: str_bib,
         str_kyu: str_ktz,
         str_hes: str_ksz,
         str_mqj: str_xyu,
         str_iai: INTEGER)
    THEN
      ASSERT
        !(str_bbo, str_zqb, str_nou, str_jra, str_dng, str_drg, str_vqy).
        (!(str_mol, str_qbw, str_fva, str_vbb, str_zeq, str_qpr).
         (not
            (not
               (!
                  (str_vwf, str_juh, str_zkb, str_unu, str_ple, str_nxc,
                   str_jvx, str_drz, str_ems, str_jtz, str_mun).
                (str_jwx > str_ysk$0(str_nip))))))
      THEN
        WHILE
          not
            (not
               (not
                  (NATURAL1 /<: rev(str_xgm$0) or
                   !(str_clz, str_unm, str_rig, str_kxq, str_fkl).
                   (str_yzu >= str_ceu$0))))
        DO
          PRE
            str_wot <:
            {({str_ekm, ((perm(STRING))'str_qif(BOOL))} /\ str_ffo)}
          THEN
            CASE
              struct
                (str_qtc: "str_blr",
                 str_vwf: [],
                 str_niz: { str_nbt, str_krq, str_glq | str_vgb > BOOL },
                 str_mej: BOOL)
                (rec
                   (str_sjg: str_pwf$0,
                    str_hsw: str_bpj,
                    str_cby: str_csk,
                    str_tle: str_fkn$0,
                    str_qzy:
                    rec
                      (str_lnq: STRING,
                       str_mue: str_fwv$0,
                       str_pss: [],
                       str_jvo: str_jqj$0,
                       str_har: str_bcs$0,
                       str_laj: INT,
                       str_jry: str_tnd),
                    str_eea: str_svh$0,
                    str_ufq: str_lpl'str_obx'str_qgq))
              OF
              EITHER
                (id
                   (struct
                      (str_qxu:
                       PI(str_cnf, str_klr, str_elu, str_noz, str_nyd).
                       (!(str_ckx, str_hqi).
                        (INT > STRING or str_zzc$0 /= str_lcb$0)|
                        str_xuq))
                      'str_jjn))
                  'str_ijz
              THEN
                str_zuz, str_gwc, str_all, str_sil, str_xsj, str_nwo,
                str_pas, str_ujj, str_gfc, str_krd, str_hxq
                :=
                {(STRING , ([] , MAXINT)),
                 str_jgj$0,
                 {INTEGER, str_rcx, str_udo$0, str_ihu$0, NATURAL1, [],
                  str_kvl, str_unx},
                 NATURAL,
                 str_wjx,
                 str_uki$0,
                 rec(str_fug: struct(str_gls: str_fos$0), str_unj: str_hsz$0)}
                  'str_kfc
              OR
                str_gba$0 |>
                {str_vmk$0,
                 str_hbu,
                 bool
                   (#
                      (str_din, str_lhu, str_udi, str_pbk, str_qan, str_xjh,
                       str_kja, str_dnp, str_vnl).
                    (not(str_gpm <: MININT)) <=>
                    str_jdq /: str_ppx$0),
                 BOOL,
                 PI
                   (str_fgh, str_xuo, str_uoo, str_chf, str_zqu, str_ips,
                    str_mep).
                 (str_dvn <<: NAT| str_pfn$0),
                 str_fox,
                 str_kmn}
              THEN
                ASSERT
                  not
                    (!(str_aow).
                     (not
                        (!
                           (str_xvk, str_nyb, str_yod, str_khy, str_vci,
                            str_qnj, str_dqp, str_bsa, str_hbv, str_mjo,
                            str_ejg).
                         (#
                            (str_xdz, str_uns, str_ixh, str_rvm, str_zze,
                             str_hby, str_gnn, str_jzy, str_tsb).
                          (#
                             (str_prs, str_zkq, str_qje, str_kkq, str_rpv,
                              str_qli, str_vnt, str_zqx, str_hgv).
                           (not(str_tox : str_opk$0)))))))
                THEN
                  LET
                    str_rbg, str_bth, str_ejc, str_ube, str_mmv, str_wra,
                    str_asc, str_oah, str_fav, str_rmh
                  BE
                    str_dax
                    =
                    bool
                      (#
                         (str_fdh, str_sai, str_mbo, str_qpq, str_mlu,
                          str_iai, str_bse, str_pvh).
                       (#(str_qbz, str_qvq, str_etb).
                        (not
                           (!(str_qth, str_fvn, str_yxy, str_ldq).
                            (#
                               (str_zho, str_uqr, str_qgd, str_ooq, str_jzg,
                                str_bcx, str_upk).
                             (not(str_ady = str_opo)))))))&
                    str_cfs
                    =
                    rec
                      (str_fmz:
                       {str_adk$0,
                        str_ikb,
                        STRING,
                        FALSE,
                        str_ukc,
                        INT,
                        { str_ljo | str_mkf /<: str_pcv }},
                       str_nae: (str_wsn$0(FALSE)),
                       str_gxg: str_tgf,
                       str_kim: STRING,
                       str_mdn:
                       [str_bfl, str_sdk, str_zzf, NATURAL, MAXINT, str_tfk$0],
                       str_wie:
                       PI(str_oxz, str_htz, str_ozu, str_jjs, str_jsy).
                       (not(str_roa = str_fdj)| "str_jev"))&
                    str_yja
                    =
                    %(str_fbr, str_itp, str_uxm, str_eqj, str_hvk).
                    (str_axn$0 > []| str_swg$0) >->>
                    bool
                      (INT : str_lys =>
                       !
                         (str_rtx, str_pjs, str_uji, str_hli, str_wwz,
                          str_kbe, str_dhi).
                       (!(str_ywz, str_ywo, str_qfi, str_szn).
                        (#
                           (str_tij, str_mkr, str_mir, str_eev, str_eml,
                            str_hjs, str_gww, str_eje, str_lyb).
                         (str_wxn$0 : str_ubz))))
                  IN
                    str_dke 
                      (
                        {str_bmr, str_nrd$0}
                        |->
                        (sons
                           (last
                              ({ str_xbp, str_wqp, str_mez, str_unm, str_ajz,
                                 str_tby, str_mgb, str_ths
                                 |
                                 MAXINT <: NATURAL1 }
                               ,
                               bool(NATURAL1 > str_ekd$0))))
                      )
                      (
                        [str_peg,
                         (str_dsd |-> str_dwy$0),
                         [str_jaj$0, MAXINT, str_vkl$0]'str_qud,
                         { str_sqz, str_uas, str_wrb
                           |
                           not
                             (#
                                (str_anq, str_pbi, str_zbv, str_rik, str_bkc,
                                 str_dle, str_hob, str_gcj).
                              (str_wje$0 /<: str_jde)) },
                         str_lwy,
                         str_wry]
                      )
                      (
                        NAT
                        ,
                        struct
                          (str_ynh: str_lty$0,
                           str_irj: str_bsv,
                           str_fld: str_kvz$0,
                           str_cvx:
                           (rec
                              (str_frv: str_fnf,
                               str_dms: str_qrn'str_yeq,
                               str_ojw: str_afh$0,
                               str_bxh: str_ukn$0) -->>
                            str_nba)
                             'str_lpl,
                           str_qvn: (str_gyp(str_ojt)),
                           str_iar: NATURAL,
                           str_oio: str_lix)
                      )
                      (
                        {str_jkf$0,
                         0,
                         ([str_sxb$0,
                           INT,
                           str_wgi$0,
                           UNION(str_lrh). ({} <: str_kjh$0| 986)]
                            (INT)),
                         (conc(bool(MININT <: str_bss)))}
                      )
                      (
                        PI
                          (str_okn, str_urh, str_ybt, str_qdu, str_kjx,
                           str_sbb, str_axf, str_ktk).
                        (str_gat = INTEGER or str_jcn$0 /<: []|
                         INT'str_hql'str_yrx'str_ycz)
                          'str_cwq
                      )
                      (
                        bool
                          (!(str_rob, str_dlx, str_lli, str_hwf).
                           (!
                              (str_uja, str_ors, str_crn, str_utg, str_kgp,
                               str_ypx, str_cmd, str_oph, str_fkf).
                            (str_sye$0 \/ str_yur >= INTEGER)) &
                           not(str_deb > str_vwa))
                      )
                      (
                        str_iod *
                        ((NATURAL ** str_jze$0)
                           (struct
                              (str_lhp: str_hnr$0,
                               str_ljl: str_hou,
                               str_vcz: str_xlx,
                               str_qlm: str_xee$0,
                               str_hin: str_lxd$0,
                               str_htg: str_xzt$0,
                               str_ein: str_rms)
                            |->
                            rec
                              (str_fva:
                               rec
                                 (str_iea: INT,
                                  str_zrj: MININT,
                                  str_gsm: str_inz,
                                  str_pec: str_yxh$0,
                                  str_clz: str_ixl,
                                  str_irt: str_iqx),
                               str_cib: str_klr,
                               str_oza: {},
                               str_xly: str_jns,
                               str_fba: MININT,
                               str_vzb: str_ubw$0,
                               str_bqo: str_uzj$0)))
                      )
                      (
                        UNION(str_txl, str_glk, str_lkh, str_iue).
                        (not
                           (not
                              (!(str_lrv, str_zqg).
                               (!
                                  (str_juw, str_mjr, str_nxm, str_hhq,
                                   str_tod, str_pek).
                                (str_yxw : str_nqh))))|
                         SIGMA
                           (str_mai, str_nvo, str_axu, str_lgo, str_xlk,
                            str_cup).
                         (!
                            (str_kva, str_hjb, str_tvg, str_ohj, str_wgi,
                             str_agw, str_mgj, str_jin).
                          (str_abl <: str_zmj$0)|
                          MAXINT))
                      )
                    
                    :=
                    {[str_doa$0'str_uop],
                     str_ztd,
                     NATURAL1,
                     (str_izw mod []),
                     str_fqa$0,
                     (id
                        (rec
                           (str_bka: str_auy$0,
                            str_dog: str_unt,
                            str_eqj: NAT1,
                            str_glx: (id(TRUE)))))}
                  END
                END
              END
            END
          END
        INVARIANT
          str_ibp |>>
          rec
            (str_tvt: str_mid$0,
             str_lrr: str_dux$0,
             str_zyz:
             {NAT,
              str_kdp,
              SIGMA(str_bof, str_ldg, str_jwq, str_dyp).
              (str_ncn <<: str_rkd|
               [str_bfr$0, str_fbv, FALSE, str_tgc$0, str_olv$0, str_ujn$0,
                str_owr, str_byu]),
              str_ljo,
              str_yhp,
              TRUE,
              str_mrv$0,
              str_fyf$0}) /<<:
          str_qpm <<| STRING
        VARIANT
          [INTEGER,
           bool
             (!
                (str_yjc, str_pyl, str_qbw, str_asy, str_brk, str_tta,
                 str_slm, str_vie).
              ({} /<: str_mcx$0)),
           NATURAL1,
           { str_pem, str_lqy, str_osa, str_auh, str_ryr, str_mnm, str_deq
             |
             (BOOL /= BOOL or str_kyk >= str_veg) => str_znb$0 < str_euj },
           {str_gki$0, str_uge$0, NATURAL}]
        END
      END
    OR
      bool
        (#(str_iat, str_gic, str_agh, str_vqs).
         (#
            (str_dri, str_rcq, str_rtz, str_gzy, str_lvc, str_ahg, str_aua,
             str_ewn, str_twe).
          (not
             (#(str_iim, str_koq, str_qjy, str_xfe, str_elp).
              (str_hpq /<<: str_kgx$0)))) or
         str_aaj$0 /= NATURAL)
    THEN
      str_siy, str_wjo, str_unx, str_vvv, str_qqx, str_vib, str_drx, str_cmq
      <--
      str_oys
        ([str_elc,
          MININT,
          str_dmr,
          (struct
             (str_chw: str_kpr'str_ilo,
              str_bhy: bool(str_wdn$0 <= str_xkg),
              str_qjh: str_gvx$0,
              str_aok: str_fga,
              str_jbd: str_cyk$0,
              str_wdw: str_ovd$0) ->
           struct
             (str_mai: TRUE,
              str_fbr: FALSE,
              str_bqm: NAT,
              str_vyy: (INT |-> str_kaw),
              str_sqf: str_upv,
              str_hox: str_kpy,
              str_jan: str_kgw)),
          FALSE],
         ({ str_cph, str_bnv | INTEGER >= str_yie or str_muh <<: str_hiv$0 } -
          (prj2
             ([MININT,
               struct(str_mki: [], str_cps: str_jlo, str_ckf: INT),
               str_efg,
               NATURAL,
               {TRUE}]))),
         rec
           (str_ihd:
            {str_lxt$0,
             (str_jed$0 , NATURAL),
             str_wez,
             MININT,
             str_fsc$0,
             str_alc,
             (mirror
                (rec
                   (str_hxo: str_qau,
                    str_keh: TRUE,
                    str_bpa: str_bzz,
                    str_oqb: str_imz$0,
                    str_ibz: NAT) /
                 str_pzs))},
            str_hpa:
            struct
              (str_ggy: str_wyd$0,
               str_isb: str_zwq$0,
               str_vuk: str_ayn,
               str_gyc: NAT,
               str_jhv: str_yfk,
               str_gpc: str_bfk$0,
               str_asu: NATURAL,
               str_aoh: STRING)),
         struct
           (str_mds: NATURAL1,
            str_nvl: NAT1,
            str_lzl: (min([])),
            str_gnv:
            (str_cab -->
             [str_jtl$0,
              str_dyz,
              str_apw$0,
              str_wvi$0,
              str_qpa$0,
              struct(str_ved: str_dyq$0, str_ndo: MININT),
              struct(str_cpi: str_ukh),
              str_xdt]
               'str_vni)))
    OR
      [FALSE, str_iex, str_toc, (BOOL(str_ptw)), str_lsx$0] ^
      [(TRUE ..
        struct
          (str_hyl: str_skr$0,
           str_byj: 1,
           str_ftl: str_cnk,
           str_fgo: str_ilw,
           str_shu: str_oas$0,
           str_ljj: NAT,
           str_nwz: str_umg,
           str_ixe: TRUE)),
       { str_jpv, str_qza, str_onl | MAXINT = NATURAL1 }]
    THEN
      str_vbq, str_iol, str_duw :(
        #
          (str_pms, str_ska, str_tyd, str_eyq, str_fkk, str_mbq, str_akl,
           str_arw).
        (not
           (not
              (#
                 (str_ktn, str_xgx, str_txv, str_oud, str_pqf, str_pzj,
                  str_xdd, str_xhs, str_yqt, str_ngu).
               (#(str_jui).(STRING <: INTEGER) =>
                (str_che /: str_bev & str_frg /: str_bsv)))))
      )
    OR
      [[str_mra$0, str_htn$0, INTEGER, str_xvv],
       str_jmb$0,
       str_zsy$0,
       ((str_sej$0 ; FALSE)),
       str_oey$0,
       str_gop$0]
        (struct
           (str_vmg: str_xtg'str_pqm,
            str_hyy: str_ebm$0,
            str_eqp: [str_eys, str_qjk$0],
            str_uvu: str_zxh,
            str_exc: str_rmd$0,
            str_nak: str_ycb,
            str_fej: str_fwo))
    THEN
      str_axe, str_wod
      :=
      bool
        (!
           (str_ehi, str_nwq, str_ity, str_tmo, str_ezb, str_evo, str_tzf,
            str_avo).
         (str_ghv$0 /<<: str_tdo) &
         !(str_fow, str_lxf, str_zwd).
         (str_ekb <: MININT <=>
          (!
             (str_cva, str_ugh, str_das, str_rwd, str_plu, str_tfw, str_evd,
              str_qak, str_jyy).
           (str_tvn$0 <<: str_ext$0) &
           STRING <<: str_uxd)))
    OR
      [UNION(str_mir, str_nle).
       (#(str_dsh, str_wbo, str_yut, str_txv).
        ({} : str_phg or
         !(str_hjy, str_zwi, str_cph, str_zcs).(str_toz /<: INT))|
        mirror(str_swx)),
       STRING,
       str_dul$0,
       FALSE,
       MAXINT,
       str_jik,
       {NAT, str_rbo}]
    THEN
      str_ylj, str_ors, str_nvt, str_vvt, str_dlw, str_ohl
      ::
      [str_mhg,
       (conc
          ({ str_dqu, str_mpa, str_ggm, str_rlx | not(str_wsm /<<: str_lki$0) })),
       (SIGMA(str_plw, str_vwt). (str_oet /= INTEGER| str_qmm$0) \|/ MAXINT)]
    OR
      UNION
        (str_tkc, str_hpg, str_oju, str_lsb, str_dxl, str_wvo, str_poe,
         str_brh, str_yod, str_lts).
      (#(str_usk, str_fks, str_itq, str_rrf, str_ukn, str_voe, str_jdw).
       (str_vmr$0 <= str_fcv$0 => INT <= str_ngc$0)|
       { str_olt, str_thp, str_pxz, str_ccs, str_sav, str_iuw, str_mnf,
         str_fjp, str_ogf, str_xga, str_aqf
         |
         #
           (str_oya, str_evh, str_ire, str_xnh, str_kfh, str_cko, str_dsm,
            str_blq, str_ess, str_mdb).
         (!(str_hbp, str_kya, str_cqw, str_qeb).(not(str_smm >= NAT))) })
    THEN
      str_nry, str_wqz, str_drf, str_bie, str_zmv
      ::
      ran
        (INTER(str_sgk).
         (NATURAL1(str_zec$0) /<: str_rbg |-> 39|
          first([[], str_vre$0, NAT, str_mav, str_gaj, str_hog$0])))
    ELSE
      str_rah
      <--
      str_bpj
        (INTER
           (str_mqf, str_and, str_lpg, str_wku, str_odt, str_urh, str_rox,
            str_mfp, str_cqy, str_yec).
         (str_kyc <<: str_shu &
          not(#(str_syb, str_ufg, str_eac).(MAXINT /<: NAT1))|
          BOOL ^ (str_hmg - bool({} < str_aru$0))),
         (bool
            (#(str_dmj, str_vor, str_kwi).
             (NAT >= str_nee$0 =>
              !(str_yid, str_isy, str_iqu, str_lis, str_zkt).
              (str_zjw > str_xns$0)))
            [[str_vhg, str_miw$0, str_rog$0, str_rvb$0, str_qlw$0, str_rpw$0,
              str_cjb]]),
         (rec
            (str_ioq: [],
             str_seo: str_ujn,
             str_dhd:
             struct
               (str_mgf: str_lmv,
                str_vfw: STRING,
                str_pes: str_hyv$0,
                str_rhj: NATURAL,
                str_mss: str_uom$0,
                str_fmg: str_duo),
             str_kgw: rec(str_ehn: NATURAL1),
             str_nps: (STRING , str_dbr))
            (bool(FALSE <<: str_qie) , str_bqo)),
         {str_ewt,
          str_ure$0,
          STRING,
          [(str_qhm(str_edx$0))],
          str_noj$0,
          struct
            (str_evn: str_dlg$0,
             str_ask: str_frk$0,
             str_uaf: NAT,
             str_vbm: str_yfh,
             str_eur: str_gjd,
             str_yoy: str_taq$0,
             str_dnn: { str_ypw | str_tfo$0 /: BOOL => str_sol /: str_tcj$0 },
             str_emw: str_xjr$0)},
         { str_unu, str_rhx, str_ihi, str_tbj, str_zrg, str_ojj
           |
           !(str_bwx, str_zry, str_xdk, str_jch).
           (str_jvt$0 /<<:
            bool(not(not("str_fir" <: str_thu$0) <=> str_ckc$0 = TRUE))) },
         struct
           (str_yha: (str_kgj$0 .. str_fqc),
            str_pxh: str_eiu,
            str_gqg: rec(str_iby: str_wjn$0, str_mjp: str_qlw),
            str_qer: (btree([str_bre$0, str_vst])),
            str_fjs: MININT,
            str_fpz: str_voi,
            str_ycs:
            (NATURAL1 <-
             rec
               (str_xcr: str_hlj,
                str_hfc: str_qll$0,
                str_jqo: [],
                str_imm: str_vby$0,
                str_plz: "str_ftr",
                str_olv: str_nbc)),
            str_umo: MAXINT),
         ({}
          ,
          (rev
             (bool
                (!
                   (str_ocx, str_fwy, str_hnf, str_btu, str_cnx, str_pce,
                    str_lzg, str_wax, str_blb, str_kpu).
                 ((str_mxy /<<: str_kbe or str_nqn : INTEGER) =>
                  #(str_kby, str_urr, str_bin, str_joc, str_yoo, str_bua).
                  (STRING <<: str_qch$0)))))))
    END
  END;

  str_wxk, str_ngw, str_fxi, str_eik, str_snd <-- str_sli (str_tmt) =
  ASSERT
    not
      (#
         (str_abl, str_hbi, str_rqy, str_stg, str_efc, str_iac, str_ekr,
          str_xzv).
       (!(str_ycc, str_cwg).(str_qlp$0 = BOOL) =>
        not({ str_wkf, str_mqu | STRING > str_kfq } <= str_hfu$0)))
  THEN
    CHOICE
      SELECT
        ({ str_tcg, str_fay, str_plt, str_xjg, str_mrs, str_shq, str_sti,
           str_pou, str_rdo, str_yjc
           |
           NAT : str_xuy }
           ({ str_lfp, str_lpo, str_apa, str_boo, str_xvh, str_bbs, str_cqw,
              str_dbs, str_dhx, str_cbn
              |
              (NATURAL : str_kfy <=> str_qav /: FALSE) or [] /= INTEGER }))
        ,
        str_hkr :
        str_ayj
      THEN
        str_xjb
        ::
        max
          (bool
             (#(str_ple, str_iqf).
              (#
                 (str_lys, str_kyz, str_gcg, str_nvo, str_hvw, str_ync,
                  str_ekk, str_kzi, str_bfw, str_sdy).
               (!
                  (str_dpo, str_iqa, str_fdi, str_yls, str_jpz, str_fai,
                   str_afv, str_gpj, str_bmz).
                (#
                   (str_vxw, str_smz, str_okt, str_cyt, str_bze, str_ajd,
                    str_ljb, str_lop, str_spt, str_vcd).
                 (!
                    (str_nxz, str_iva, str_quw, str_edz, str_ndd, str_prm,
                     str_exo, str_wpd).
                  (str_cte$0 : MININT)))))))
      WHEN
        [str_gyb$0, (str_nuk$0 |-> MAXINT), str_uwl$0, str_ngq$0]
          ([str_les,
            str_isr$0,
            str_iad,
            str_inw,
            (str_gwd$0 .. str_ctw$0),
            MAXINT,
            STRING,
            str_hgr]) :
        str_bcc$0 mod str_lua$0
      THEN
        WHILE
          #(str_jse).
          (not
             (not
                (#
                   (str_zjb, str_uyj, str_gro, str_zmf, str_aef, str_snh,
                    str_xtd, str_ikz, str_ccy, str_ikp, str_npc).
                 (not
                    (#
                       (str_mwp, str_keq, str_apw, str_bwp, str_pfn, str_vrw,
                        str_zia).
                     (str_ins > str_ylr$0))))))
        DO
          str_aga, str_iqt, str_lzi
          :=
          {struct
             (str_uhn: MININT,
              str_vuu: MAXINT,
              str_ckh: str_nkz$0,
              str_auq: (str_ujn + str_xfk$0),
              str_pcc: [MAXINT'str_szj, str_rke$0, str_bqj],
              str_lxx: str_mdt$0)
             'str_mxi,
           { str_kur, str_gcn, str_trg, str_cqu, str_crv, str_yxa, str_ehh,
             str_xgw, str_xdw, str_efw, str_blt
             |
             {} >= str_wtt$0 },
           FALSE,
           INTEGER}
        INVARIANT
          not
            (#(str_tnc, str_owm, str_bpi).
             (#
                (str_vua, str_qro, str_fgv, str_cyl, str_prv, str_szl,
                 str_bgw, str_kbd, str_tyn, str_tqf, str_sql).
              (!(str_ewc, str_vct, str_efr, str_iuz, str_uvr, str_wgo).
               (not(str_nev : str_yrp)))) &
             str_mna < str_pry)
        VARIANT
          {MAXINT,
           (str_vti |-> {NAT1, INT, str_lqv$0}),
           str_qzr,
           (BOOL(str_ywp)),
           str_sox$0,
           rec
             (str_wfz: str_qkp$0,
              str_eif:
              [[], MAXINT, INT, str_fdn, str_wso$0, str_qqm$0, str_yko],
              str_yic:
              struct(str_bwu: BOOL, str_xuh: NAT, str_eqh: str_dqx$0),
              str_cfh: str_kei$0,
              str_hnu: str_qav)}
        END
      WHEN
        rec
          (str_gnq: str_imy,
           str_cpt: INTEGER,
           str_yca: BOOL,
           str_ajv: MAXINT,
           str_ccp: str_zwx,
           str_ovs: rec(str_qgk: str_sug$0, str_bek: INTEGER)) /<:
        struct
          (str_tls:
           { str_nhl, str_aat, str_uxo, str_qqo, str_tdw, str_kef, str_eeh,
             str_hdg, str_rap
             |
             !(str_vji, str_aiy, str_dov, str_ksw).(MININT = str_ros$0) }) ><
        str_ybh$0
      THEN
        str_enp'str_twq
        :=
        {bool(str_aou /: str_twz$0)'str_mff,
         (prj2({str_txu, str_ygo$0, [], {}, FALSE, str_qua$0})),
         ((ran(str_ttf$0)) /\ str_bib$0)}
      WHEN
        not
          (not
             (#
                (str_xiv, str_rqd, str_qre, str_qko, str_svi, str_nme,
                 str_wbw, str_jqs, str_qrl, str_nyx, str_zia).
              (!(str_kfl, str_bfs).
               (UNION(str_hpo, str_ruv). (str_mtl$0 > str_ypj$0| str_qcv) <=
                STRING)))) &
        str_qpd$0 /= []
      THEN
        str_ced'str_ehi
        :=
        %(str_fyl, str_ezq, str_cfz, str_vnf, str_yxh, str_lvg, str_yxm).
        (not
           (!(str_dte, str_jvl, str_nlg, str_byn, str_hvq).
            (!(str_yuk, str_wzn, str_ucb, str_uqg, str_qcj).
             (str_uvv$0 <= BOOL))) <=>
         [] /: str_usi|
         rec
           (str_lth: MININT, str_ewp: bool(INT /= NATURAL), str_tjv: str_mzj))
      WHEN
        not
          (not
             (!(str_foi, str_gyo, str_bts).
              ((son(INTEGER))(str_jrv) <:
               { str_dhh, str_zqw, str_xnp, str_hxs, str_rvh, str_oja,
                 str_abt, str_ndr, str_npe, str_rot
                 |
                 str_ujf$0 /= str_ggq })))
      THEN
        str_lce, str_kyw, str_mvb, str_plp, str_ysh
        :=
        (front
           (struct
              (str_seb: [str_okf$0'str_gxz, TRUE],
               str_eea:
               UNION(str_gbj, str_qfh, str_iua).
               (str_sgc /= str_tfe$0| str_imx))))
          'str_oca
          'str_seg
      WHEN
        not
          (#(str_gqf, str_ser, str_apm).
           (#(str_rnj, str_qwf, str_ioh, str_ncl, str_ghi, str_shc).
            (str_qyj$0 <<: str_pbl$0 <=>
             !(str_kgm, str_ano, str_qmo, str_yed, str_brs).
             (STRING <<: str_bri$0 => str_dcw < INT))))
      THEN
        str_qqv 
          (
            { str_ecz, str_fmd, str_vea, str_yhd, str_oac, str_yrx, str_fob
              |
              !
                (str_mmf, str_kei, str_pcp, str_jki, str_fst, str_afg,
                 str_glp, str_dwl, str_qiz).
              (not
                 (#(str_kcz, str_zhx, str_pbu, str_ibr, str_eqp).
                  (str_ift < INTEGER))) } >->
            str_lfr$0'str_cnb
          )
          (
            PI(str_rts, str_sow, str_bky, str_pyx, str_shg, str_bkf, str_xdg).
            (str_drn /<: NATURAL1 or str_wza$0 /<: str_zmj|
             rec
               (str_jkp: str_wwl,
                str_pyg: str_axc$0,
                str_cnv:
                (str_occ$0
                   (arity
                      (NATURAL
                         ({ str_orc, str_lfm, str_rup | str_wwy = BOOL })))),
                str_byh: NATURAL1,
                str_khn: str_ugn$0,
                str_vpp: str_vdm$0,
                str_tyy: str_ude$0,
                str_vrv: BOOL))
          )
          (
            [str_ltq$0,
             (INTEGER >->>
              struct
                (str_bhh: str_kqq$0,
                 str_cwi: 63,
                 str_gln: FALSE,
                 str_cyp: str_led,
                 str_cgh: INTEGER,
                 str_mzo: {},
                 str_xnw: str_lfx)),
             str_btw]
              ({ str_tnh, str_hzo, str_ssl, str_gob, str_htl, str_bxy,
                 str_upn, str_exv, str_nml, str_afd
                 |
                 #(str_drg, str_gqf).([] <= NAT1 <=> str_slt < NATURAL) })
          )
          (
            str_ffn$0 -
            (size
               (bool
                  (#
                     (str_zwx, str_zps, str_yja, str_pmb, str_xkl, str_sog,
                      str_ifm, str_bcc, str_lnu, str_fdr).
                   (!
                      (str_lsi, str_wgb, str_mdq, str_uxl, str_lnj, str_nfp,
                       str_ycl, str_yfk, str_dwq, str_hct).
                    (MININT /: str_wfn$0'str_jui)))))
          )
          (
            subtree
              ({((str_oju -> {str_rtm$0, (TRUE |-> str_rpa), str_tju$0})
                 ,
                 292'str_jzf)})
          )
          (
            %
              (str_kxq, str_nal, str_lhf, str_mpc, str_sav, str_ucn, str_chs,
               str_nrc, str_mec, str_mom, str_ktq).
            (!
               (str_qxo, str_pnf, str_exh, str_mlm, str_efu, str_sdd,
                str_mme, str_btt, str_kep).
             (str_qim : str_xgr) =>
             (!
                (str_jsq, str_vio, str_ukw, str_hpo, str_rac, str_csy,
                 str_qzt, str_ukw, str_onn, str_rpt).
              (TRUE <= BOOL) <=>
              str_ecn = [])|
             { str_phx, str_qev, str_iji, str_ulz | str_qnm$0 /<: NATURAL })
          )
          (
            struct(str_vet: str_zrh$0) <-
            (first
               (SIGMA(str_lhl, str_wpi, str_dob).
                (!(str_baa, str_guo, str_kch, str_byc, str_xza, str_bqg).
                 (!
                    (str_spk, str_aqp, str_rnu, str_rvy, str_xnv, str_gdc,
                     str_qqz, str_tby, str_xwo, str_cbg).
                  (str_irk$0 = {}))|
                 PI(str_thn, str_uat, str_pna, str_flw, str_zop).
                 (str_jpn$0 < str_yot| STRING))))
          )
          (
            { str_gwv, str_cxx, str_ows, str_wne, str_wfn, str_czl
              |
              not
                (!(str_fya, str_heo, str_hdt, str_exj).
                 (#
                    (str_gvx, str_yoq, str_ixa, str_ixe, str_tno, str_dns,
                     str_tjp).
                  (NAT1 >
                   card
                     (INTER(str_noy, str_rna, str_mno). (BOOL = {}| str_lul))))) }
          )
          (
            struct
              (str_vtb:
               %(str_fka, str_hqs, str_nll).
               (not(str_hya : str_vcs$0)|
                son(bool({} > TRUE) , (str_ilm$0 .. MAXINT))))
          )
        
        :=
        INTER(str_bnl, str_jxq, str_lgv, str_due, str_hhv, str_sba, str_iqs).
        (!(str_gia, str_uih, str_twl).
         (str_hyb$0 <<:
          { str_ovs, str_dzn, str_lqh, str_utg, str_bia, str_hhq
            |
            not(INTEGER /<: str_zqw$0) })|
         rec(str_xlr: str_rgu$0))
      ELSE
        ASSERT
          #(str_arz).
          (bool
             (NATURAL <<: FALSE =>
              !
                (str_okq, str_lpx, str_hir, str_dca, str_nfb, str_npm,
                 str_qap, str_eds, str_gvv, str_jvj, str_qyr).
              (str_lin /<<: MAXINT)) /=
           rec
             (str_emc: INTEGER,
              str_nrf: str_eba,
              str_gev: str_jzy,
              str_ccu: bool(str_kcu$0 /<: str_fck),
              str_kco: str_slz$0))
        THEN
          CASE
            ([str_hqa$0,
              INT,
              SIGMA(str_dqn). (NAT1 <= str_owh$0| str_kif),
              str_jmp,
              NAT,
              str_bpg]
               (str_ees))
              (%(str_oyt, str_hkz).
               (not(str_rqs$0 /<: str_cho)|
                [str_nqr$0, MININT, str_sbh$0, str_qti$0, str_fqz$0, str_xze,
                 str_klu]))
            OF
            EITHER
              bool
                (not
                   (rec
                      (str_dzz: (NAT1 |-> str_vpj),
                       str_cdw: INTEGER,
                       str_mrg: MININT,
                       str_kln: str_vir,
                       str_cks: str_fyb) >
                    %(str_ket, str_imy).
                    (str_kqz <: NATURAL|
                     { str_vyd, str_sqa, str_txv, str_sez
                       |
                       str_dkk$0 <= str_icn$0 })))
            THEN
              str_ejw 
                (
                  ran
                    (SIGMA(str_iiw, str_zcv).
                     (!(str_mfh, str_tnq, str_fca, str_efx).
                      (STRING = str_pia$0)|
                      [str_eys,
                       str_zjt$0,
                       { str_dse, str_ftw | str_hri$0 <= str_kqg$0 },
                       (str_vuy$0 , INTEGER)]))
                )
                (
                  [str_qac,
                   bool(str_tzl <: MININT),
                   INT,
                   ((str_jvp$0 |-> str_ros$0)
                    ,
                    { str_wfp, str_oyw, str_utg, str_eux, str_vif, str_vte,
                      str_clr, str_qwl, str_oxu, str_anc
                      |
                      str_kth = str_nuo }),
                   str_hhb,
                   str_vrz,
                   NAT1]
                    'str_rhe
                    'str_ogg
                )
                (
                  PI
                    (str_spq, str_ygc, str_kbk, str_fcf, str_byb, str_vrh,
                     str_vqw, str_zxb, str_zyd, str_tze).
                  (not(str_osf < INT => str_jch /: MININT)|
                   SIGMA
                     (str_wpu, str_fnx, str_yhi, str_bbx, str_obo, str_spe,
                      str_yuo, str_pye).
                   (INT /=
                    PI
                      (str_ziv, str_aep, str_tig, str_ior, str_qde, str_txb,
                       str_mnn, str_doz, str_gjl).
                    (str_uzk /<<: str_rdn$0| [str_zok$0, str_tfx])|
                    MININT))
                )
                (
                  bool
                    (str_aqy$0 < TRUE &
                     str_kbh /=
                     str_axq$0 \/ %(str_abz). (str_axx$0 = NATURAL1| MININT))
                    'str_ikm **
                  str_rqr
                )
                (
                  bool
                    (#(str_dob, str_cxm, str_xbn, str_wen).
                     (not(str_htz$0 < str_xjk)))
                    ([MININT,
                      SIGMA(str_fsn, str_qrz, str_hvf, str_unp).
                      (str_oph$0 <: str_xsa$0| str_jmw)
                        'str_vsd,
                      [],
                      str_ltt,
                      str_mfp$0,
                      FALSE,
                      str_pgf$0,
                      str_nrz$0])
                )
                (
                  SIGMA
                    (str_wsi, str_lop, str_ikc, str_uve, str_zww, str_hzq,
                     str_etn, str_flm, str_dyf, str_rhc).
                  (#
                     (str_vrf, str_adt, str_tlg, str_yod, str_pno, str_xvh,
                      str_niw, str_olf, str_cew).
                   (NATURAL1 /: FALSE)|
                   (str_per >->>
                    {{str_gbl, {}, NAT1, TRUE, str_wek, str_blr, NAT},
                     str_lzt,
                     MAXINT,
                     TRUE,
                     str_kjx$0})
                     ({ str_dgx, str_vft, str_sed | 4 /: str_uwp$0 }))
                )
                (
                  FIN1
                    (str_cuf$0
                       ([(bool(!(str_jil).(INT < str_mwl$0))
                          ,
                          (str_hbk$0 |-> BOOL))]))
                )
                (
                  {str_gtn,
                   str_omn$0,
                   str_zrc,
                   MAXINT,
                   STRING,
                   struct(str_daf: [str_nvv$0, str_oki$0, str_ybj$0]),
                   [],
                   bool
                     (!(str_wsc, str_vhb, str_hmz).
                      (#
                         (str_qzw, str_xpa, str_dgx, str_jaa, str_itx, str_wzt).
                       (not(str_kuk$0 <<: str_ujp$0))))}
                )
                (
                  {"str_rae",
                   MININT,
                   str_nxo$0,
                   INT,
                   MININT,
                   bool
                     (#(str_eml, str_iru, str_tcr, str_thc).
                      (not(str_fhz$0 /= str_yqc$0))),
                   (str_acr$0
                    |->
                    {{ str_zch, str_zah, str_pbd, str_bcb, str_hrn, str_dtp,
                       str_zdp, str_xhc, str_iuu
                       |
                       str_llf : str_cwx },
                     str_fqm$0,
                     str_vka,
                     MININT,
                     str_xsl,
                     str_fdj,
                     MININT})}
                )
                (
                  struct
                    (str_mcs: { str_dpy | "str_qbq" <= str_cpm$0 },
                     str_lys: MININT,
                     str_pko: str_atu$0,
                     str_kph: ((str_frk(str_oim$0))(str_apm)),
                     str_wjm: MAXINT,
                     str_ven:
                     rec
                       (str_ljr: str_bpc$0,
                        str_rbe: str_crz$0,
                        str_kbq:
                        (struct
                           (str_vid: MAXINT,
                            str_ynf: MAXINT,
                            str_uht: str_ucz$0,
                            str_hbz: str_bwn$0,
                            str_dsg: INTEGER,
                            str_rbx: INTEGER,
                            str_hpl: MININT)
                           (str_izr)),
                        str_iqa: str_wab$0))
                )
                (
                  struct
                    (str_lxs:
                     {{ str_xom, str_ndd, str_nbb, str_qtz, str_qoz, str_spe
                        |
                        str_agu$0 <= str_wpd$0 },
                      str_ncw$0,
                      MININT,
                      NAT,
                      rec
                        (str_jng: STRING,
                         str_tuy: "str_fnn",
                         str_cka:
                         rec
                           (str_lbw: (str_jfr$0(str_sgy$0)),
                            str_eae: str_din$0,
                            str_ulu: NATURAL,
                            str_jme: [],
                            str_wps: str_tpj$0),
                         str_wir: TRUE,
                         str_cmg: str_kgq$0,
                         str_sse: [],
                         str_jut: str_krj,
                         str_ylc: MAXINT),
                      TRUE,
                      MININT,
                      str_qgv},
                     str_pfm: NAT,
                     str_yfl: (NATURAL(str_tgh)))
                )
              
              :=
              {str_ujx, str_qaq}'str_omd
              ,
              (sons
                 ([str_zjq,
                   { str_qgk, str_qzj, str_lmj, str_sbn, str_oln, str_chk,
                     str_zmr
                     |
                     BOOL /= str_rbg <=> str_cek$0 <: BOOL },
                   str_hju,
                   str_efq$0]))
            OR
              struct
                (str_pvb:
                 ({ str_vrj, str_ypx, str_ufg, str_bge, str_ppg
                    |
                    #(str_hgn, str_ktv).(str_lfn$0 = str_qzy$0) }
                    (str_rox)),
                 str_qvp:
                 UNION(str_bxu, str_nvp, str_ozr).
                 (INT /: str_muc$0| str_era$0),
                 str_pbf: str_rjq$0,
                 str_axt: str_wji,
                 str_rvr: bool(str_rfo /= str_ksx),
                 str_npm: str_duo$0) >->
              str_dhu
            THEN
              str_fcn, str_qsu, str_wnk, str_yhs, str_bht, str_ldx, str_ooi,
              str_cjk
              <--
              str_xrf
                ({[str_cpg, NAT1],
                  str_abm,
                  str_wbg,
                  INTER(str_zxb, str_jvi, str_psq).
                  (!
                     (str_ckb, str_jow, str_eef, str_nkv, str_guy, str_qzf,
                      str_hbg).
                   (not(str_von$0 /: str_okd$0))|
                   struct
                     (str_eqi: INT,
                      str_bkx: str_qup$0,
                      str_lso: str_kuy$0,
                      str_xwt: str_zdx$0)),
                  str_odh$0,
                  [],
                  rec
                    (str_rlx: str_mhs$0,
                     str_gsl: INTEGER,
                     str_hyo: str_poa$0,
                     str_dks: str_hex,
                     str_vyk: str_bpq$0,
                     str_cea: "str_wws",
                     str_acs: NAT)},
                 (((PI
                      (str_qkg, str_izo, str_nhp, str_ocr, str_cmi, str_fac,
                       str_qqu).
                    (str_suf : str_hcy| str_hem)
                      (struct
                         (str_lic: (str_skq~),
                          str_mzl: str_rkh$0,
                          str_qan: str_qno$0,
                          str_vem: str_iul$0,
                          str_wrz: STRING)))
                   |->
                   ("str_xyy"(str_mpn)))
                  |->
                  str_bql),
                 ((struct
                     (str_yci: MININT,
                      str_odn: str_evp,
                      str_uxo: str_feu,
                      str_ryd: 4)
                     ({ str_cga | str_qfc$0 <: NAT }
                      |->
                      (rec
                         (str_fqt: str_npx,
                          str_kro: {},
                          str_fdc: str_dsh,
                          str_qug: STRING,
                          str_jyf: STRING)
                         (str_qnw$0))))
                  ,
                  str_pzn),
                 %
                   (str_mfc, str_sfp, str_lxu, str_eje, str_edg, str_zxz,
                    str_xgu).
                 (#(str_bkv, str_smr, str_tvi, str_mes, str_gra, str_hpo).
                  (#(str_jeo, str_orl, str_gne).(NATURAL <<: str_mbi$0))|
                  INTEGER
                  |->
                  %
                    (str_gje, str_zjv, str_mds, str_afi, str_opm, str_dgu,
                     str_msa, str_aec).
                  (!
                     (str_ing, str_wgy, str_eme, str_kkv, str_bnv, str_usd,
                      str_nvp, str_wym).
                   (TRUE /<<: str_xok$0)|
                   NAT1)
                    'str_lmw))
            OR
              struct
                (str_rfl: str_rke,
                 str_uwb:
                 [{ str_xsu, str_qdx, str_uqi, str_dcv
                    |
                    not
                      (!(str_xrq, str_wqd, str_nzu, str_wpl, str_wvf).
                       (str_vjp /<<: MAXINT)) },
                  (INT(str_xmv$0)),
                  str_zsj$0,
                  [],
                  (str_wdn |-> NAT),
                  {},
                  str_wzt,
                  []])
            THEN
              str_oxo
              :=
              struct(str_tus: str_arm$0, str_ila: str_uiz)'str_qyv
              |->
              [NAT,
               (str_ook + str_sme),
               str_hsl,
               str_dkl,
               str_yql$0,
               (str_rnj , (dom(str_tzf))),
               NAT1]
            ELSE
              skip
            END
          END
        END
      END
    OR
      SELECT
        !
          (str_bke, str_wsc, str_nmf, str_gcd, str_jng, str_epj, str_fgh,
           str_yzp, str_rqt, str_dlj, str_bte).
        ((str_qyf'str_unq([])) --> (str_pes |-> str_grb) >
         str_agq$0 .. str_ytl$0)
      THEN
        str_nge 
          (
            str_hzo'str_vgf ->
            ([str_cuk, (str_gmx$0 |-> STRING)](str_nxz$0(arity(str_mrs$0))))
          )
          (
            rec
              (str_gfa: str_crb$0,
               str_jvr: (str_dop |-> str_smj),
               str_dbh:
               (arity
                  ({ str_fgn, str_iyb, str_twa, str_qxa, str_fap
                     |
                     str_kjw = str_gpb })),
               str_fjh: (({str_ngf$0, str_wjc$0} , str_agu)(str_pgp$0)),
               str_izj: str_pdg$0)
          )
          (
            bool
              (not
                 (bool(str_rvn /= str_vyw$0) - str_zux >
                  { str_afk, str_jxq, str_etq, str_djq, str_czv, str_adc,
                    str_cjq
                    |
                    INT /: str_teq$0 }))
              'str_eda
          )
          (
            INT
              (UNION
                 (str_yvq, str_biz, str_pcz, str_ers, str_rfz, str_nem,
                  str_itq, str_lay, str_tuv).
               (!(str_naw, str_qnh, str_usd, str_mca, str_ura).
                (#
                   (str_juo, str_qgw, str_eoa, str_byr, str_for, str_idn,
                    str_boa).
                 (str_zcy /: str_xud$0))|
                rec
                  (str_hjr:
                   {"str_wcq", [], str_jow$0, FALSE, str_kyu, str_vvi$0,
                    str_acz}
                     'str_zsu)))
          )
          (
            [[{},
              (str_scf
               |->
               struct
                 (str_tdk: { str_nrc | BOOL <: str_tcx <=> {} /<: NAT1 },
                  str_rkf: str_lqn$0)),
              str_kdd$0,
              (str_tzm$0 |-> str_ftd$0),
              str_nfe$0]]
          )
          (
            {(INT |-> str_drs'str_vrx),
             struct
               (str_poy: str_afe,
                str_dto: str_vzv$0,
                str_uuw: str_vrf$0,
                str_tup: str_wok$0,
                str_oxl: str_rja,
                str_emh: str_dkw$0,
                str_zsm: NATURAL,
                str_xnf: str_gsf$0),
             MININT,
             struct
               (str_pvt: [],
                str_bpz: str_nqy,
                str_shn: FALSE,
                str_wem: str_bjv,
                str_kgq: str_fva,
                str_gol: str_lcr$0),
             MAXINT,
             INTER(str_sym, str_aae, str_sru, str_oag, str_atm).
             (str_tga <<: str_xoa$0|
              { str_aky, str_dzo, str_iuy, str_cke, str_kkb, str_hpb,
                str_ifu, str_qdr, str_zia, str_zjw, str_vob
                |
                str_sot$0 <: TRUE }),
             str_xdc,
             str_ldg}
          )
        
        :=
        {str_qdc,
         struct
           (str_iop: str_xsb$0,
            str_ooi: str_ihe,
            str_vra: (str_igl(str_xxc$0)),
            str_pyx: (infix(NATURAL1))),
         {rec
            (str_ied: str_jnd,
             str_vzd: NAT1,
             str_gao: str_pqn$0,
             str_wbs: str_kdy$0,
             str_ooz: str_xet$0,
             str_sez: str_ngd$0,
             str_mqd: str_rws$0,
             str_npn: str_run$0),
          str_ars,
          str_awf,
          STRING,
          str_ayl}}
        ,
        {}
      ELSE
        str_upv, str_pvn, str_zdj, str_djw, str_xgz, str_sxo, str_oah,
        str_cij, str_puy
        ::
        { str_wuk, str_xwz, str_vmu
          |
          not
            (str_len$0 /= TRUE <=>
             (not(str_gps$0 /= str_adh) &
              #
                (str_xwm, str_jae, str_gla, str_plx, str_mge, str_hub,
                 str_dsv, str_hrx, str_hle, str_rhr, str_dyz).
              (str_bct /<<: str_eaf))) }
      END
    END
  END;

  str_ixa, str_hyq, str_cou, str_oag, str_bmq, str_ukz, str_jgb, str_zvk
  <--
  str_vyd (str_een, str_lei, str_ont, str_iaj)
  =
  IF
    #(str_uwb, str_uiu).
    (!(str_glm, str_ouu, str_rki, str_djr, str_had, str_ewf, str_med).
     (#(str_jwz, str_hgo, str_ygl, str_rbx).(not(str_prl <= str_avs$0))) &
     (TRUE = [] & str_ddc /<: "str_tse") &
     str_lyi <<: str_snm$0)
  THEN
    SELECT
      {bool(str_ovm <= str_pdc)} <<:
      SIGMA(str_xpu).
      (!
         (str_hqc, str_iep, str_egg, str_otf, str_wyj, str_ggu, str_kai,
          str_dkk).
       (#(str_bev, str_snq, str_eta, str_aqm, str_nxh).
        (!
           (str_apb, str_rne, str_ket, str_bks, str_kjs, str_jwr, str_jvl,
            str_mkj, str_ncj).
         (str_fmg > str_hvl)))|
       str_icm$0)
    THEN
      str_yol, str_dtr, str_ujc
      <--
      str_hor
        (rec
           (str_gyf: str_ygx$0,
            str_stl: str_ova$0,
            str_mig:
            rec
              (str_jpj: str_yfz,
               str_yum: NAT,
               str_oec: str_nla,
               str_oqt: str_pid$0,
               str_ybb: NAT),
            str_ums: str_wmo,
            str_cie: str_zsz,
            str_bfm:
            { str_rjt, str_jtd, str_aja, str_dvr, str_jyx, str_npw
              |
              NAT = NAT1'str_iiz },
            str_wns:
            [str_dyr$0,
             NATURAL1,
             NATURAL1,
             [str_eio$0, str_hsh$0, str_yyo$0],
             str_doh$0]),
         rec
           (str_nkz: str_dxx,
            str_ctv:
            struct
              (str_rma: { str_vsh | [] > str_lbh },
               str_est: bool(str_xhc$0 = NAT1 <=> str_kso : str_ltn),
               str_wan: str_tcd)
              'str_dyy,
            str_dfm: INT,
            str_mng: struct(str_hfr: str_guh$0, str_mti: str_ynp$0),
            str_qxh: str_eti,
            str_mcv: STRING))
    WHEN
      not(not(not(not(not(str_cdu /: str_cws$0)))) => not(INT > str_gsu))
    THEN
      str_dex
      ::
      {NAT,
       INTER(str_yjb, str_dwv, str_nhr, str_nvw, str_dxb, str_rut, str_npa).
       (FALSE /<<: str_bxm| BOOL),
       str_xis,
       rec
         (str_suh:
          {{ str_uzu, str_wbl, str_xqd, str_mnp, str_xny, str_diz, str_xcq,
             str_zrr
             |
             NATURAL = str_zwg$0 }},
          str_yqn: str_enm,
          str_wor: str_dxc$0'str_upo,
          str_lng: NATURAL1,
          str_wwb: str_gba$0,
          str_wxy: str_mew)
         'str_lkt}
    WHEN
      not
        (not
           (not
              (#(str_bha, str_ncj, str_wnj, str_amo).
               (!(str_wqm).
                (!
                   (str_wag, str_qep, str_fry, str_pdu, str_flg, str_hfc,
                    str_itt, str_vvm, str_ntv, str_hol, str_hfj).
                 ({} <= str_nte$0) or
                 str_ncw$0 > str_ypg$0)))))
    THEN
      str_qbt 
        (
          bool
            (INTEGER -->
             struct
               (str_ndp: str_non,
                str_elm: str_tdd,
                str_wah: {},
                str_qji: str_olo,
                str_ydc: [],
                str_mfs: str_mkd$0,
                str_uoa: str_swv$0) <=
             INTER
               (str_lmw, str_xsd, str_lmh, str_dwr, str_ohh, str_ipq,
                str_eme, str_ptb, str_yyq, str_iov, str_rsl).
             (not(not(str_kzz <= str_lfc))| NAT1))
        )
        (
          (2 , (str_txy +-> str_ebc))
          |->
          bool
            (#
               (str_qpd, str_srb, str_uyh, str_nbc, str_eny, str_vza,
                str_nme, str_tnb, str_iok, str_ypl).
             (#
                (str_kys, str_dya, str_owe, str_icn, str_syx, str_uqz, str_wsf).
              (not(str_eez$0 = []))))
        )
        (
          INTEGER +->>
          ((((str_ovt(str_xjd)) , str_feo) ;
            { str_mon
              |
              !(str_vvz, str_luf, str_yfl, str_pip, str_fbc).
              (str_kwv$0 <<: NAT) or
              str_jzh /= str_laf }))
        )
        (
          bool
            (not
               (str_oek <
                bool(#(str_kss, str_uxh).(#(str_mdq).(BOOL >= TRUE)))))
            (str_lcy$0)
        )
        (
          rev
            (struct
               (str_mjj: NAT1,
                str_jgb:
                SIGMA(str_bea, str_duy, str_dik).
                (#
                   (str_juz, str_vom, str_mte, str_cvr, str_daq, str_rhv,
                    str_mwi).
                 ({} /<: str_mem)|
                 max
                   (struct
                      (str_zwh: MININT, str_wxl: str_tht, str_eel: str_iby))),
                str_wrx: str_pcs$0,
                str_mbe: TRUE,
                str_dxh: str_xtu$0,
                str_nss: str_hli,
                str_ghp: str_dhr,
                str_wvl: {{}, str_ejq$0}))
        )
        (
          [PI(str_qpz, str_qld, str_tqd).
           (not(NATURAL <: str_rps$0)| {str_hfe, str_guv}),
           {TRUE, str_wqv, str_jkn, ({} |-> NAT1), str_wmv}'str_npm]
        )
        (
          {%
             (str_wcj, str_jhh, str_jnv, str_hfi, str_rfq, str_bmz, str_ogr,
              str_loc).
           (NATURAL : MININT| str_sny),
           bool(str_reg$0 <= NATURAL),
           (BOOL , (str_pfm , ((NATURAL(str_hea)) , TRUE)))}
        )
      
      :=
      INTER
        (str_wcx, str_crx, str_tfy, str_arf, str_rke, str_bwp, str_zmx,
         str_gnx, str_iqb, str_hll).
      (str_epw /: [] <=>
       !(str_yfi, str_wnx, str_yjn, str_bge, str_drr, str_hnj, str_jjs).
       (str_lyg = bool(str_wwp$0 /<<: str_gcu$0))|
       infix(str_dcc$0 >-> str_wnr$0))
    WHEN
      not
        (FALSE /: NAT =>
         (str_aeh$0 > str_oiz =>
          fnc(PI(str_dcg, str_sdt). (str_niy$0 < str_nps| MININT(str_dvi))) =
          INT))
    THEN
      str_qnq'str_vdd
      :=
      [str_rxd$0,
       (str_ora /|\ str_qoi),
       str_wwn$0,
       rec
         (str_ocg: INTEGER, str_qbq: str_gdr, str_wgl: (str_gab |-> str_blu))]
      ,
      (str_fup *
       { str_owb, str_xru, str_wbg, str_rpp, str_mwd | NAT1 = str_evh$0 })
    END
  ELSIF
    (!
       (str_sxn, str_vor, str_mnp, str_gvd, str_mwy, str_xsx, str_ddg,
        str_zoa, str_rie).
     (str_klw = MININT) =>
     NATURAL > str_afc$0) <=>
    #
      (str_hwj, str_zpg, str_lvj, str_kuk, str_cgl, str_qbd, str_mat,
       str_lrw, str_jld, str_sjn).
    (str_mpz$0 = {} => not(#(str_ros, str_emi).(str_snk$0 > str_yin$0)))
  THEN
    str_piu, str_div, str_mfd, str_jgp, str_ksv, str_cuv, str_lqy, str_wau,
    str_exs :(
      not
        (!
           (str_utt, str_fwi, str_zhu, str_yeb, str_eza, str_vfj, str_ipn,
            str_ntc, str_bhz).
         (not(str_hct$0 : perm({str_blc, MININT, str_fzx}))) or
         str_gdk <<: [])
    )
  ELSIF
    #
      (str_aba, str_bbq, str_urn, str_vuj, str_efl, str_lwt, str_yvd,
       str_jrr, str_lut, str_rvo, str_vsy).
    ({ str_wzj, str_nvh, str_sud, str_uwv, str_kjj, str_qum, str_ouu
       |
       str_hcv < NATURAL1 |>> str_rvn }
       (str_hbx) >
     {NAT, BOOL, str_hmu})
  THEN
    ANY
      str_euv, str_aex, str_sdl, str_opo, str_qab, str_cjx, str_agi, str_tnq,
      str_vhx, str_cjb, str_eqj
    WHERE
      str_stf
        (struct
           (str_cui:
            bool
              (#
                 (str_uxq, str_yde, str_old, str_kkz, str_phb, str_idb,
                  str_hsh, str_ujx, str_bpm, str_kwh, str_emo).
               (str_qst$0 : str_trm)))) /=
      [struct
         (str_xoj: {},
          str_xwz: str_oxp,
          str_sol: str_tqo,
          str_jhd: str_vdf,
          str_hpb: str_ecw,
          str_alt: [])]
    THEN
      IF
        {{ str_akv, str_iqs, str_kft, str_chz, str_aww, str_mdy, str_idp,
           str_nys, str_jth, str_gne, str_ztb
           |
           not(str_eoa /<: str_zqy) },
         { str_wxa, str_ghw, str_cgs, str_pdz, str_nej, str_aar, str_xiq,
           str_dda, str_fqv
           |
           str_lvw$0 /= FALSE <=> str_lqq$0 /= {} },
         [NAT1, FALSE, TRUE]} <:
        str_cok$0
      THEN
        str_zbn, str_wpl, str_jlb, str_cqh, str_adl, str_dpd, str_uhz,
        str_cwb, str_ncq, str_mto
        ::
        FIN1
          (PI(str_vfq, str_maw, str_yzf).
           (!(str_kvc, str_gxe, str_yes, str_xag, str_lsa, str_paq).
            (not((str_kyr /: INT <=> NAT1 /: str_yjj$0) or str_myb < []))|
            str_iro))
      ELSIF
        [str_kwp, INTEGER, str_wkm$0, str_bag, str_blf$0, str_gsz, str_mmk$0] >
        { str_avq, str_nua, str_rug, str_qcf, str_lim | str_ati$0 >= str_pot } =>
        { str_hvn, str_mkz, str_tti, str_opx, str_ynr, str_uso, str_svc,
          str_bqj, str_fjg, str_arv
          |
          STRING /<: str_ipp } =
        str_syd$0
      THEN
        skip
      ELSIF
        not
          ([INTEGER, str_yus, str_yjo, str_jty$0, str_ixx$0, []] /: str_htc$0) =>
        !(str_gxr).
        (str_gzy /= str_gan => (str_kfs$0 /: str_skv$0 or str_lhe$0 > TRUE))
      THEN
        PRE
          !(str_apb).
          (#(str_vss, str_udp, str_nie, str_ibq, str_rir, str_sjb).
           (#(str_ucv).
            (!
               (str_esz, str_qre, str_xmj, str_axb, str_usf, str_lze,
                str_vge, str_ohg, str_yvh).
             (str_ode /=
              UNION
                (str_qhq, str_zck, str_ldn, str_qup, str_btf, str_gqw,
                 str_lyr, str_zxx, str_vba, str_oro, str_ciq).
              (NAT1 /<<: str_bnb$0| (STRING ; str_lew))))))
        THEN
          str_tjv, str_uwz, str_wtj, str_uxz, str_zij, str_hvd, str_vgn,
          str_jet, str_ump, str_agf
          :=
          rel
            ([str_mst$0, NAT, str_miq$0, str_npt, [], str_uuw, NATURAL, 0]
             ,
             ({{str_ryc, str_xjp$0, str_igs, NATURAL, {}}, TRUE'str_lzz}
                (str_tkg)))
        END
      ELSIF
        !(str_efr, str_hgu, str_ixa, str_kom, str_wlu).
        (sizet
           (str_sxf$0 +->
            {MININT,
             str_lci,
             [],
             (INT |-> (const(FALSE))),
             str_tlc$0,
             str_lhf,
             STRING}) >
         str_ghd)
      THEN
        str_ndi, str_tlv, str_kob, str_tch, str_wiy, str_tib, str_dgq :(
          { str_qpv, str_fai, str_jnn, str_drr, str_qpc, str_iww, str_gkl,
            str_iub
            |
            !(str_ebv, str_xtd, str_prd).
            (not(str_bll$0 <<: str_jqf$0 & str_gnz$0 : str_ttf$0)) } <:
          {{str_whb$0, {}, str_scn, str_fgu, TRUE}}
        )
      ELSIF
        not
          (#(str_ook).
           (#(str_sfg, str_drn, str_cky, str_hpo, str_qpj, str_tia, str_lnh).
            (str_rjx <=
             POW
               (struct
                  (str_hww: NAT,
                   str_hfk: str_wgq$0,
                   str_jhz: str_wra,
                   str_etq: str_omd,
                   str_wzz: str_sqp,
                   str_szb: BOOL)
                  'str_tdt))))
      THEN
        str_vxy, str_whn, str_gzr, str_pgc, str_ket :(
          not
            (!(str_vbb).
             ([] =
              { str_tnx, str_kpm
                |
                str_ctv /<<: str_hoj <=>
                !
                  (str_dnm, str_lro, str_rff, str_nkf, str_fzq, str_kje,
                   str_rdy).
                (str_eur$0 <= BOOL) } <=>
              str_ftc <: str_zly$0))
        )
      ELSIF
        rec
          (str_vtn: [],
           str_own: MAXINT,
           str_tmt: str_acl,
           str_hhl:
           ({ str_aqx, str_duh
              |
              not(str_jak$0 /: INTEGER) <=>
              (FALSE /<: str_rsp & str_xve < MAXINT) }
            ,
            str_wua),
           str_ruv: NATURAL1,
           str_quu: "str_yra") <:
        str_wlk
      THEN
        PRE
          not
            (not
               (#(str_dby, str_pjh, str_pkh).
                (FIN1(str_jxa$0) < STRING <=> str_hjc /: str_exa$0)))
        THEN
          LET
            str_rqa, str_fsr, str_avv, str_psa, str_mxr
          BE
            str_jty
            =
            str_fii$0
              (((FALSE \|/ NATURAL)
                  (rec
                     (str_mvu: str_lki,
                      str_drj: TRUE,
                      str_qja: TRUE,
                      str_oda: str_ccj$0,
                      str_otw: str_qrt$0,
                      str_tlp: INT))) *
               (STRING
                  (rec
                     (str_uis: str_itx,
                      str_nax: str_iiy,
                      str_jcv: str_tyq,
                      str_mam: str_ddg$0,
                      str_lql: str_bvz$0))))&
            str_ctx
            =
            struct
              (str_jow:
               {BOOL,
                str_qyl,
                str_ati$0'str_gzl,
                { str_ydk, str_lwo, str_zzp, str_njv, str_dew, str_gok
                  |
                  {} >= str_yiq$0 },
                ((str_imn$0 |-> str_bff)(str_rwn$0 , str_did)),
                str_mgo})&
            str_zfe
            =
            bool
              (INTEGER : str_bau$0 <=>
               ((str_qvl > MAXINT => (str_aej > NAT => INT /: MAXINT)) <=>
                str_shf <: [FALSE, BOOL, str_vop, NATURAL1, str_cjd, str_xfa]))
          IN
            str_yrv, str_yvr, str_aki, str_nga, str_gza
            <--
            str_wyk
              ([[str_iag, str_iiw$0, str_ltq$0, str_wye$0, str_zol, NATURAL,
                 str_ete],
                str_vhv$0,
                PI
                  (str_ylz, str_svb, str_vbe, str_qbk, str_wbu, str_kfd,
                   str_vvr, str_gla, str_xzv, str_vet).
                (INTEGER < FALSE|
                 [{str_hsi$0,
                   MININT,
                   str_voz,
                   str_ywr$0,
                   (INTEGER(str_xez)),
                   TRUE},
                  (rel(str_jsw))]),
                str_kdg$0],
               { str_ehs, str_shc, str_roo, str_ode, str_rkv, str_njw,
                 str_rzb, str_kzr, str_dgv, str_xgs
                 |
                 not
                   (#
                      (str_dra, str_jgd, str_gzf, str_yxm, str_vbq, str_hyd,
                       str_fmw, str_zxy).
                    (not(str_bfv$0 /: (top(str_kau))(str_xnv$0)))) },
               struct
                 (str_agj: "str_zbl",
                  str_eaq: (str_yfr |-> MAXINT),
                  str_pcq: str_ttw$0,
                  str_whj:
                  { str_mfu, str_zci, str_tju, str_uva, str_nyr, str_dej,
                    str_fmk, str_med, str_moi
                    |
                    [(infix
                        (struct
                           (str_gpw: str_mqw,
                            str_xez: str_zwc,
                            str_dcs: str_kjp,
                            str_mbn: str_xlg$0,
                            str_upf: str_asw$0,
                            str_ztu: str_rmn,
                            str_umd: str_syc))),
                     str_bxg] >=
                    str_qys$0 }),
               bool
                 (NATURAL'str_upv(str_ozv) /=
                  struct
                    (str_mmv: str_wkb$0,
                     str_rbi: TRUE,
                     str_abi: (str_jwe$0 >< NAT1),
                     str_pcm: str_eae$0,
                     str_alf:
                     {str_xri$0, str_qft, [], str_poy, str_umk, str_pil$0,
                      str_nak$0, NATURAL})))
          END
        END
      END
    END
  ELSIF
    not
      (str_gsn$0 < sons(MAXINT) or
       !
         (str_rln, str_fug, str_kbj, str_sjs, str_bng, str_kej, str_gah,
          str_caw, str_pyt, str_nsy).
       (str_lzb$0 <= TRUE or str_ori$0 > NATURAL1))
  THEN
    str_qru, str_whf, str_yuz, str_nwz, str_kzo, str_okx, str_inj, str_ugk,
    str_yva, str_chq, str_loy
    :=
    STRING
    ,
    bool
      (#(str_hqu, str_uzu, str_nvs, str_rby, str_dhw, str_kkz, str_maz).
       ({ str_ouy, str_dtv, str_inj, str_rjj, str_bkn, str_exa, str_qfh,
          str_fsk, str_ykm, str_sin, str_ncm
          |
          str_vyh$0 <<: NATURAL }
          'str_aqq <:
        str_xrh$0))
  ELSIF
    not
      (!
         (str_ais, str_hau, str_rsp, str_wqk, str_yuf, str_jdx, str_ash,
          str_vub, str_czi, str_uwq, str_syi).
       (!
          (str_kdn, str_map, str_bww, str_roh, str_ynj, str_slj, str_din,
           str_vgi, str_ayc, str_loh).
        (str_ccy$0 /<<: str_ygi$0) &
        #(str_pru, str_csd, str_erv, str_gwl).
        (MAXINT /: [INTEGER, {}, str_pkw, str_jnt$0])))
  THEN
    str_qte, str_tbx, str_lat, str_zvv, str_ocp, str_bdu
    :=
    { str_fkk, str_hvz, str_bzk, str_hyd, str_pjm, str_qpi, str_efb, str_xsz,
      str_xoo, str_hue, str_fdj
      |
      not
        (!(str_odu, str_dvi, str_jig, str_jmb, str_vny).
         (#(str_xcu, str_ryj, str_wfq).
          (#
             (str_eob, str_heb, str_jnb, str_une, str_hot, str_osp, str_hfg,
              str_czc, str_xrd).
           (#
              (str_pyw, str_xht, str_bgw, str_dma, str_iwo, str_gnp, str_xzr,
               str_jmv, str_hdz, str_dnp, str_kpd).
            (str_bby$0 : str_hxl$0))))) =>
      str_quh <= MININT }
  ELSIF
    !
      (str_avp, str_twy, str_nck, str_aew, str_kwb, str_sve, str_oex,
       str_aml, str_uhu, str_gxd).
    (!(str_pnm, str_zil).
     (!(str_xav, str_kgj, str_ixw, str_wtf, str_cbx).
      (!
         (str_ubf, str_jqs, str_syf, str_uds, str_psa, str_wbh, str_etl,
          str_pgg, str_oat, str_jcj).
       (str_qra = MININT)))) or
    not(NAT = [] or str_pmq <: str_egm)
  THEN
    str_hwd
    :=
    top
      (PI
         (str_ana, str_fla, str_pfp, str_ofj, str_oby, str_nuq, str_udk,
          str_lwv, str_mfs, str_hdv, str_opg).
       (not
          (#
             (str_owr, str_xiz, str_ozq, str_ttw, str_psp, str_kvc, str_msn,
              str_dmc).
           (str_mne$0 /<: MININT))|
        rec
          (str_wcx:
           { str_ulx, str_poc, str_eka, str_ktj, str_lpw, str_mxc, str_ala,
             str_eyg, str_xgq, str_xrz
             |
             str_zqo$0 : str_nne$0 }))
       ,
       str_zyn)
  ELSIF
    not
      (!(str_rcg, str_wdu, str_quf, str_amy, str_iqt).
       (str_kny$0 /<:
        [{},
         rec
           (str_bnf: 90,
            str_blz: STRING,
            str_jji: str_ihf,
            str_pmr: str_hpk,
            str_gyd: (prj2(str_yqo)),
            str_tqo: str_ksj,
            str_kji: str_hls$0,
            str_qon: str_aav$0),
         (str_xtt(str_tjv$0))]))
  THEN
    str_vtb, str_mil, str_frx, str_fwg, str_tie, str_vbj, str_xwf
    ::
    INTER
      (str_jvy, str_okx, str_dia, str_ipf, str_pxy, str_ybw, str_ouh, str_bri).
    (INT <<: str_vrs|
     [[INT,
       str_wdh,
       (str_juz ^ (NATURAL((NATURAL1(NAT))'str_guu))),
       MAXINT,
       MININT],
      MININT,
      str_ior$0])
  ELSE
    skip
  END

LOCAL_OPERATIONS
  str_day, str_aqo, str_dbf, str_ayf, str_lpt, str_qdl, str_itg, str_kxn,
  str_guz
  <--
  str_pbf (str_ury)
  =
  BEGIN
    SELECT
      !(str_nop, str_oon, str_krg).
      (not
         (seq1
            (rec
               (str_zys: str_zzn,
                str_mym: str_lgv$0,
                str_xhn: NATURAL,
                str_cdt: INTEGER,
                str_ibm: str_ggf$0,
                str_bby: str_osu$0,
                str_abn: str_xpf$0)) /<<:
          { str_ojn | #(str_qfa).(str_ikn$0 /: BOOL) }))
    THEN
      str_uhg, str_fpf
      :=
      [{str_vfg$0, str_ayk$0, str_arz$0},
       (str_dsd -> (str_prz , str_kbs)),
       str_gsm$0,
       bool(not(not(str_sce$0 : str_bfo)))]
    WHEN
      !(str_pfo).
      (str_xth >= FALSE &
       iterate
         ({str_rjf,
           NATURAL1,
           2,
           PI
             (str_oun, str_zhh, str_qtp, str_zyb, str_tge, str_gym, str_aft,
              str_wzy, str_dzi, str_vwe, str_djg).
           (str_qzz <: str_xiq| INTEGER(NAT)),
           {},
           str_zlg,
           str_oiu}) <<:
       str_mbq)
    THEN
      PRE
        !(str_hqy, str_vlt, str_cwa, str_zdp, str_wqw, str_uxu, str_hji).
        (!(str_pdo, str_vaa).
         ({str_wbo,
           str_pgp,
           str_awv,
           str_eys$0,
           str_mgy$0,
           str_bhq$0,
           str_ffh$0,
           [str_xmd$0, str_eag$0]} /=
          str_wzg$0
          ,
          %(str_ovk, str_wxa, str_jcg, str_prv, str_iwa).
          (INTEGER <<: MAXINT| str_bqt)))
      THEN
        str_gcz 
          (
            (rec
               (str_hdh: str_yja,
                str_jte: str_ici$0,
                str_grn: NAT1,
                str_rof: str_zwq$0,
                str_gcn: NAT1,
                str_gji: str_nxx$0) <->
             (iterate(([] , []'str_fyq) <-> str_mvl$0)))
              'str_kbw
          )
          (
            { str_lfx, str_gkt, str_psc
              |
              #(str_ndy).
              (not
                 (#(str_dup, str_yko, str_hxb, str_wfv, str_nxo, str_nrp).
                  (#
                     (str_edh, str_hbq, str_jhq, str_wzp, str_cbj, str_txs,
                      str_lhc, str_nbn).
                   (#(str_rss, str_jdl, str_vtq, str_fom).
                    (#
                       (str_xjm, str_cmf, str_ihd, str_xqv, str_axs, str_aqm,
                        str_fpt, str_awl, str_eyv).
                     (TRUE /<<: NAT1)))))) }
          )
          (
            (conc
               (struct
                  (str_utr:
                   { str_wcm, str_rpx, str_fte, str_lan, str_tos, str_qxk,
                     str_iks, str_skb
                     |
                     str_jfi$0 = FALSE <=> BOOL >= str_pad$0 },
                   str_brx: str_ezv$0,
                   str_qju: str_qdn,
                   str_jpy: (str_mos(str_rsv$0)),
                   str_dno: NATURAL,
                   str_seo: (dom(str_bgi$0)),
                   str_eok: str_qqf)))
              'str_nwc
          )
          (
            iterate
              (bool
                 (#
                    (str_uyw, str_sku, str_jvb, str_kqc, str_gaf, str_gfl,
                     str_hkb, str_zle).
                  (!(str_een).
                   (#(str_amb, str_khx, str_ruc, str_uwo, str_fee).
                    (not(str_xax$0 = INT))) <=>
                   str_alp$0 /= NAT1)))
          )
          (
            rec
              (str_kqy: str_tuh$0,
               str_luy:
               struct
                 (str_vdq: str_hgw$0,
                  str_nsp: bool({} = str_krp$0),
                  str_ayq: NATURAL,
                  str_ztr: str_xkv$0),
               str_lwh:
               UNION(str_glh, str_mag, str_rfd). (str_kzf /= MININT| MININT),
               str_kzt: INT,
               str_sqv:
               struct
                 (str_zdr: str_agw,
                  str_gzm:
                  [UNION(str_hjm, str_vwn, str_lau).
                   (str_ooy$0 >= str_hel| str_qsg$0),
                   str_hug$0],
                  str_zyd: str_xyg$0,
                  str_uvt: str_dfg$0,
                  str_zdo: str_htv,
                  str_zmt: str_wlv),
               str_mgv: MAXINT)
          )
        
        :=
        {str_knm,
         str_gjn$0,
         str_eau,
         str_fuy$0,
         str_kmf,
         str_deh$0,
         (btree
            (TRUE
             ,
             rec
               (str_ezv: "str_vui",
                str_gmk: str_pjs,
                str_oym: str_ibk,
                str_ybn: str_cwh,
                str_aud: TRUE,
                str_ivz: str_vig,
                str_hks: str_oso$0,
                str_xbd: str_flx))),
         bool
           (!
              (str_udj, str_bzb, str_fha, str_qtv, str_krx, str_gad, str_nwk,
               str_nrv, str_orn).
            (MININT <<: str_fnq$0))}
          'str_cgq ;
        str_lvy, str_lkr, str_ujw, str_clr, str_yat, str_frc, str_inj,
        str_ltd, str_mup, str_bvs, str_eun
        :=
        [str_wlr$0,
         str_oar$0,
         str_oyd$0,
         struct
           (str_icb: {(str_dnu$0 |>> str_cge), bool(str_utq$0 < str_ktt$0)},
            str_jmq: MININT,
            str_kpm:
            struct
              (str_epv: str_efy$0,
               str_ewg: (INT(str_fff$0)),
               str_ylv: str_dno$0))]
      END
    WHEN
      not
        (#(str_ezs, str_acw).
         (str_qti'str_icm /<:
          [str_ehh,
           SIGMA(str_mbv, str_ffy, str_hxs, str_wye).
           (str_tmg$0 <= str_xlx$0| INT),
           str_anr,
           bool(str_rva : str_ndt),
           str_htg,
           BOOL,
           MININT]))
    THEN
      LET
        str_zcy
      BE
        str_pjf
        =
        %
          (str_auh, str_umb, str_zxg, str_iie, str_dyq, str_vbh, str_kdp,
           str_xnf, str_wgd, str_hce).
        (not
           (not
              (!
                 (str_rog, str_ike, str_cgu, str_kir, str_nuv, str_yxx,
                  str_hox, str_mou, str_kzk, str_oce, str_set).
               (#
                  (str_ftm, str_owq, str_isc, str_tmx, str_qfq, str_fir,
                   str_emq, str_qgq, str_eub).
                (str_yxb = str_ksm$0))))|
         str_bvq$0 +->> bool(str_uhs /= str_tau))&
        str_jnt
        =
        bool
          (!
             (str_ref, str_dvl, str_fbl, str_hkl, str_uca, str_mud, str_qgy,
              str_ccf, str_zoc, str_mws, str_rfg).
           (!(str_xpd).
            (!(str_ese, str_dex, str_gud).
             (str_dxt$0 /=
              struct
                (str_yyi: str_hsy$0,
                 str_wju: FALSE,
                 str_bbl: TRUE,
                 str_ycu: str_eeb$0,
                 str_nks: str_hig,
                 str_smj: str_dmt$0,
                 str_yak:
                 { str_ahr, str_slx, str_ywz | str_bin$0 <= str_qhl$0 },
                 str_sxk: MININT)))))&
        str_puj
        =
        [str_kyv$0,
         MININT,
         NAT,
         FALSE,
         TRUE,
         str_wqn,
         (rank
            ({str_edi,
              str_wsu$0,
              [],
              rec
                (str_tyy: str_jby$0,
                 str_jyg: STRING,
                 str_ate: str_fhw,
                 str_jtm: str_vxt$0,
                 str_woq: NAT1,
                 str_mvr:
                 { str_ekj, str_ztd, str_fuu, str_jiz, str_kwh, str_ksg,
                   str_vxt, str_gcc, str_xkm, str_uai, str_ssg
                   |
                   not(str_lxe <<: str_bmw) },
                 str_sia: str_akh,
                 str_ogg: str_ieo$0)
                'str_eht,
              str_ztp$0,
              str_qck,
              str_svx})),
         str_mla$0]&
        str_bez
        =
        tree
          (bool
             (not
                (#(str_bwe, str_lxq, str_rom).
                 (str_gsz /<<:
                  rec
                    (str_fjx: str_qax,
                     str_ami: str_dwe$0,
                     str_zwo: str_wpn,
                     str_zzh: 3,
                     str_jmw: NATURAL1,
                     str_crh: MININT,
                     str_udh: rec(str_pig: str_bei, str_yoz: str_xsl))))))&
        str_dni
        =
        [str_kwz,
         INT,
         (struct
            (str_evj:
             { str_cgt, str_qvz, str_ufc, str_avb | NATURAL >= str_kvw$0 },
             str_kqp:
             { str_itb, str_wxh, str_fag, str_utv, str_whw, str_gbr, str_npu,
               str_qul, str_psw
               |
               str_oia < str_owc },
             str_uss: str_cnz$0)
            (struct(str_zso: struct(str_aez: MAXINT, str_coi: INT)))),
         STRING]&
        str_ntg
        =
        {FALSE,
         str_hoh,
         (str_xcx(str_ann'str_hcx)),
         (str_hes$0(BOOL /\ "str_muj"))'str_grb,
         str_wiv,
         str_ldt$0,
         bool([] <: str_dzf$0)}&
        str_ppg
        =
        UNION
          (str_rwp, str_whv, str_axs, str_dpp, str_ixu, str_exq, str_kxo,
           str_sag, str_rtk, str_weg).
        (not(str_qiv$0 /: str_ycy$0)|
         rec
           (str_vid: str_vwk,
            str_kpp: TRUE,
            str_aez: MAXINT,
            str_xrh: struct(str_mgo: TRUE'str_mii),
            str_six: str_tfs,
            str_jst: str_yit))
          [str_uug$0]&
        str_acp
        =
        struct
          (str_haa: BOOL,
           str_gsn:
           { str_lts
             |
             #(str_mgm, str_pcu, str_mxj, str_cok, str_nfv, str_yro, str_xes).
             (#
                (str_gje, str_rzy, str_hzg, str_xen, str_zln, str_abd,
                 str_hsk, str_xei, str_hwe).
              (!
                 (str_hie, str_zjs, str_ien, str_lxo, str_nuj, str_lui,
                  str_jqw, str_cqd, str_pya, str_ooi, str_xhs).
               (str_mww$0 /<<: str_qze))) },
           str_zrz: (prj1(STRING)),
           str_lph: str_sqk$0,
           str_hyu: str_mmm$0,
           str_nuv: {str_aif, MAXINT, MAXINT, str_vui, str_zcf, str_rkw},
           str_adc: INTEGER,
           str_nev: MININT)&
        str_vjk
        =
        sizet
          (perm
             ([str_xfq,
               struct
                 (str_dej: (inter(str_qmr)),
                  str_irk: str_qey,
                  str_rqd: str_ibs$0,
                  str_ioo: str_mba,
                  str_khe: str_qpn),
               str_wgx$0,
               NAT]
                (str_vnq'str_pnw)))&
        str_aot
        =
        bool
          (#(str_rta, str_olm, str_jzp, str_gdv, str_ncs, str_svj).
           (!
              (str_hjc, str_wan, str_cpg, str_gke, str_qip, str_kkz, str_wti,
               str_hln, str_qdn, str_apy).
            ({ str_shd, str_ghe, str_efi, str_ztz, str_zgj, str_biq
               |
               str_jrx$0 /<: str_jfn } >
             str_ono$0 |-> (min(str_fsu)))))
      IN
        ANY
          str_smx
        WHERE
          not
            (#(str_omp, str_pti, str_piy, str_kni, str_jjr).
             (!(str_gis, str_kcb).
              (bool
                 (!
                    (str_wvu, str_bkj, str_etv, str_kek, str_gon, str_jfd,
                     str_fjc, str_sir, str_tkt, str_qoh).
                  (TRUE /<<: str_uap$0)) :
               str_hds$0))) &
          str_hzz : str_hmz
        THEN
          str_xet, str_uet, str_eda, str_bwk, str_ygr
          ::
          rec
            (str_kec: TRUE,
             str_oqi: str_kxk,
             str_dfk:
             { str_cvm, str_tcb, str_noy, str_dhf
               |
               not
                 (!(str_eyh, str_xkj, str_eyy, str_wue, str_yrm).
                  (not(str_swp$0 /= BOOL))) },
             str_aru: MININT,
             str_yqf: NAT1,
             str_ywc: str_pgy$0'str_xbt) ^
          str_gta ||
          str_byc, str_wch, str_vln, str_zux, str_odk, str_ljr, str_ner,
          str_vpt :(
            PI
              (str_fil, str_bty, str_nuf, str_tuf, str_lwj, str_vcx, str_cdc,
               str_bhy, str_qdr).
            (!(str_qft, str_smj).(not(str_jva <= {}))| str_ker , str_wva$0) >
            [(str_rak$0(str_mbm$0)), str_ini, str_fxh, BOOL]
          )
        END
      END
    ELSE
      str_xup, str_eol, str_rft, str_nxj, str_kqr, str_ovy, str_ibs, str_tmk
      :=
      struct
        (str_nzv:
         rec
           (str_piz: [],
            str_wnl: %(str_fzn). (str_wjp : str_tfj$0| BOOL |-> {}),
            str_egr: str_eqv,
            str_bia: INT,
            str_wwp: TRUE,
            str_poq: str_ogt$0),
         str_bdr: str_ahl,
         str_sty:
         struct
           (str_dmm: str_iuq$0,
            str_yev: str_bju,
            str_zls: str_rps,
            str_mol: str_wms),
         str_kwv:
         struct
           (str_kpr: NATURAL,
            str_hco:
            UNION(str_kjo, str_uoq, str_tas). (str_lef <: str_psk$0| NAT1),
            str_jxf: INTEGER,
            str_bgs: str_sea$0,
            str_xns: NAT1))
    END ;
    str_tbj, str_mer, str_sxu, str_fow, str_ull, str_raw
    :=
    {str_ydl,
     (struct
        (str_iry: str_qwb,
         str_kpx: {str_pfu, str_cfb, str_xst},
         str_ytf: MININT,
         str_hnx: str_vsc$0)
        ({ str_rxu | str_ajl /<: str_svl or MININT : [] }))
       'str_wcb}
  END;

  str_rdt, str_xsh, str_ckg, str_rds, str_nqw, str_aub, str_hpj, str_koq,
  str_szu, str_vka
  <--
  str_nla
    (str_pga, str_leh, str_cbv, str_ere, str_xmn, str_dot, str_rjh, str_pqq,
     str_ywq, str_ckc)
  =
  BEGIN
    ASSERT
      {str_ymy$0, str_ggg$0, NATURAL1} <<: str_ftf <=>
      (#(str_esf, str_olj, str_qmp, str_wjy, str_kux).(NAT1 : str_oon) or
       not(FALSE /<<: str_flw$0))
    THEN
      str_qzx, str_bwo, str_dqf, str_wdv, str_uyd, str_tmt, str_tia
      :=
      bool
        (#
           (str_qxm, str_bgp, str_ozs, str_gxi, str_cha, str_kfs, str_oyi,
            str_qyk, str_doc, str_wot, str_rce).
         (!(str_fdb, str_fkb, str_wij, str_ulz, str_yyu, str_xum, str_ajk).
          (not
             (not
                (!
                   (str_aan, str_fsj, str_whl, str_xzl, str_tnh, str_dzv,
                    str_ych, str_twi, str_slm, str_yrq, str_eqp).
                 (!(str_hnm, str_asu, str_ltg).(str_olb <= str_kqe)))))))
    END ;
    ASSERT
      SIGMA(str_xid, str_xog).
      (str_iyo$0 < NATURAL1 & str_gso > str_yar|
       struct(str_prw: NATURAL, str_mhd: str_una$0)) =
      (str_lof$0(bool([] /: str_kfm$0)))'str_vml
    THEN
      WHILE
        !
          (str_mor, str_jbj, str_nlb, str_iaz, str_wzw, str_tca, str_mmm,
           str_acz, str_tut, str_nwe).
        (!(str_ftj).
         (not
            (NATURAL1 <:
             str_kuu
               (INTER
                  (str_yqw, str_unl, str_qvf, str_xbf, str_fmc, str_via,
                   str_vgd, str_adw, str_kqi, str_opx).
                (str_drv : INT| str_yin |-> str_cfv$0)))))
      DO
        IF
          [INTER
             (str_qje, str_vrs, str_bwu, str_jrx, str_bad, str_buk, str_enx,
              str_bfo, str_lzm).
           (str_wzk$0 <<: NATURAL1| bool(MININT /: str_asy$0)),
           INTEGER,
           MAXINT,
           ((str_rlq$0 ; str_wat)),
           str_gqi] /=
          (TRUE * INTEGER) |-> str_ypi
        THEN
          str_cor, str_ddn, str_oyo
          <--
          str_rpc
            (PI(str_btc, str_jrt, str_xon, str_usa, str_lbh).
             (!(str_mgk, str_fnh).
              (not(#(str_sux, str_kdg, str_zpa, str_pjo).(str_ssy : str_fkd)))|
              rec
                (str_mvl: str_cbw$0,
                 str_yir: str_xup,
                 str_blj: str_tac$0,
                 str_ffe: str_ktv,
                 str_pvy: str_nnp,
                 str_eqs: (str_apv(INT)),
                 str_itr: (str_emh \|/ str_gyp),
                 str_cjd: str_hgz$0)),
             ({ str_itq, str_scb, str_ofe, str_rpz, str_sgy, str_bze, str_kqs
                |
                BOOL /<: TRUE }
              ,
              (PI
                 (str_bor, str_set, str_exv, str_orh, str_mwd, str_krm,
                  str_leo, str_qtj, str_bvj, str_twq, str_git).
               (#
                  (str_wzt, str_bmw, str_odx, str_ijo, str_gsn, str_bhq,
                   str_pcn, str_puc, str_ujj, str_uiz, str_tzr).
                (#(str_bbb, str_tow, str_akw, str_ggx, str_tna, str_qjm).
                 (str_sqt$0 /= str_ysz$0))|
                str_doy$0)
                 (str_xcx$0'str_zwj))),
             rec
               (str_ceu: {str_ehc$0},
                str_qxm: INTEGER,
                str_wfg: str_ahg,
                str_vdv:
                {{ str_zpv, str_xgh, str_tss, str_kre | str_ujx$0 < str_pbl },
                 (str_dbe(bool(str_kib$0 /: str_hur$0)))}),
             ({[str_kyf$0, str_cwc$0, FALSE, str_prv$0, str_kaj],
               (top([str_lhi, str_abd$0]))}
                (str_orl))
               'str_bud
               'str_ivv,
             { str_czy
               |
               not
                 (str_avt$0 > str_zil$0 <=>
                  (str_vgt >= str_cvg$0'str_lqp or str_nil$0 /= str_sfs$0)) },
             rec
               (str_grp: (bool(str_snk <<: str_pva$0) --> str_tdi),
                str_mgx:
                {str_hdg,
                 str_cfx$0,
                 INT,
                 [str_syw$0,
                  {str_ikc, str_ccr, str_jkv, (NAT |-> str_wpx), str_inm},
                  str_cye$0],
                 MAXINT,
                 str_nvl$0,
                 str_jeq},
                str_pep: str_ofs$0,
                str_ley: str_dfs),
             struct
               (str_fdm:
                rec(str_suh: str_ent$0, str_jmw: STRING, str_fig: str_uql),
                str_uwa: (str_wws(struct(str_mhs: NATURAL1))),
                str_osv:
                (str_eeb
                 ,
                 {str_clv$0,
                  str_mvq,
                  {MAXINT, str_mow, str_alj$0},
                  str_abr$0,
                  BOOL,
                  [],
                  str_ior,
                  []})))
        ELSIF
          (str_byd$0 /=
           struct(str_uxh: NATURAL1, str_acl: str_wmp, str_xlc: str_ame$0) <=>
           BOOL >= NAT1) &
          #
            (str_gbf, str_ind, str_rjx, str_dmd, str_nwi, str_rqk, str_psl,
             str_npl, str_opa).
          (not(#(str_upx, str_eaj).(str_omb = str_kgw)))
        THEN
          CHOICE
            str_dtz'str_lox
            :=
            (%
               (str_eos, str_jnk, str_hte, str_pzz, str_zfg, str_jxk,
                str_zak, str_jxt, str_ley, str_mtu).
             (str_zhy$0 >= str_eyf$0| str_htd)
               (str_ytf))
            |->
            {str_yvd$0,
             (bool(INTEGER < str_ndh) , NATURAL),
             UNION(str_lef, str_vom, str_ikf, str_cut, str_bex, str_kpa).
             (MAXINT <: str_kle| str_ipm),
             str_kyb$0}
          OR
            WHILE
              #
                (str_dbt, str_kii, str_gjx, str_clm, str_yli, str_tmb, str_asv).
              (not(NATURAL1 /<: str_bnl) or
               ((!
                   (str_iyb, str_xqf, str_dxq, str_sdk, str_mfg, str_sae,
                    str_onm, str_hlj, str_vud, str_hgp, str_dmi).
                 (str_ztu$0 = str_nfr) =>
                 (MININT > [] & str_rge /: str_jfd$0)) =>
                STRING /: {}))
            DO
              str_ruo, str_tbs :(
                (str_hoa({str_wti, TRUE}))'str_xwk :
                bool(str_yek$0 >= str_mhp) + str_tuj'str_xyg
              )
            INVARIANT
              [TRUE, str_owz, str_hom$0, str_tdo$0, str_lod] =
              bool(NATURAL /<<: str_iyo$0)'str_yaq &
              (NATURAL /<<: str_aww => not(97 /<<: NATURAL1))
            VARIANT
              bool
                ((NATURAL
                    ({ str_olp, str_cdn, str_kbg, str_ble, str_kkn, str_njq,
                       str_fun, str_ltl, str_wka
                       |
                       #
                         (str_jgp, str_cnf, str_syf, str_wew, str_dwk,
                          str_ukl, str_qqt, str_xpm, str_nkn, str_gtb,
                          str_rvw).
                       (str_vxh /: MININT) }))
                   'str_vyu =
                 str_hqn$0)
                'str_smj
            END
          OR
            str_tkf, str_tzr, str_neu, str_oto, str_wgh, str_wcm
            <--
            str_lan
              (%(str_lsn, str_kof, str_mmm, str_sun).
               (!(str_spz, str_tmm, str_uwn, str_uul, str_oma).
                (!(str_cum).
                 (str_kyi > str_lnt <=>
                  #(str_lbf, str_tav, str_yjh, str_vun).(MAXINT <: str_lwo$0)))|
                str_wqu)
                 'str_tfm,
               ({ str_zmp, str_bvr | str_pej <: str_vxx$0 } ^
                (str_ohi$0
                   (bool
                      (!(str_cwk, str_vvn, str_dix).
                       (not(not(str_awl$0 /: INTEGER))))))),
               { str_jiq
                 |
                 !
                   (str_cuc, str_scu, str_ggt, str_xcg, str_qlt, str_lfh,
                    str_qya, str_uje).
                 (not
                    (!
                       (str_wut, str_aey, str_nep, str_jwj, str_csq, str_jgm,
                        str_mew, str_oay).
                     (str_rsf /: str_rmz$0) <=>
                     {} >= str_cri$0) or
                  str_fzy$0 /: str_bhe$0) },
               {str_mwv,
                str_oho,
                [(NATURAL'str_bop , NATURAL),
                 str_lst,
                 str_lrs$0,
                 str_crk,
                 struct
                   (str_ftk: MININT,
                    str_aoe: INT,
                    str_wdq: str_ktk$0,
                    str_mug: NAT,
                    str_kqi: str_agk$0,
                    str_emk: str_xoj),
                 str_acw$0],
                (str_iit$0 , str_ony$0)'str_pgf,
                INT,
                str_vig$0},
               ((struct
                   (str_bms: str_bfv$0,
                    str_akm: str_hwt,
                    str_mzs: str_qac,
                    str_xkb: str_ssw,
                    str_moc: str_uzq,
                    str_tdb: str_owf$0) \/
                 bool(#(str_bsj, str_bfl).(str_kaq >= str_kat$0)))
                |->
                { str_nmv, str_elb, str_ouk, str_ura
                  |
                  !(str_jaw, str_pyt, str_fww, str_oga).
                  (str_iuw$0 /<: str_knu$0) }))
          END
        ELSIF
          !
            (str_sjm, str_ddt, str_ryd, str_hfe, str_mow, str_xtd, str_okl,
             str_ojy, str_aue, str_wzq, str_xoa).
          (#(str_twv, str_dfz, str_ybq, str_hid, str_ybv).
           (not
              (#
                 (str_tto, str_elu, str_bzv, str_dig, str_nna, str_uzu,
                  str_isw, str_nuy).
               (not(not(str_ugu$0 /<: str_lux) => str_kow$0 <: str_vsf$0)))))
        THEN
          str_pql 
            (
              INTER
                (str_ybp, str_mgw, str_ibu, str_oqq, str_bwb, str_wzm,
                 str_qfq, str_alg, str_pyo, str_anm).
              (#
                 (str_oqs, str_roc, str_kvo, str_eng, str_xyd, str_mfm,
                  str_zho, str_fww).
               (!(str_zyg, str_plg).
                (#
                   (str_cao, str_pvz, str_ldb, str_pmt, str_trk, str_axx,
                    str_uwt, str_wkm).
                 (str_ndb /: str_xlu$0 <=> str_yvo < TRUE)))|
               rec(str_tdm: str_uer))
                'str_jse
            )
            (
              SIGMA(str_afo, str_adm, str_nbp).
              (str_hkw$0'str_iyy /<: str_iyu|
               rec(str_eyu: str_feo$0) <<|
               {INT, str_rdi'str_hqz, NAT, str_xfs$0})
            )
            (
              [{{ str_lyy, str_hur, str_oxl, str_urc, str_efr, str_vai,
                  str_joj
                  |
                  str_zit /<: str_dwq },
                { str_lkv, str_fqf, str_reg, str_qlo, str_nwf, str_eky,
                  str_tff
                  |
                  [] /<: NATURAL1 },
                bool(str_cis <: NATURAL),
                str_vqi},
               (str_sjn$0 <| str_pgx'str_odn),
               str_zrr$0]
            )
            (
              rec
                (str_dtx:
                 {bool(str_jvy = str_qjq$0),
                  str_xfe$0,
                  str_rby,
                  (str_pne$0
                     (rec
                        (str_gtq: str_sgj$0,
                         str_vjf: MININT,
                         str_gcs: str_hli,
                         str_evn: str_gyx,
                         str_yqt:
                         UNION(str_wpb, str_uof, str_dje, str_tci, str_kir).
                         (str_bii <: str_zia| str_qaf),
                         str_lka: str_cpe$0,
                         str_lvp: INT,
                         str_xum: str_osx)))})
                'str_phs
            )
            (
              (bool(MAXINT > NAT1) >-> INTEGER)
              |->
              (son
                 ([struct
                     (str_nrm: str_dmi$0,
                      str_rwe: str_ebn,
                      str_rah: str_rjg$0,
                      str_jil: str_fto$0),
                   str_zrs$0,
                   0,
                   {str_ynb, str_uga$0}]))
            )
            (
              [(str_mgq$0'str_euv'str_gdk(str_ose$0)),
               str_zlp$0,
               "str_idd",
               (sizet(right(NAT1))),
               (str_mls$0 --> BOOL),
               NAT,
               str_fpg,
               str_zft]
            )
          
          :=
          prj1
            (rec
               (str_sjv: BOOL,
                str_owm:
                PI
                  (str_xuk, str_bhs, str_lba, str_qsh, str_llc, str_fpn,
                   str_bzt).
                (not(str_hky$0 <<: str_zij$0)| str_sjp$0),
                str_qnm:
                PI(str_tfz).
                (#
                   (str_jfx, str_dwa, str_vsv, str_lgc, str_ero, str_wzj,
                    str_rtx, str_ieu, str_vnl, str_swc).
                 (NAT1 = str_qcx$0)|
                 {BOOL, 2, str_pwz$0, str_oyq$0, "str_vyi", str_mvt,
                  str_egr$0, str_crs})))
        ELSIF
          !(str_hvi, str_cqw).
          (%(str_hkl, str_jfk, str_tau, str_ppg, str_bbc, str_fob).
           (str_cre$0 <= str_alb|
            { str_lfd, str_wie | not(str_htg < str_hcd$0) }'str_ype) /<<:
           TRUE(str_hye))
        THEN
          str_hlh, str_kdr, str_znr, str_osw, str_azb, str_exa, str_xxu
          <--
          str_fsg
            ({TRUE,
              { str_fqo, str_tte, str_htt
                |
                #
                  (str_tul, str_vuv, str_fau, str_hbr, str_ynu, str_crc,
                   str_yhy, str_wlt, str_wvq, str_shf).
                (not([] /<: NAT1)) =>
                str_kgo$0 /<: FALSE },
              (MAXINT(MININT)),
              NAT1,
              NATURAL1,
              str_wox,
              NAT1}
               'str_vtw,
             bool
               (#
                  (str_ccm, str_ugi, str_ont, str_ifb, str_kxt, str_yyz,
                   str_wqg, str_zej).
                (!(str_mkf, str_gkw, str_zdt).
                 (str_cxx$0 >+> str_xcp <=
                  [str_yaz$0,
                   str_uqc$0,
                   str_yfm,
                   rec
                     (str_xvc: {},
                      str_zic: str_xzx,
                      str_wuq: str_obt,
                      str_jll: NATURAL,
                      str_iom: str_oxr,
                      str_brl: str_vyr,
                      str_hgs: str_gvr$0)]))),
             (last
                ({bool
                    (#
                       (str_hok, str_dit, str_nbt, str_yui, str_zrr, str_zwv,
                        str_eop, str_jen).
                     (str_cfu$0 : FALSE))}
                 |->
                 struct
                   (str_xoc: str_jmj$0,
                    str_ggr: str_ele,
                    str_pzp: bool(str_vyf <= NAT1),
                    str_xoy: INT,
                    str_paq: MAXINT))))
        ELSIF
          #(str_tmi, str_vqj, str_ngq, str_jor).
          (not
             (#
                (str_htw, str_otk, str_qke, str_gqp, str_jru, str_ylz, str_tsz).
              (#
                 (str_cbn, str_srk, str_rui, str_suu, str_izs, str_kss,
                  str_wzb, str_qsc, str_ztq, str_vyz, str_ooh).
               (#(str_ydy).(MININT /= str_spu) or
                #(str_uey, str_kiu).(str_clg$0 /: str_zea$0)))))
        THEN
          str_oyf, str_lqs, str_ddk, str_kdq
          ::
          MININT'str_usi'str_owz
          |->
          { str_sut, str_pqb, str_oov
            |
            not(not(#(str_wpy, str_tmg, str_gem, str_xqw).(FALSE /<: NAT))) }
        ELSIF
          NAT <<:
          UNION
            (str_sbl, str_ppo, str_ddr, str_ste, str_xvi, str_ulu, str_mqi,
             str_gdp, str_rib, str_vfl).
          (NATURAL : str_qqg$0| str_llz) or
          !
            (str_pgd, str_wtv, str_fgh, str_ehx, str_wip, str_ekd, str_myi,
             str_ybc, str_tqb, str_txw).
          (!
             (str_jdd, str_lap, str_mqn, str_zsq, str_tys, str_nkz, str_pbx,
              str_amy, str_qvr, str_eit).
           (not(str_dmg$0 = str_cdu$0) or str_sbk$0 /<<: []))
        THEN
          str_pme 
            (
              {[rec(str_wkt: str_iji$0, str_tpu: MININT, str_pax: str_ptf$0),
                str_stu$0,
                str_xhf$0],
               str_nbi$0,
               NATURAL,
               "str_vbu",
               struct
                 (str_tsy: {},
                  str_gaa: str_myw$0,
                  str_gui: str_gmg,
                  str_beo: ((infix(TRUE))(sons(BOOL))),
                  str_gga: str_ffa,
                  str_exx: str_tns,
                  str_hqv: NAT),
               str_vdx$0}
            )
            (
              %(str_ptv).
              (#(str_hvg, str_qcg, str_lbm, str_voy, str_wpq, str_amp).
               (MAXINT <= str_ynw)|
               ((NATURAL1(str_clo)) |>
                PI(str_dab, str_cdd, str_ors).
                (INT < STRING|
                 {NAT1, INTEGER, str_uzx$0, str_nlx$0, FALSE, str_dbh,
                  str_fps}))
                 'str_gjx)
            )
            (
              str_nsm
                ([[],
                  {str_lzj$0,
                   {str_ktc$0, (card(str_hkb$0 , str_nkx$0)), BOOL},
                   (str_jtd(str_ddo))},
                  FALSE,
                  NAT1,
                  MININT,
                  str_mpw,
                  str_fpp$0])
            )
            (
              rec
                (str_god: (FALSE(str_tmb)),
                 str_tbf:
                 [FALSE,
                  MAXINT,
                  NAT1,
                  [({ str_vsh, str_ogq, str_ylr, str_prv
                      |
                      NATURAL1 <<: str_xoh$0 }
                    |->
                    rec(str_gjd: str_zvz, str_uoh: str_zkn))],
                  NATURAL1,
                  str_uyg,
                  str_rbc])
            )
            (
              bool
                (str_gcy < str_ufq =>
                 not(str_cry$0 |-> str_nwo <: right(NATURAL'str_vfd)))
            )
            (
              { str_gkv, str_riw, str_hjx, str_wve, str_oqk, str_uxh,
                str_rox, str_ldp, str_zkk, str_ixw
                |
                MAXINT <<:
                left
                  ({NATURAL1,
                    NATURAL,
                    rec
                      (str_bcg: str_mag,
                       str_lof: {},
                       str_cwh: str_ley$0,
                       str_yja: str_uuo$0),
                    str_gbt'str_bwr} -->
                   str_upe$0) }
            )
            (
              { str_cad, str_ovi, str_oyh, str_gkg, str_skx, str_lcl,
                str_uvj, str_bjs
                |
                !(str_tym, str_djl, str_rsf, str_ewt, str_sxz).
                (struct(str_nth: str_yfx, str_rwy: str_zbk) :
                 bool(str_nhw$0 <<: str_eqx$0 |-> str_vip$0)) }
            )
            (
              (inter
                 (INTER
                    (str_yqw, str_qud, str_ewz, str_uge, str_dkl, str_efv,
                     str_dat, str_uwh).
                  (not(str_nzr$0 /: str_oto)|
                   PI
                     (str_kot, str_coi, str_jes, str_ztz, str_xmu, str_mes,
                      str_joa, str_rfw, str_pke, str_abc, str_pyz).
                   (str_xuo$0 < FALSE or str_ffk >= str_sar$0|
                    NATURAL1 .. str_sfm))))
                'str_oke
            )
          
          :=
          { str_eix, str_wgj, str_wtp
            |
            (str_czf < INTEGER & !(str_cdx).(9 = STRING)) =>
            #
              (str_nmq, str_vxv, str_bzv, str_txv, str_qre, str_ocu, str_com,
               str_dbq, str_wox, str_lfv).
            (STRING < MAXINT) }
        ELSIF
          !
            (str_wwj, str_iwj, str_qnq, str_eht, str_lwd, str_eaq, str_sba,
             str_krt, str_bgw, str_qtg, str_xil).
          (#(str_udn, str_saa, str_oij, str_ucd, str_fix, str_vdv).
           (!(str_vop, str_tss, str_tmc, str_fev).
            (str_eyj$0 >= str_wkr$0 or str_dzv < MININT) <=>
            not(!(str_zrh, str_eul, str_hgj, str_glg).(str_hfn /: FALSE))))
        THEN
          str_tsv, str_gfg, str_lxr, str_djq, str_hbm, str_nyh :(
            not
              (#
                 (str_bow, str_urr, str_xoz, str_wph, str_aeh, str_ekw,
                  str_yvq, str_gdw, str_oga).
               (#(str_kpp, str_lmj, str_rrk, str_bgs, str_vwb, str_sig).
                ([[{ str_jhx, str_xfe, str_gin, str_msi, str_zqx, str_bfw
                     |
                     str_kug$0 >= str_cgp$0 },
                   str_vii$0,
                   MININT,
                   str_vkp$0,
                   INTEGER]] :
                 str_rqf)))
          )
        ELSIF
          not
            (struct
               (str_tif:
                { str_jnb, str_rgd, str_azw
                  |
                  str_mny$0 /= str_cuy$0 => TRUE <= NAT1 }) <=
             struct
               (str_vzf: str_jxh$0,
                str_acx:
                struct
                  (str_nhm: str_sfw$0,
                   str_irj: str_zvj,
                   str_rgd: FALSE,
                   str_jgt: INT,
                   str_zqy: str_mmb,
                   str_flm: NAT)))
        THEN
          str_nmd 
            (
              [str_qpb$0,
               PI
                 (str_hxc, str_vnj, str_kzz, str_kdj, str_xue, str_ccu,
                  str_cmp, str_app, str_vgw, str_gey).
               (not
                  (!(str_iyl, str_ywr, str_koj, str_ecm, str_zuz, str_xjt).
                   (!(str_oac, str_ryu, str_mmm, str_sgf, str_rmy, str_exx).
                    (INTEGER /<: str_fdz))) =>
                str_ikc$0 <: str_ypx$0|
                str_ycy$0)]
                'str_vrk
            )
            (
              rec
                (str_aef: FALSE,
                 str_kyg:
                 ((bool(not(str_yvk$0 <: str_fgr)) \|/ str_vvl$0)
                  ,
                  {(str_kas$0(str_aux$0))}),
                 str_zxb: str_was,
                 str_bjf: str_dtj$0)
            )
            (
              { str_rqm, str_ete, str_emh, str_qdw, str_cvt, str_vlh,
                str_mgf, str_wxw, str_szt, str_iea
                |
                not
                  (INTEGER -->>
                   (rec(str_uyz: str_fsz, str_vgw: NAT1, str_jqz: NAT1)
                      (str_orp$0)) /=
                   str_fse &
                   FALSE <: NAT1) }
            )
          
          :=
          [str_wnx$0,
           (mirror(bool(str_pqo$0 <<: str_ozp$0))),
           struct
             (str_pge: str_xgj,
              str_kba: str_aav,
              str_rww: str_axi$0,
              str_dfh: str_eij$0,
              str_dpu: str_gue,
              str_dhh: str_hyo,
              str_rdc:
              { str_dxx, str_yua, str_eor, str_xir, str_eat, str_usl, str_ovn
                |
                str_jzi$0 , str_yoo$0 < {} },
              str_egv: MININT)]
        ELSE
          str_jeg, str_xaq
          :=
          (str_ipj
           ,
           {str_rpm,
            NAT,
            NATURAL,
            {struct(str_rrd: {str_qrq, str_yjo, str_jmw$0, str_nre$0, {}}),
             INTEGER,
             str_uzw,
             str_uoo$0,
             INT,
             str_jfo,
             str_qnd$0,
             str_ced},
            rec
              (str_tif: str_ggm$0,
               str_rle: str_qti$0,
               str_wvr: INTEGER,
               str_naz: str_zaa$0,
               str_mym: TRUE,
               str_tyo: 8)}) ><
          str_mxm$0
        END
      INVARIANT
        %(str_ban, str_wle, str_hkt, str_rls).
        (str_vxs$0 > str_rsg$0|
         (TRUE
            ([] /
             struct
               (str_wkr: STRING,
                str_hlv: str_ami$0,
                str_fcb: [],
                str_gpy: str_qeb,
                str_unq: str_hac)))
           (str_cwr)) /<:
        MAXINT |-> str_uit$0
      VARIANT
        {((NAT1(str_ody))
          ,
          PI(str_pog, str_wkk, str_pvn). (str_ndt <<: str_bsa| NAT1)),
         %(str_egj, str_npb, str_xpi, str_dmu, str_das, str_now, str_kvc).
         (!(str_ojo, str_hli, str_rea).(str_fiv$0 >= str_pyi$0)|
          rec(str_igh: str_tgx))}
      END
    END
  END;

  str_pvq
    (str_ehy, str_ley, str_xnm, str_bra, str_hsr, str_jun, str_iwj, str_nua,
     str_hvm)
  =
  CASE
    struct
      (str_yiu:
       [(str_pig , str_xve$0),
        PI(str_jha, str_yld, str_rsy, str_ifc, str_uyy, str_fgt).
        (str_alx$0 <= {}| str_kbe$0)
          'str_luy],
       str_plh: ((FALSE -->> str_anx)(str_sdg$0)))
    OF
    EITHER
      PI
        (str_ujd, str_kag, str_frr, str_bmq, str_nqe, str_ftp, str_txh,
         str_jkv, str_eha, str_exd).
      ((str_els < str_cfm <=> str_yjs$0 <= str_mva) or str_lgj$0 <: str_srw|
       %(str_ejy, str_lql, str_ssx, str_uuo, str_zqp).
       (#
          (str_rru, str_jtq, str_uwp, str_lks, str_qoq, str_qje, str_zuc,
           str_zjy).
        (str_uyj <<: str_ygy)|
        str_tlm)
       |->
       struct
         (str_zoz: str_eyx,
          str_gcf: 8,
          str_hin: str_cbn,
          str_cbl: str_uyy$0,
          str_fts: NATURAL1))
    THEN
      str_aps, str_nyv, str_dze, str_snf, str_dol, str_jtn, str_nax
      :=
      rec
        (str_vzb: INT,
         str_srr: (POW1(str_zqh)),
         str_exg: str_dme,
         str_nvt: (left(str_azk$0 ^ str_quh)),
         str_oqh: ((NATURAL |-> str_ufx) , STRING))
        'str_zeo
    OR
      POW
        ({ str_vjq, str_vnb, str_qyd, str_wai, str_lkw, str_oic, str_dux
           |
           #(str_mrr).
           (not
              ({ str_kmz, str_paw, str_qza, str_smn, str_ira, str_yda,
                 str_gsk, str_sgd
                 |
                 str_igd$0 >= str_viz } =
               str_hwp$0)) &
           str_oks > str_ipp })
    THEN
      str_qep'str_tgd
      :=
      INTER
        (str_dzo, str_bjb, str_kxr, str_sjl, str_aiy, str_qbw, str_npn,
         str_tpm, str_snl, str_hgn).
      (!(str_epk).
       (str_dqi$0 <= str_alo$0 =>
        !
          (str_ozr, str_hnf, str_cea, str_bhf, str_upk, str_gbs, str_ono,
           str_tss, str_rqn, str_fck, str_tyu).
        (str_ilg > str_hiv))|
       size
         (struct
            (str_lfp: str_htx$0,
             str_ynt: str_ote,
             str_xmx: [],
             str_znr: MAXINT,
             str_rjk: str_wla,
             str_fsz: "str_rnh",
             str_zvl: str_hsm$0,
             str_ttz: str_hph)))
        'str_rfb
    OR
      [str_vut,
       [TRUE,
        [str_xun$0, (TRUE |-> str_zbl), str_mqd$0, str_eib$0, str_zgf],
        "str_ctl",
        str_qyl$0,
        ({ str_wge, str_jmd, str_mdx, str_cuu, str_yyj
           |
           #(str_qhe).(str_rxv <= str_ffe) }
           (str_kct$0)),
        str_sce,
        str_aai$0],
       str_vco,
       str_hbj,
       str_jks]
    THEN
      str_abl, str_siu, str_tch, str_xsk, str_pcl, str_sgb
      ::
      {{ str_zbj, str_ifv, str_khb, str_tdm, str_fin, str_izn, str_oqq,
         str_ouc, str_dga
         |
         INTEGER <= str_njc$0 },
       str_uqw,
       {str_rfu$0,
        BOOL,
        str_scj$0,
        %(str_sjy, str_zvs, str_hhe, str_lkp, str_ljo).
        (str_lyg$0 /<: INT| STRING)},
       (str_rql$0 |-> (INTEGER |-> str_mxj)),
       str_wgt,
       { str_zxg | str_noo <= str_uyc }}
    OR
      [(infix
          ({MININT,
            str_hed,
            bool
              (FALSE /:
               bool
                 (#(str_xyh, str_epl, str_jup, str_wla, str_yax).
                  (str_lgr$0 /: NATURAL1)))}))]
    THEN
      str_eyq, str_fkp, str_zdw, str_tbt, str_oio, str_czi, str_gdq
      ::
      {TRUE,
       FALSE,
       [],
       bool
         (!(str_bar, str_scq, str_dnu, str_bpz, str_vcj, str_fhp, str_yfp).
          (str_eqk$0 : []) or
          #
            (str_tyw, str_dxp, str_uei, str_dno, str_hvm, str_liw, str_bsm,
             str_yle).
          (str_vyn$0 : str_bmy => str_ryo$0 < str_upg$0)),
       str_ylo$0}
    OR
      %(str_qcd, str_uzb).
      (not
         (!
            (str_arw, str_xoz, str_plx, str_ilt, str_ctj, str_evi, str_tzf,
             str_ycp, str_fnp, str_teu, str_mom).
          (!
             (str_jzs, str_kgc, str_euk, str_wgf, str_ghv, str_vnd, str_wqu,
              str_bhi).
           (str_zaz$0 = str_ypd)))|
       rec
         (str_sww: NAT,
          str_hdk: str_xzi$0,
          str_qty: str_egp,
          str_bej:
          (first
             ({ str_uur, str_yzx, str_ean, str_los, str_kru, str_tqi,
                str_pll, str_htl
                |
                str_xpg : str_ooo$0 })),
          str_juo: str_ije))
    THEN
      CASE
        {{str_kwk$0, str_unk},
         (prj2(rec(str_ach: str_gyu$0))),
         INT,
         (prj1(infix(str_yeq$0))),
         str_hrj,
         str_pto$0,
         str_ztq}
          'str_ple
        OF
        EITHER
          bool
            (not
               (!(str_fqv, str_zkl, str_hha, str_cmw).
                (!(str_wew, str_hum).
                 (#
                    (str_miw, str_btu, str_xri, str_uxo, str_gfh, str_pqe,
                     str_vtj, str_xgm, str_pxh, str_wvm).
                  (!
                     (str_mpo, str_sfd, str_gga, str_yox, str_lny, str_lqs,
                      str_uah, str_bcx, str_snf).
                   (not(str_xrt$0 /: str_jcz)))))))
        THEN
          str_vjy, str_qbv, str_qsg, str_fqw, str_sdv, str_fky, str_gtw,
          str_toe :(
            !(str_joo, str_siv, str_ddo, str_vfg).
            (not
               (not
                  (NATURAL
                     ({ str_vxv, str_foq, str_uzu, str_cwx, str_fgi, str_bet
                        |
                        str_jus$0 <= str_rpb$0 }) /=
                   {str_cbo$0, str_fbu$0, TRUE, str_llg, str_npi, NATURAL,
                    str_jyv$0})))
          )
        OR
          (fnc
             (inter
                (struct
                   (str_lre: ((str_bha + INTEGER)(str_jvv$0)),
                    str_vuy:
                    { str_clr, str_adu, str_rwd, str_beb
                      |
                      str_ndg$0 /<<: TRUE }))))
            'str_mye
        THEN
          str_pgc 
            (
              bool
                (not
                   (!(str_dwk, str_hut, str_yas, str_stl, str_spn).
                    (#
                       (str_ymv, str_jjr, str_nay, str_wxv, str_mwz, str_tsg,
                        str_wyn, str_zbv, str_jyz).
                     (str_oyx'str_dns /<<: INTEGER))))
                'str_fjh
            )
            (
              [INTER(str_vbn, str_dpx). (str_vdo /<<: str_ora$0| str_rqm$0),
               bool
                 (not
                    (not
                       (not
                          (!
                             (str_mws, str_abv, str_aol, str_ysv, str_hlq,
                              str_ujx, str_bzn).
                           (str_laj$0 > str_xjv))))),
               str_fnx$0]
            )
            (
              struct
                (str_xpv:
                 rec
                   (str_avd: str_bqr,
                    str_ekc: ([] >+> []),
                    str_rne:
                    {struct
                       (str_ytc: str_gsl,
                        str_pcy: str_joj,
                        str_csm: NAT1,
                        str_ijf: str_yig,
                        str_mgu: INTEGER,
                        str_mii: str_mqw$0,
                        str_poo: str_ekq),
                     str_usm,
                     str_rer,
                     str_wlb$0,
                     str_yqu}
                      'str_lch
                      'str_kcg))
            )
            (
              {(([(const(str_fqv)),
                  str_pyo,
                  str_tnj,
                  str_bil,
                  str_rdx,
                  {},
                  str_dbf]
                 ,
                 MAXINT) ->
                {str_vvy$0, str_hho, str_mgv, str_kxk$0, str_ync$0, INTEGER,
                 str_wak}
                  'str_khs)}
            )
            (
              {str_quh$0,
               {rec
                  (str_oom: STRING,
                   str_lqk:
                   { str_eho, str_ecy, str_rgv, str_llz
                     |
                     NATURAL /<: str_scn$0 },
                   str_zpi: [],
                   str_wxh: TRUE,
                   str_pvi: str_qxv$0'str_uto),
                str_unl$0,
                STRING,
                (NATURAL \/ FALSE),
                str_ukf},
               str_njn,
               NAT'str_kao,
               str_cmn}
            )
            (
              struct
                (str_tnn: FALSE,
                 str_fiy: str_quj,
                 str_gaa: [NATURAL1, BOOL, NAT, str_gls, NATURAL, str_ycr$0],
                 str_bot: str_nih,
                 str_uij: str_yxe$0,
                 str_rhx: bool(not(not(NATURAL1 : str_xkh$0))),
                 str_nsw: str_adm$0,
                 str_cpe:
                 struct
                   (str_skk: str_oyj$0,
                    str_xjj: TRUE,
                    str_nak: {str_wjb},
                    str_rwe: {}))
            )
            (
              inter
                (([INTEGER,
                   ([] , [NAT, str_lvo, FALSE, MAXINT, INT]),
                   str_jdb,
                   str_dyu,
                   str_knb$0] +->
                  str_ybd$0)
                   (str_elp , str_dgj$0))
            )
            (
              (NATURAL(str_afs$0)) **
              (({INT, str_jdd, str_ucj$0, str_ost, FALSE, str_zcz, str_kyq$0,
                 str_mkb$0} >->>
                bool(INT >= {} & str_clj <: FALSE)) *
               str_vob)
            )
            (
              [(str_bmg$0 |>> str_gav)]
              ,
              struct
                (str_nli:
                 [{ str_gpu, str_mbw, str_kpb | not(str_gdz$0 < str_ald) }],
                 str_rbr: str_rde)
            )
            (
              rec
                (str_frn: str_rlg$0,
                 str_rkh: BOOL,
                 str_zwl: MAXINT,
                 str_big:
                 (str_fqi
                    ([{ str_nsv, str_bxk, str_dmv, str_kwh, str_orb, str_wxc,
                        str_joz, str_skx, str_ssf, str_erw
                        |
                        str_tia < str_rir$0 }])),
                 str_poh: str_ahv) >+>
              (INTER(str_opk, str_sog, str_fdu, str_fcl, str_ufj, str_zak).
               (str_eof < str_naf| str_igc$0) |>>
               str_nuf)
            )
            (
              struct
                (str_cjy:
                 ([]
                    (struct
                       (str_sav: str_ylk,
                        str_ltr:
                        %(str_tnl, str_vdv, str_ddn, str_pqi, str_ycb).
                        (str_jjo : str_awz$0| str_pan$0),
                        str_sbn: MININT,
                        str_fru: str_obk,
                        str_tue: (str_zbn |-> str_dnf$0)))),
                 str_kch: ((str_xug || NAT'str_reg)))
            )
          
          :=
          SIGMA
            (str_tso, str_iaa, str_cyz, str_cab, str_blr, str_vzm, str_xzg,
             str_akc, str_tcg, str_wkd, str_xtd).
          (#(str_fkb, str_rhc, str_bfp, str_xgl).(not(str_tok = STRING))|
           struct
             (str_syv: BOOL,
              str_mwe:
              rec
                (str_fic: str_tlh,
                 str_yme:
                 struct
                   (str_hmt: str_lat,
                    str_eap: MAXINT,
                    str_bdk: str_qdm$0,
                    str_peq: str_rcn$0,
                    str_puw: [],
                    str_dvx: str_alq)),
              str_zcl: (str_fxp([])),
              str_rcz: NATURAL))
        OR
          rec
            (str_ghk: str_rcr,
             str_fmv: 7,
             str_nrc: str_hau$0,
             str_gmn: str_ero,
             str_dli:
             { str_the, str_xdk, str_uzk, str_ipb
               |
               bool(str_erp$0 >= STRING) /=
               str_sgy <-> (str_vpu$0 |-> str_gth$0) },
             str_nnm:
             { str_hsd, str_xtt, str_nnz, str_ked, str_wnu, str_adm, str_oob,
               str_zer, str_fim, str_csm
               |
               str_wia$0 <: str_klq })
        THEN
          str_jlp, str_cxz, str_uum, str_jkh, str_gdc, str_uee, str_fzn
          ::
          ran
            (UNION
               (str_ipz, str_ykn, str_xtm, str_fzu, str_lfo, str_hrd,
                str_bqg, str_pzb, str_jda, str_hwe).
             (str_vxe$0 /<: str_cph|
              rec
                (str_mmk: rec(str_ffc: MAXINT, str_lql: [], str_uho: MAXINT),
                 str_eqq: str_zju,
                 str_qne: str_xzg$0,
                 str_kou: BOOL,
                 str_qiu: str_vug$0,
                 str_vmv: {str_bum, [], (last(str_tlm$0))},
                 str_spj: (str_vvc$0 , str_bod))))
        OR
          iseq1
            ((rec
                (str_zhb:
                 SIGMA
                   (str_run, str_thy, str_olk, str_nqj, str_duk, str_gnz,
                    str_uga, str_uhu, str_cdf, str_wwa, str_llt).
                 (str_pir >= str_kxj$0| str_smu$0),
                 str_rcw: FALSE,
                 str_jss: MAXINT,
                 str_dld: MAXINT,
                 str_mqz: BOOL,
                 str_pbu: (str_zed$0(INT))) >+>
              (left(str_qfe$0)))
               'str_gha)
        THEN
          str_qvm, str_dmh
          <--
          str_its
            ({str_szq$0,
              ((TRUE |-> str_gfg$0'str_dea) <|
               ([]
                  ([str_xco$0,
                    struct
                      (str_mcf: str_kpf,
                       str_jua: str_ccj,
                       str_trq: STRING,
                       str_jdp: str_hlb,
                       str_ipo: str_jiu$0,
                       str_ohb: str_uco),
                    str_dmr,
                    str_gpc,
                    str_sfj]))),
              NAT,
              INTEGER,
              str_lec$0,
              BOOL,
              str_wka$0,
              MININT},
             (min
                (%(str_bom).
                 (!(str_lbw, str_cky, str_zre).(BOOL <= str_vyt$0)|
                  {str_lvh, bool(str_ncn <: str_xih)} , str_xpc$0))))
        OR
          (str_nrs$0 , NATURAL)
          ,
          rec
            (str_whv: [],
             str_fpn: TRUE,
             str_hjd:
             (str_uzz >->>
              ([{NATURAL1, STRING, str_oyy$0, str_acl, INTEGER}]({}))))
        THEN
          str_hwy, str_nrb, str_sdt, str_jad
          :=
          (str_efd / MININT) -
          (seq1
             ({[str_kwp, [str_sdc, MAXINT]],
               rec(str_sln: str_zug$0, str_joa: str_nfz$0, str_lyj: str_xhc)}))
        ELSE
          str_miz
          ::
          (bool(str_mlr /= str_hzj & str_khc < TRUE) /\ str_tnl$0)
            (%(str_ysf, str_aah, str_ifj). (str_ltx /<<: str_fkj| str_kea)
               (NATURAL1))
        END
      END
    OR
      str_bbl$0
        (iseq
           ({str_fmm$0, bool(str_stx$0 : BOOL), FALSE, str_vvh$0, 8}
            ,
            (size
               ({ str_tlh, str_bxg, str_eym, str_ajc, str_vuf, str_dxe,
                  str_tvl, str_xuz, str_gbp, str_fha
                  |
                  str_vee$0 < str_tdu }))))
    THEN
      str_azi'str_hcu
      :=
      {STRING, str_igz, str_hsx}
      |->
      (str_dwy$0 \|/
       INTER(str_vnq, str_dqq, str_gzk, str_kgq, str_cnt).
       (#(str_atc, str_ipf, str_cjv, str_smd, str_lbh, str_ccr, str_ukt).
        (!(str_ywi, str_xjv, str_vuf).
         (!
            (str_bxr, str_cfu, str_mar, str_ggl, str_qmk, str_foe, str_eld,
             str_mgn).
          (STRING <<: str_okp$0)))|
        str_nsl)) ;
      ASSERT
        !
          (str_iow, str_eah, str_lre, str_fwg, str_fav, str_eaw, str_zdk,
           str_xyq, str_wgt, str_wum).
        (#(str_tyc, str_ijf).
         (#
            (str_hnp, str_wnp, str_nem, str_cww, str_plb, str_zfj, str_igr,
             str_vpj).
          (!
             (str_ssj, str_rcs, str_zus, str_yyb, str_iod, str_ftm, str_mom,
              str_loo, str_evk, str_vuh).
           (#(str_dec, str_lmx, str_zuv, str_niy).
            (str_nck$0 = str_qpg$0 & str_kpv$0 = NAT)))))
      THEN
        CHOICE
          ASSERT
            !
              (str_cth, str_hml, str_cmz, str_zne, str_ypb, str_ipy, str_ugs,
               str_qns).
            (struct
               (str_xqs: str_slt$0,
                str_ado: str_pec,
                str_rgc: str_bde,
                str_pab:
                {str_lut$0, str_hek, str_ujp$0, str_oqr$0, str_nqb$0},
                str_twl: str_kem) <<:
             {(str_qui , str_fgw$0)}'str_ish)
          THEN
            str_udr, str_zwx, str_kgz, str_ljk, str_gpz
            :=
            rec
              (str_iyq:
               rec
                 (str_not: str_qqn$0,
                  str_sjn:
                  struct
                    (str_knu: str_ybt$0,
                     str_qcm: str_ecu$0,
                     str_rqx: str_xom$0,
                     str_agn: str_nhc$0,
                     str_kul: NAT1,
                     str_pep: {}),
                  str_ekf:
                  rec
                    (str_bxr: str_hcg,
                     str_wgz: str_gxa$0,
                     str_xjn: str_iop,
                     str_nzf: str_yfp$0,
                     str_owy: str_gre,
                     str_vwi: INT),
                  str_zpl: str_rjw$0,
                  str_msm: str_sza$0,
                  str_oqy: NATURAL1,
                  str_pau: str_mcj)
                 'str_vyy,
               str_jwe: { str_pjc, str_vvp | str_oui$0 /= BOOL })
              'str_pjy ||
            str_nix, str_wqw, str_nms, str_dhv, str_myd
            <--
            str_axz
              ([str_sph$0,
                (str_cfx , str_tab),
                struct
                  (str_vvf:
                   rec
                     (str_mhs: MAXINT,
                      str_pxs: str_xll$0,
                      str_usf: NATURAL1,
                      str_yam: str_fqc$0,
                      str_bsg: BOOL,
                      str_kei: NAT,
                      str_qbj: str_crs),
                   str_lsy: str_fas,
                   str_qbs: str_eeo,
                   str_aqi:
                   bool
                     (!
                        (str_dng, str_teb, str_zye, str_zct, str_fha,
                         str_rsh, str_ccw, str_zkc, str_pld, str_lti, str_pig).
                      (MAXINT = str_sru)),
                   str_bgz: str_enc$0,
                   str_hvr: str_jva$0,
                   str_ukx: str_wrt$0),
                str_qoa]
                 'str_pjc,
               ((((str_pld >->> TRUE)
                  ,
                  rec(str_taz: str_cqg, str_knv: (str_mty +-> TRUE))) **
                 str_ley)
                  ([](INT))),
               rec
                 (str_nwq:
                  {{},
                   STRING,
                   str_vpn,
                   %
                     (str_njy, str_fuj, str_btf, str_erb, str_tnk, str_mjp,
                      str_ddk, str_map).
                   (str_pcz > str_mck$0|
                    { str_rix, str_idj, str_tpq, str_sug
                      |
                      !(str_kvg, str_owq, str_esb, str_xeg).
                      (!
                         (str_syl, str_krk, str_jfh, str_clh, str_lsx,
                          str_eeq, str_hsz).
                       (!
                          (str_hde, str_dmj, str_pkn, str_buo, str_jpy,
                           str_mia).
                        (INTEGER > NAT))) }),
                   BOOL,
                   INTEGER}))
          END
        OR
          str_xez, str_keq, str_yoy, str_knf, str_nek, str_ncv, str_kgz
          <--
          str_uye
        OR
          str_uzb 
            (
              (STRING <+
               UNION(str_avv, str_wyy, str_jzx).
               (TRUE <= str_whi$0 & str_czw$0 <= []|
                [FALSE, str_bvo$0, NATURAL1, STRING, NATURAL, str_fsi,
                 str_nix$0, str_nwc]))
              |->
              (MININT .. [NAT1, str_rmo$0, str_ebw$0, TRUE, str_eat])
            )
            (
              struct
                (str_wvs: str_tqd,
                 str_qna:
                 rec
                   (str_fyr: [TRUE]'str_ofj, str_xbv: (str_kth |-> "str_nyi")),
                 str_qpl: str_cvt$0,
                 str_fvi:
                 { str_tei, str_cjc, str_huo, str_jct, str_cox, str_pzz,
                   str_fcf, str_qge, str_wmq, str_sqo
                   |
                   str_yww$0 : str_ibv$0 },
                 str_xws: INT)
            )
            (
              struct
                (str_agh: NAT1,
                 str_eox: str_lvg$0,
                 str_qpj: str_cve$0,
                 str_pbj: STRING,
                 str_imx: (str_gdd$0 ** str_dbf),
                 str_fhz: {},
                 str_eca:
                 (str_cob$0(bool(not(str_bxo , str_xsj$0 = str_nmx)))),
                 str_ukw: str_jsx)
            )
            (
              INTER(str_ntm, str_sfh, str_hvf).
              ({ str_vyf | str_gjc$0 <= {} } = MAXINT|
               { str_tsq, str_evb, str_hev, str_gtu, str_qnj, str_ozy,
                 str_pgd
                 |
                 str_brq > MININT => STRING < str_ixo$0 })
                (arity(str_itn$0))
            )
            (
              id
                ([struct
                    (str_ioh: struct(str_rnx: TRUE, str_erq: str_kfl),
                     str_lnx: str_dyn,
                     str_nnt: str_wpv$0,
                     str_rse:
                     INTER(str_qgq, str_iac). (str_yga$0 > MININT| str_vby),
                     str_ohb: str_hqf$0),
                  { str_vjo, str_qwc, str_hlk, str_aix | not(str_ytw$0 > {}) }])
            )
            (
              [PI(str_ino, str_gyr, str_ayw, str_rly).
               (#
                  (str_vgq, str_wbw, str_woj, str_zbm, str_hup, str_ewe,
                   str_orv, str_gjy, str_gpi).
                (str_onh > str_xaj$0 & str_gms$0 <<: NAT)|
                str_tge$0),
               str_kul,
               rec
                 (str_cki: str_ajs$0,
                  str_lwt: str_dsk,
                  str_snq:
                  struct(str_rck: (str_jhu <- str_sje), str_fgw: TRUE),
                  str_gtl: str_vgv$0)]
            )
            (
              dom
                (rec
                   (str_kzc: MAXINT,
                    str_ops:
                    [str_bcp,
                     str_vzw$0,
                     str_gen,
                     str_yqv$0,
                     str_koi$0,
                     str_gjz,
                     (-str_bht$0)],
                    str_xyx: {},
                    str_yak: str_wcl$0,
                    str_ehr: str_kre,
                    str_ffx: [],
                    str_xep:
                    { str_amz, str_uob, str_eow, str_lie, str_rej, str_tkf,
                      str_jwy
                      |
                      !(str_kra).
                      (!(str_aen, str_izw, str_pxg).(INTEGER < INT)) },
                    str_soo: str_jjw$0))
            )
          
          :=
          right
            ([str_hyg'str_xsj,
              FALSE,
              (str_lpi$0 |>
               [str_hda, str_kgy$0, NATURAL, str_xol$0, str_gsk$0, str_dtd]),
              str_rwn$0,
              STRING,
              rec
                (str_sui: str_ets$0,
                 str_ibu: str_xry$0,
                 str_yxr: INTEGER,
                 str_zli: str_pmj,
                 str_iqh: str_kkw$0)
                'str_bvc,
              str_ldr])
        OR
          str_zus'str_nad
          :=
          bool
            (not
               (!
                  (str_mfa, str_ljk, str_cep, str_jlx, str_gip, str_caq,
                   str_emx, str_eoe, str_zoe, str_com).
                (#(str_mvn, str_mis, str_mvj, str_pjg, str_fiw).
                 (not
                    (!
                       (str_wmi, str_qaz, str_prv, str_uzy, str_hmp, str_wpt,
                        str_zxa).
                     (#(str_dbr).(str_wwc <<: NATURAL1)))))))
        END
      END
    END
  END

INITIALISATION
  PRE
    #
      (str_fpv, str_few, str_nby, str_rdh, str_pno, str_nzy, str_wzl,
       str_ntw, str_ptp).
    (!(str_jos, str_bxd, str_wnb, str_tsp, str_dqg).
     (rec
        (str_vwf: str_mnj$0,
         str_qyc: str_lwy$0,
         str_kwh: str_dbh,
         str_xbi: MAXINT,
         str_gxy: str_zxk$0,
         str_wbj: { str_olb, str_wdo, str_bwe, str_cea | NAT1 /<<: STRING },
         str_fcp: str_hvh$0,
         str_plf: str_skz) =
      str_xez$0)) <=>
    not(str_vnl /<<: str_wyg$0)
  THEN
    ANY
      str_nkt, str_qfb, str_vuu, str_zbv, str_oio, str_tkt, str_spc
    WHERE
      not
        (#
           (str_zxm, str_fgi, str_hes, str_kva, str_dor, str_zwv, str_veq,
            str_ccd, str_ich).
         (not
            (#(str_ytd, str_qut, str_qwj, str_jdt, str_ysk, str_afk).
             ((#(str_rrn).(str_tvs /<: str_wmb$0) & str_uyf$0 <<: FALSE) <=>
              str_nhu$0 < str_pyy$0))))
    THEN
      LET
        str_fih, str_kdp
      BE
        str_bpc
        =
        {str_blh$0,
         str_uzh$0,
         str_vgy,
         {},
         %(str_nwp, str_mtd, str_mst).
         (#
            (str_cio, str_wro, str_jip, str_uvc, str_kxs, str_agy, str_vfn,
             str_tow).
          (not(!(str_dul, str_wvh, str_gdu).(MININT /<: str_rwn$0)) or
           str_yda /: "str_glv")|
          { str_xly, str_ard, str_ddp, str_kec, str_qnn, str_hws, str_zol,
            str_edk, str_rzs
            |
            str_kax$0 < BOOL }),
         str_hiq,
         str_sjp}&
        str_pcl
        =
        bool
          (iterate((str_mvs |-> (str_ddy$0 ^ str_rfk$0)) >-> str_zml) =
           { str_yzz, str_ber, str_vaq, str_bce, str_men, str_mna, str_exc,
             str_lxn, str_par, str_gjn, str_jum
             |
             str_kka$0 : str_rwi })&
        str_jnn
        =
        bool
          (not([] /= NATURAL1 <=> str_tid /<: str_ciz) =>
           #
             (str_mgk, str_les, str_lfd, str_cwa, str_ugi, str_nhd, str_dgd,
              str_eyd, str_vbk, str_ngc, str_xbj).
           (!(str_byw, str_yqa, str_urc, str_uha).(str_mku /= str_oxj$0)))
        |->
        str_doi&
        str_bdt
        =
        { str_lmg, str_pcn, str_oul, str_nql, str_scq, str_wob, str_qdp,
          str_ijy, str_hgk
          |
          #
            (str_jto, str_esg, str_ccs, str_hre, str_msd, str_lvy, str_oxb,
             str_eta, str_due, str_avh, str_wst).
          (%
             (str_unl, str_alc, str_hxr, str_iij, str_gyl, str_utn, str_zfg,
              str_ijp).
           (NATURAL1 > str_lhe$0 &
            #
              (str_jxf, str_gde, str_cgd, str_iwu, str_fye, str_dtr, str_aoh,
               str_rdt, str_xsy, str_cgi).
            (FALSE > str_uet)|
            str_yse) <=
           INTER
             (str_lbr, str_rcl, str_gou, str_caj, str_dmm, str_ppm, str_fsy,
              str_ges, str_iag, str_tfu, str_uuo).
           (str_aia >= str_ifm| str_fjc)) }&
        str_mwc
        =
        [{ str_qsl, str_xug, str_zxj, str_psn
           |
           !(str_jsk, str_bbj, str_lzf, str_wdn).
           (not
              ((str_isv <: str_wlq$0 => NATURAL1 < "str_sdp") <=>
               MININT : str_bul$0)) }
           'str_mbl]&
        str_hbe
        =
        [str_loy,
         rec
           (str_vmc: (dom(str_iiu$0)),
            str_omn: str_czm,
            str_bmx: str_nrg,
            str_cdb: str_puf$0,
            str_roh: str_adg),
         INTER(str_jyi, str_oez). (str_gut <: INT| str_vna$0)]
          (seq(str_dub'str_jad))&
        str_ydy
        =
        {bool
           (#(str_rsb, str_nrl, str_kok, str_yww, str_ftl).
            (str_lio$0 /=
             {str_cje, NAT1, str_vlm, TRUE, NATURAL1, str_hfs$0, NAT1}))} ^
        rec(str_qec: str_zij$0, str_chx: str_pvg, str_nlu: str_btb)&
        str_dlr
        =
        struct
          (str_gts:
           ([str_iie,
             {NATURAL,
              rec
                (str_etw: INT,
                 str_fis: str_qcg,
                 str_wsm: str_did,
                 str_ntn: str_shs,
                 str_tqw: str_lly),
              str_hpz'str_mpk}] |>
            rec(str_gqe: MININT, str_ryb: NATURAL1)))&
        str_drm
        =
        rec
          (str_hkc: str_scg,
           str_rab: bool([] /: str_vrv$0 => str_zzo$0 /= INT),
           str_jdp:
           (seq1
              (PI(str_gyz, str_kwl, str_lbj, str_zrn).
               (!(str_odw).(331 /: str_kjd$0)|
                UNION(str_hoq, str_dml, str_pry, str_nps).
                (str_hln$0 >= str_jtb| NATURAL1)))),
           str_jdm: [],
           str_nzc: str_tpt$0,
           str_iha: str_fcj,
           str_zcy: str_bgc,
           str_pjd: str_pme$0)
      IN
        CHOICE
          IF
            !
              (str_zda, str_ecg, str_dqg, str_agd, str_yor, str_ofw, str_aoy,
               str_zxo, str_kiu).
            (not
               (bool
                  (!(str_qtx, str_zwy, str_cqk, str_dtv, str_bxi).
                   (MININT <<: str_hpm))
                  'str_wtd <:
                str_wkh$0(MININT)))
          THEN
            ASSERT
              str_xok
              |->
              [str_mvy,
               INTEGER,
               str_dmv$0,
               str_gck,
               str_xya,
               INTEGER,
               (first(str_txn$0)),
               str_ild$0] <=
              str_tne([STRING, str_vtd, MAXINT, str_jvi$0](str_qxp))
            THEN
              str_hbf, str_cjf, str_hjc, str_mvb, str_cxb, str_ihu, str_mrl
              <--
              str_ltj
                (struct
                   (str_dbv:
                    { str_lpj, str_hxm, str_bqe, str_lsz, str_olu, str_zjq,
                      str_zxl, str_qnx, str_sre, str_dtx, str_mhn
                      |
                      {str_mde$0, str_bzm, NATURAL, str_jxr} /=
                      [SIGMA(str_pox, str_elv, str_ifz, str_bqq, str_zux).
                       (NATURAL1 > str_cfc| str_wrj),
                       (tree(str_wlb)),
                       str_vxg$0] }),
                 (rec
                    (str_pwa:
                     { str_gjw, str_cff, str_mtk, str_uul, str_lav, str_vmg,
                       str_jtz, str_rkk, str_roj, str_uos
                       |
                       not({} <<: []) },
                     str_obi: str_dwq$0,
                     str_nme: MININT) <->
                  bool(str_fxc$0 <= MAXINT => not(str_cmj /<: str_kqs$0))),
                 bool
                   (!(str_sln).
                    (!(str_qja).
                     (#(str_zjd, str_ijt, str_uxv, str_jro).
                      (!
                         (str_zex, str_mzy, str_rev, str_irn, str_acn,
                          str_ood, str_nlu, str_rko, str_dxe, str_avd,
                          str_vqq).
                       (str_lzh$0 /<<: str_hab)) <=>
                      not(NAT < NATURAL1)))),
                 %(str_cnd, str_gao, str_tyw).
                 (str_ckj$0 /<<: str_kuz$0 <=> str_hjx$0 = {}|
                  rec
                    (str_tza: str_ibf$0,
                     str_hpc:
                     (str_hbr$0'str_nri
                        (UNION
                           (str_gcp, str_dlx, str_tmv, str_znq, str_kgg,
                            str_zsx, str_urc, str_rlx, str_dko, str_qvw).
                         (NATURAL1 < str_vkz| str_vha$0))))),
                 ((sons
                     (bool
                        (!(str_okb, str_cdr, str_uzj, str_jxw, str_ddd).
                         (str_idk$0 : MAXINT))))
                    (min
                       ({ str_hmp, str_kzp, str_wtk, str_mmd, str_rzp,
                          str_lcn, str_slz, str_sjc, str_vco
                          |
                          str_mev : str_hop <=> str_yyi <<: 5 }))),
                 ({{TRUE'str_tub, [], str_hwl$0},
                   NATURAL,
                   {},
                   struct(str_xxd: (85(str_sck$0))),
                   {}} **
                  str_kqm$0)
                   'str_ldk,
                 bool
                   (#
                      (str_uie, str_nam, str_tfn, str_asq, str_oro, str_czq,
                       str_tik, str_gea, str_urq).
                    ({ str_jmo, str_pgm, str_pny, str_ydh, str_mjj
                       |
                       str_nkn /=
                       INTER
                         (str_ihv, str_dee, str_fcp, str_zhl, str_tlb,
                          str_vlq, str_pqf, str_qrk, str_edl, str_kfv,
                          str_vbt).
                       (str_mlt$0 /: NATURAL1 <=> str_oma$0 <= str_fsz|
                        MAXINT) } /<:
                     str_yzp)),
                 (bin
                    (struct
                       (str_vse:
                        { str_kxl, str_slv, str_ayx
                          |
                          #(str_dgw).
                          ({ str_giw, str_hoj, str_dcf, str_qdi, str_pgp,
                             str_skm, str_owx
                             |
                             str_sdm$0 > str_lim } <=
                           INT) },
                        str_nxt: struct(str_wqu: MAXINT, str_hpd: str_fjz)))),
                 bool
                   (!
                      (str_yjx, str_pbh, str_pcp, str_unw, str_vrv, str_usx,
                       str_dvg, str_dey).
                    (#(str_gqs, str_ffl).
                     (!
                        (str_upj, str_dqf, str_dkz, str_mvz, str_rgg,
                         str_ycz, str_una).
                      (not
                         (not
                            (#
                               (str_pfz, str_ide, str_dpb, str_jus, str_yda,
                                str_ovt, str_jtm).
                             (str_kun$0 /<: str_xgm))))))))
            END
          ELSIF
            not
              (#
                 (str_wel, str_opa, str_pmz, str_crn, str_hgw, str_cto,
                  str_amq, str_scd, str_byf, str_paf).
               (not
                  (#
                     (str_xgr, str_yvk, str_bgu, str_olp, str_yja, str_xap,
                      str_gbp, str_ycp, str_tng, str_qry, str_hnn).
                   (BOOL - str_odj$0 /: str_fyi$0 , str_cla))))
          THEN
            str_fxa'str_xqe
            :=
            bool
              (!(str_lpt, str_jyc, str_vsj).(FALSE < str_kmy$0) =>
               !(str_srw, str_occ, str_orq, str_kxb, str_dvw).
               (bool(str_dql$0 /<: str_uvk$0)'str_klt = str_fks$0))
          ELSIF
            struct
              (str_vlr: str_xtm,
               str_upk: str_afu,
               str_auo: str_fok,
               str_qbv: str_eee$0,
               str_mhp: str_pfb$0,
               str_ufn: str_pxf$0) <-
            (closure1(bool(str_zpv$0 < str_llh |-> str_jrw))) <<:
            str_sfw$0
          THEN
            str_ijc, str_qyi, str_idc, str_crk, str_wwe, str_alw, str_ynt,
            str_dvv, str_tla, str_rng :(
              !(str_iwg, str_vzx, str_ibq, str_dzc).
              (!(str_hnl, str_hwi, str_ndg).
               (#(str_irw, str_gal, str_siz, str_zug, str_wvv).
                (#
                   (str_yva, str_lle, str_imc, str_lke, str_gnv, str_mnk,
                    str_fxk, str_lhb, str_feb, str_joh).
                 (#(str_ehc, str_pzb, str_qoq, str_xys).
                  (#
                     (str_tsz, str_jgz, str_ujo, str_rwr, str_mdy, str_hqs,
                      str_swl, str_lso, str_enm, str_wgi).
                   (str_bwu$0 /<<: FALSE))))))
            )
          ELSIF
            bool(str_gjg > str_kxj) >
            bool
              ((not(NATURAL1 /<<: str_uoq) & [] >= FALSE) or
               (str_lhn$0 /<<: str_egl$0 & [] /<: str_lcu$0))
          THEN
            str_dqk, str_kts, str_pyu, str_mhl :(
              {bool(str_cid : NAT),
               str_ivj$0,
               struct
                 (str_tdy: str_pld$0,
                  str_zif: str_hhb$0,
                  str_ogf:
                  struct
                    (str_vwr: str_bxi, str_yem: str_ytp$0, str_fqk: str_scu),
                  str_isk: BOOL,
                  str_cbo: str_diq$0,
                  str_ddx: 8,
                  str_cwm: str_yku$0),
               str_fcs$0,
               {}} /<:
              union(str_xdi$0)
            )
          END
        OR
          CHOICE
            str_jip, str_gqs, str_wkp, str_bma
            <--
            str_qyo
              ({(FIN1
                   (rec
                      (str_ugg: str_bts,
                       str_rzh: NATURAL1,
                       str_uij: INTEGER,
                       str_bgs: NAT,
                       str_wed: str_vxa$0,
                       str_glz: str_gei$0,
                       str_pep: str_ppr$0,
                       str_ejl: str_nne))),
                str_bcz$0,
                INT,
                ({str_hjg$0,
                  struct(str_wrh: (str_juc$0(str_kpp))),
                  str_oye$0,
                  str_ynb$0,
                  str_xmx$0}
                   (str_nvy))},
               {MAXINT,
                {TRUE,
                 str_efg,
                 str_vqx,
                 str_qjj$0,
                 struct
                   (str_npk: STRING,
                    str_zyy: str_vjw$0,
                    str_zpl: str_jyd$0,
                    str_nup:
                    { str_zvg, str_tvx, str_uza, str_mkr, str_sut, str_gox
                      |
                      NAT > FALSE }),
                 { str_gli, str_cpr, str_run, str_mmm | MAXINT /<<: str_uhf$0 },
                 struct
                   (str_rhs: str_cql,
                    str_ysl: str_smo,
                    str_eia: str_pyr$0,
                    str_ier: FALSE,
                    str_deu: str_tzu,
                    str_pfd: str_yyl$0,
                    str_yay: str_xgy$0),
                 str_ytz$0},
                bool(str_gtw <<: str_cnw),
                FALSE,
                str_bjj$0},
               (struct
                  (str_yem: bool({} /<: NAT or str_bum$0 /<: str_gzc),
                   str_epd: (rank(str_jmv)),
                   str_mcc: NAT) <+
                { str_klt, str_ear, str_per, str_irr, str_khb, str_nun,
                  str_ifb
                  |
                  !
                    (str_okm, str_hjw, str_lfe, str_izc, str_inq, str_ynp,
                     str_cre, str_ple, str_wcr, str_pwt, str_ftq).
                  (NAT1 /: NAT1) }),
               struct
                 (str_mta: NAT1,
                  str_pmi: NAT,
                  str_xjt: str_lsx'str_sjp,
                  str_ldr: str_fth,
                  str_hgh: str_ahy$0,
                  str_vdw: str_ffq,
                  str_yfi: str_vwc$0,
                  str_euo:
                  [str_bcx,
                   str_nyp$0,
                   str_szn,
                   str_cok$0,
                   NAT,
                   UNION
                     (str_olv, str_rqn, str_ier, str_rni, str_stk, str_vwd,
                      str_yvk, str_laz, str_etn).
                   (str_crt /: STRING| str_vtz$0)
                     'str_svb,
                   str_bzo$0])
                 'str_cyn
                 'str_swn,
               INTER
                 (str_pck, str_jpw, str_ovl, str_eed, str_nfa, str_sag,
                  str_kqx, str_ebu).
               (not
                  (str_ciy /<<:
                   [str_mhs,
                    INTEGER,
                    MAXINT,
                    str_xdo,
                    str_zyh,
                    (NAT1 >->> str_uld$0),
                    NATURAL1] =>
                   !(str_bni, str_klq, str_owl, str_ylr, str_wqg).
                   (str_brj$0 >= str_nqo$0))|
                str_eeb))
          OR
            str_dox'str_yyq
            :=
            btree
              (struct
                 (str_oig: NAT,
                  str_sne: str_ona,
                  str_pta: str_uwj$0,
                  str_jjg: str_doq,
                  str_cmr: NATURAL1,
                  str_ffr: MININT)
                 'str_ktn
               |->
               bool
                 (!
                    (str_qog, str_arm, str_hka, str_ywb, str_yer, str_nwm,
                     str_iuo, str_yoo, str_sjs, str_bwk, str_hhy).
                  (!
                     (str_ntc, str_flp, str_uhs, str_fur, str_gpk, str_hfe,
                      str_hom, str_beo, str_mum, str_qam).
                   (str_flg$0 > MININT))))
          OR
            skip
          OR
            str_cih
              (struct
                 (str_zjy: str_onc$0,
                  str_yge: (NATURAL1(MAXINT)),
                  str_nvx:
                  rec
                    (str_apg: str_evn,
                     str_orp: INTEGER,
                     str_smv: str_eva$0,
                     str_zwd: str_qao$0,
                     str_lhf: bool(str_pqy$0 <: str_qgq$0)),
                  str_wko:
                  {(BOOL(rec(str_csf: str_fdf, str_xjf: str_asl$0))),
                   str_kqf$0,
                   str_bmc$0,
                   BOOL}))
          OR
            skip
          END
        END
      END
    END
  END

ASSERTIONS
  #(str_dne, str_ciz).
  (!
     (str_kvi, str_eiy, str_pip, str_wqn, str_hsc, str_ojo, str_fhh, str_cid,
      str_txo, str_egg, str_lln).
   (not
      (!(str_fke, str_yfy, str_gqr).
       (!(str_nhr, str_jpf, str_hhz, str_tsn, str_foe).
        (#(str_ona, str_kwg, str_qzz).
         (str_vwz$0 /= str_lod$0 <=> str_vto$0 /<<: {}))))));
  !(str_jff, str_hej, str_oej, str_mca, str_qgl, str_mji, str_zjs, str_vtt).
  (not(arity(TRUE |-> str_oft$0) /<<: (str_lou ; (str_auc , str_ryi$0))));
  !(str_nxb, str_wtr, str_yod, str_jjt, str_ovn, str_snm).
  (!(str_cpr).
   ({ str_egc, str_uxe, str_mzh, str_phe, str_ljd, str_rzj, str_fvp, str_jrb,
      str_qlz
      |
      str_iyo$0 /= NAT }
      'str_jee >=
    str_zug'str_kid or
    str_pzu = str_spr));
  not
    ({struct(str_kdz: str_xgl, str_dkr: str_gra$0, str_qul: str_zmm),
      {}'str_wts,
      NAT1,
      (NATURAL , STRING)} /<:
     str_mcq(str_dct));
  !(str_bsb, str_abb, str_kmu, str_bjy, str_vru, str_uhs, str_jfu).
  (#(str_mec, str_klf, str_ypz, str_jhk, str_ekp, str_stw, str_pmu).
   (not
      (#
         (str_lds, str_bbg, str_hrx, str_udl, str_atz, str_xtn, str_iys,
          str_nls, str_ajt, str_gsn).
       (str_eby$0 > str_wxa) or
       str_bhf <<: bool(str_kpr = str_dvn$0))));
  #(str_gfd, str_fsn, str_vif, str_cpa, str_kvr, str_cxm).
  (!(str_nqp, str_uqy, str_muf, str_gcm, str_zjh, str_hct).
   (MAXINT , str_eoy <:
    rec
      (str_qgj: {},
       str_fdw: (MININT |-> NATURAL),
       str_kfq: str_zum$0,
       str_dcd: str_upx,
       str_lie: str_lav,
       str_tfg: TRUE'str_lqn)))

VARIABLES
  str_gte, str_pxn, str_whj, str_ikp, str_fvm, str_ljo, str_bcl, str_cmu,
  str_yra, str_pre

CONCRETE_VARIABLES
  str_cjy, str_abr, str_bru, str_gsf, str_rmm, str_qwt, str_yqo

PROPERTIES
  str_acv =
  ((str_uka$0 |-> [str_ole, str_qxx, str_qht, str_eqe$0, str_nkr, FALSE]) ;
   (top
      (str_fwn$0
       |->
       PI
         (str_rhb, str_zph, str_iub, str_ncy, str_cws, str_qnl, str_rug,
          str_mle, str_zam, str_oid).
       (str_gzk$0 >= str_xwt| str_jmv$0))))

ABSTRACT_CONSTANTS
  str_zyc, str_xfp

CONSTANTS
  str_zzc, str_cas, str_fwn

SETS
  str_upa;
  str_jvi;
  str_cvy;
  
    str_agz
    =
    {
      str_dcl, str_oun, str_red, str_zwq, str_kca, str_cpk, str_bkf, str_ilp,
      str_iea, str_wum
    }
  

EXTENDS
  str_wtt (
    struct
      (str_cjk: (size(str_ysi)),
       str_qfp: str_ydc$0,
       str_jqw:
       { str_mzo, str_yhs, str_zov, str_ggk, str_per, str_atg
         |
         !(str_ewf, str_wcr, str_cie).
         (str_gxu /<<: str_sls & NATURAL1 <<: str_dlu$0) },
       str_lqc:
       (rec
          (str_wzf: str_wbb,
           str_pop: str_lta,
           str_yhk: NAT,
           str_rms: str_smu,
           str_qdr: str_ztu,
           str_pko: str_lhb$0,
           str_xaj: [],
           str_acd: STRING)
          (str_pyl$0)))
  ),
  str_qto,
  str_qyk (
    {str_ofx$0,
     SIGMA
       (str_hvt, str_jnd, str_zsh, str_zyp, str_eap, str_yte, str_igr,
        str_lqj, str_cnw, str_ytk).
     (!(str_sab, str_vve, str_eah, str_qfs, str_zxd, str_wud).
      (not(INTEGER /<<: str_isd$0)) &
      NATURAL = str_myu|
      NATURAL1),
     str_xkq,
     %(str_yqk, str_xso). (str_cgg$0 = str_huz$0| TRUE),
     INT,
     str_rua},
    struct
      (str_lhy: str_wjq,
       str_vts:
       rec
         (str_sqi: {},
          str_ydc:
          {{str_ffq$0, str_bwf$0, {}, str_ike},
           struct
             (str_koi: str_uwo,
              str_mmg:
              { str_keh, str_gzx, str_yfq, str_yme, str_lgb, str_lnu
                |
                str_jqc <: str_mkv })}
            'str_npf,
          str_bho: str_cgx$0,
          str_fqr: str_lsd),
       str_zio: str_tpj,
       str_nzi: str_cnt$0,
       str_ewx: str_tfv)
  )

SEES
  str_avi, str_lnc, str_vqa, str_wus

END 